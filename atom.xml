<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tan_Blog</title>
  
  
  <link href="https://tanblog.cc/atom.xml" rel="self"/>
  
  <link href="https://tanblog.cc/"/>
  <updated>2023-01-28T18:24:18.878Z</updated>
  <id>https://tanblog.cc/</id>
  
  <author>
    <name>言云纪</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nacos 集群搭建</title>
    <link href="https://tanblog.cc/2023/01/27/Linux/nacos-cluster/"/>
    <id>https://tanblog.cc/2023/01/27/Linux/nacos-cluster/</id>
    <published>2023-01-26T19:27:53.000Z</published>
    <updated>2023-01-28T18:24:18.878Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-基础环境快速配置"><a href="#一-基础环境快速配置" class="headerlink" title="一. 基础环境快速配置"></a>一. 基础环境快速配置</h1><p><img src="https://www.helloimg.com/images/2023/01/29/oRgtz5.jpg" alt="docker_logo"></p><ol><li>安装docker<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#yum安装docker并不弹出是否确认</span><br>yum install docker -y  <br><span class="hljs-comment">#检查是否安装成功 </span><br>docker -v   <br></code></pre></td></tr></table></figure></li></ol><p><img src="https://www.helloimg.com/images/2023/01/29/oRgA50.png" alt="yum安装docker"></p><ol start="2"><li>拉取docker镜像<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 拉取指定版本镜像</span><br>docker pull nginx:latest<br>docker pull mysql:5.7<br>docker pull nacos/nacos-server:v2.1.0<br><span class="hljs-comment"># 查看镜像</span><br>docker images<br></code></pre></td></tr></table></figure></li></ol><p><img src="https://www.helloimg.com/images/2023/01/29/oRgLsm.png" alt="查看镜像"></p><ol><li>创建bridge网络并指定ip区间<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建自定义网络</span><br>docker network create --driver bridge \<br>--subnet 10.10.0.0/16 \<br>--gateway 10.10.0.1 nacos_network<br> <br><span class="hljs-comment"># 查看已存在网络</span><br>docker network <span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><blockquote><p>–driver  网络模式</p><p>–subnet  网段以及子网掩码位数</p><p>–gatway  网关地址</p><p>nacos_network 自定义网络名称</p></blockquote></li></ol><h1 id="二-安装mysql"><a href="#二-安装mysql" class="headerlink" title="二. 安装mysql"></a>二. 安装mysql</h1><p><img src="https://www.helloimg.com/images/2023/01/29/oRgSdh.png" alt="mysql_logo"></p><ol><li>创建数据卷<blockquote><p>数据卷（Data Volumes）是宿主机中的一个目录或文件，数据卷的设计目的就是数据的持久化，完全独立于容器的生存周期，因此Docker不会在容器删除时删除其挂载的数据卷。当容器目录和数据卷目录绑定后，对方的修改会立即同步，一个数据卷可以被多个容器同时挂载，一个容器也可以被挂载多个数据卷。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 用于存放数据库中的data数据，方便迁移备份</span><br>docker volume create mysql_data<br><span class="hljs-comment"># 用于存放mysql的配置文件，修改后重启容器即可生效</span><br>docker volume create mysql_conf<br><span class="hljs-comment"># 查看docker中所有数据卷</span><br>docker volume <span class="hljs-built_in">ls</span><br><span class="hljs-comment"># 查看指定数据卷挂载的宿主机的地址</span><br>docker volume 卷名<br></code></pre></td></tr></table></figure></li><li>创建mysql容器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --name mysql_master \<br>-v mysql_data:/var/lib/mysql \<br>-v mysql_conf:/etc/mysql \<br>--network nacos_network \<br>--ip 10.10.0.33 \<br>-e MYSQL_ROOT_PASSWORD=123456 \<br>-p 3306:3306 \<br>-d mysql:5.7<br></code></pre></td></tr></table></figure><blockquote><p>–name    为容器起一个名称</p><p>-v       将容器中的指定卷挂载到容器，可以是宿主机路径</p><p>-e        指定容器环境变量</p><p>MYSQL_ROOT_PASSWORD   设置数据库密码</p><p>-p        将容器中的3306端口映射到宿主机的3306端口</p><p>-d        挂载镜像，格式为image:tag</p></blockquote></li></ol><p><img src="https://www.helloimg.com/images/2023/01/29/oRgiYc.png" alt="远程连接测试"></p><h1 id="三-安装nacos集群"><a href="#三-安装nacos集群" class="headerlink" title="三. 安装nacos集群"></a>三. 安装nacos集群</h1><p><a href="https://www.helloimg.com/image/oR8qXT"><img src="https://www.helloimg.com/images/2023/01/28/oR8qXT.png" alt="nacos_logo"></a></p><ol><li>创建数据卷<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 因为我是伪集群搭建，所以直接在一个宿主机拉三个数据卷存放！</span><br>docker volume create nacos_8848_2.1.0<br>docker volume create nacos_8849_2.1.0<br>docker volume create nacos_8850_2.1.0<br></code></pre></td></tr></table></figure></li><li>搭建nacos伪集群<blockquote><p>ps：下文中三段命令基本一致，主要修改以下4点</p><ul><li><p>-p 端口暴露（非必要，可以删除该指令！主要就是通过nginx的反向代理docker容器的网络就再把nginx的80端口暴露出来就可以了！笔者是在vmvare上搭建的 1C1G 的虚拟机，启动集群系统差点崩溃然后nginx反向代理我就不演示了。有兴趣的小伙伴可以自己动手尝试去做一下！）</p></li><li><p>–ip 给容器分配ip地址，切记不能多个容器使用同一个ip！</p></li><li><p>-v 挂载卷，因为每个nacos容器都有一份独立的log日志，分开方便运维!</p></li><li><p>–name 容器名</p></li></ul></blockquote></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nacos 1</span><br>bash<br>docker run  -p 8848:8848 \<br>--ip 10.10.0.48 \<br>-v nacos_8848_v2.1.:/home/nacos \<br>--name nacos_8848_2.1.0 \<br>--network nacos_network \<br>-e NACOS_SERVERS=<span class="hljs-string">&quot;10.10.0.48:8848 10.10.0.49:8848 10.10.0.50:8848&quot;</span> \<br>-e SPRING_DATASOURCE_PLATFORM=mysql_master \<br>-e MYSQL_SERVICE_HOST=10.10.0.33 \<br>-e MYSQL_SERVICE_PORT=3306 \<br>-e MYSQL_SERVICE_DB_NAME=nacos \<br>-e MYSQL_SERVICE_USER=root \<br>-e MYSQL_SERVICE_PASSWORD=123456 \<br>-e JVM_XMS=128m -e JVM_XMX=128m -e JVM_XMN=64m \<br>–restart=always<br>-d nacos/nacos-server:v2.1.0<br><br><span class="hljs-comment"># nacos 2</span><br>docker run  -p 8849:8848 \<br>--ip 10.10.0.49 \<br>-v nacos_8849_v2.1.:/home/nacos \<br>--name nacos_8849_2.0.1 \<br>--network nacos_network \<br>-e NACOS_SERVERS=<span class="hljs-string">&quot;10.10.0.48:8848 10.10.0.49:8848 10.10.0.50:8848&quot;</span> \<br>-e SPRING_DATASOURCE_PLATFORM=mysql_master \<br>-e MYSQL_SERVICE_HOST=10.10.0.33 \<br>-e MYSQL_SERVICE_PORT=3306 \<br>-e MYSQL_SERVICE_DB_NAME=nacos \<br>-e MYSQL_SERVICE_USER=root \<br>-e MYSQL_SERVICE_PASSWORD=123456 \<br>-e JVM_XMS=128m -e JVM_XMX=128m -e JVM_XMN=64m \<br>–restart=always<br>-d nacos/nacos-server:v2.1.0<br><br><span class="hljs-comment"># nacos 3</span><br>docker run  -p 8850:8848 \<br>--ip 10.10.0.50 \<br>-v nacos_8850_v2.1.:/home/nacos \<br>--name nacos_8850_2.0.1 \<br>--network nacos_network \<br>-e NACOS_SERVERS=<span class="hljs-string">&quot;10.10.0.48:8848 10.10.0.49:8848 10.10.0.50:8848&quot;</span> \<br>-e SPRING_DATASOURCE_PLATFORM=mysql_master \<br>-e MYSQL_SERVICE_HOST=10.10.0.33 \<br>-e MYSQL_SERVICE_PORT=3306 \<br>-e MYSQL_SERVICE_DB_NAME=nacos \<br>-e MYSQL_SERVICE_USER=root \<br>-e MYSQL_SERVICE_PASSWORD=123456 \<br>-e JVM_XMS=128m -e JVM_XMX=128m -e JVM_XMN=64m \<br>–restart=always<br>-d nacos/nacos-server:v2.1.0<br><br></code></pre></td></tr></table></figure><p><a href="https://www.helloimg.com/image/oR8x21"><img src="https://www.helloimg.com/images/2023/01/28/oR8x21.png" alt="集群启动图片"></a></p>]]></content>
    
    
    <summary type="html">使用Docker搭建Nacos集群</summary>
    
    
    
    <category term="Linux运维日记" scheme="https://tanblog.cc/categories/Linux%E8%BF%90%E7%BB%B4%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="Nacos" scheme="https://tanblog.cc/tags/Nacos/"/>
    
    <category term="分布式集群" scheme="https://tanblog.cc/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4/"/>
    
    <category term="Docker" scheme="https://tanblog.cc/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序video标签默认播放控件重写</title>
    <link href="https://tanblog.cc/2023/01/11/front_out/uniapp-video/"/>
    <id>https://tanblog.cc/2023/01/11/front_out/uniapp-video/</id>
    <published>2023-01-11T04:52:04.294Z</published>
    <updated>2023-01-11T07:19:27.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>微信小程序开发中，会经常遇到video默认播放控件重写的问题。本文将以uniapp框架演示如何进行重写video默认控件！<br>ps：请根据自己实际需求书写代码，本文仅演示进度条部分以起到构思学习作用，文末将放出完整代码</p></blockquote><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><blockquote><p>首先定义一个video，并根据官网文档设置视频自动播放、不显示所以默认控件以及创建出video上下文的 videoContext对象</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;page&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">video</span> </span><br><span class="hljs-tag"><span class="hljs-attr">id</span>=<span class="hljs-string">&quot;video&quot;</span> </span><br><span class="hljs-tag"><span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;true&quot;</span> </span><br><span class="hljs-tag"><span class="hljs-attr">:controls</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cn-gddg-ct-01-12.bilivideo.com/upgcxcode/27/52/203125227/203125227-1-16.mp4?e=ig8euxZM2rNcNbRVhwdVhwdlhWdVhwdVhoNvNC8BqJIzNbfq9rVEuxTEnE8L5F6VnEsSTx0vkX8fqJeYTj_lta53NCM=&amp;uipk=5&amp;nbs=1&amp;deadline=1673419811&amp;gen=playurlv2&amp;os=bcache&amp;oi=730548909&amp;trid=00003c00dee95a3045b1a744e28849c8ca3ch&amp;mid=0&amp;platform=html5&amp;upsig=c780dea18a2a0e07ce8baa3636f92f27&amp;uparams=e,uipk,nbs,deadline,gen,os,oi,trid,mid,platform&amp;cdnid=61312&amp;bvc=vod&amp;nettype=0&amp;bw=58193&amp;logo=80000000&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">video</span>&#123;<br><span class="hljs-attribute">width</span>:<span class="hljs-number">100%</span>;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>页面打开后执行如下js创建出video上下文的Context对象！</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">video</span> = uni.<span class="hljs-title function_">createVideoContext</span>(<span class="hljs-string">&#x27;video&#x27;</span>,<span class="hljs-variable language_">this</span>)<br>&#125;,<br></code></pre></td></tr></table></figure><h1 id="定义进度条"><a href="#定义进度条" class="headerlink" title="定义进度条"></a>定义进度条</h1><blockquote><p>根据<a href="https://uniapp.dcloud.net.cn/component/slider.html#slider">uniapp-slider官方文档</a>为slider绑定min、max、value、以及@change事件和@changing事件</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">slider</span> <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;slider.max&quot;</span> <span class="hljs-attr">:min</span>=<span class="hljs-string">&quot;slider.min&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;slider.value&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;videochange&quot;</span> @<span class="hljs-attr">changing</span>=<span class="hljs-string">&quot;videochangeing&quot;</span> <span class="hljs-attr">block-size</span>=<span class="hljs-string">&quot;12&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>编写slider对应事件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">slider</span>:&#123;<br><span class="hljs-attr">min</span>:<span class="hljs-number">0</span>,<br><span class="hljs-attr">max</span>:<span class="hljs-number">0</span>,<br><span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,<br>&#125;,<br><span class="hljs-attr">center</span>:&#123;<br><span class="hljs-attr">time</span>:<span class="hljs-string">&quot;00:00/00:00&quot;</span>,<br><span class="hljs-attr">show</span>:<span class="hljs-string">&quot;none&quot;</span><br>&#125;<br>&#125;<br>&#125;,<br><span class="hljs-attr">methods</span>: &#123;<br><span class="hljs-title function_">videochange</span>(<span class="hljs-params">e</span>)&#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">video</span>.<span class="hljs-title function_">seek</span>(e.<span class="hljs-property">detail</span>.<span class="hljs-property">value</span>)<br>&#125;,<br><span class="hljs-title function_">videochangeing</span>(<span class="hljs-params">e</span>)&#123;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">video</span>.<span class="hljs-title function_">stop</span>()<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">video</span>.<span class="hljs-title function_">seek</span>(e.<span class="hljs-property">detail</span>.<span class="hljs-property">value</span>)<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">video</span>.<span class="hljs-title function_">play</span>()<br>&#125;,<br><span class="hljs-title function_">timeupdate</span>(<span class="hljs-params">e</span>)&#123;<br><span class="hljs-comment">// 获取视频的长度以及播放进度（单位：s）</span><br><span class="hljs-variable language_">this</span>.<span class="hljs-property">slider</span>.<span class="hljs-property">max</span> = e.<span class="hljs-property">detail</span>.<span class="hljs-property">duration</span>;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">slider</span>.<span class="hljs-property">value</span> = e.<span class="hljs-property">detail</span>.<span class="hljs-property">currentTime</span>;<br><span class="hljs-variable language_">this</span>.<span class="hljs-property">center</span>.<span class="hljs-property">time</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">time</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">slider</span>.<span class="hljs-property">value</span>))+<span class="hljs-string">&quot;/&quot;</span>+ <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">time</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">slider</span>.<span class="hljs-property">max</span>));<br>&#125;,<br><span class="hljs-comment">// 字符串格式化为时间格式</span><br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span>未进行补零</span><br><span class="hljs-title function_">time</span>(<span class="hljs-params">num</span>)&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parseInt</span>(num / <span class="hljs-number">60</span>)+<span class="hljs-string">&quot;:&quot;</span>+num % <span class="hljs-number">60</span><br>&#125;,<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><blockquote><p>本文重点在于css的绝对定位（fixed）、垂直布局写法。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;page&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">video</span> </span><br><span class="hljs-tag"><span class="hljs-attr">id</span>=<span class="hljs-string">&quot;video&quot;</span> </span><br><span class="hljs-tag"><span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;true&quot;</span> </span><br><span class="hljs-tag"><span class="hljs-attr">:controls</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">@<span class="hljs-attr">timeupdate</span>=<span class="hljs-string">&quot;timeupdate&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cn-gddg-ct-01-12.bilivideo.com/upgcxcode/27/52/203125227/203125227-1-16.mp4?e=ig8euxZM2rNcNbRVhwdVhwdlhWdVhwdVhoNvNC8BqJIzNbfq9rVEuxTEnE8L5F6VnEsSTx0vkX8fqJeYTj_lta53NCM=&amp;uipk=5&amp;nbs=1&amp;deadline=1673419811&amp;gen=playurlv2&amp;os=bcache&amp;oi=730548909&amp;trid=00003c00dee95a3045b1a744e28849c8ca3ch&amp;mid=0&amp;platform=html5&amp;upsig=c780dea18a2a0e07ce8baa3636f92f27&amp;uparams=e,uipk,nbs,deadline,gen,os,oi,trid,mid,platform&amp;cdnid=61312&amp;bvc=vod&amp;nettype=0&amp;bw=58193&amp;logo=80000000&quot;</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 视频中间 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>&#123;&#123;center.time&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 视频下方 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">slider</span> <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;slider.max&quot;</span> <span class="hljs-attr">:min</span>=<span class="hljs-string">&quot;slider.min&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;slider.value&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;videochange&quot;</span> @<span class="hljs-attr">changing</span>=<span class="hljs-string">&quot;videochangeing&quot;</span> <span class="hljs-attr">block-size</span>=<span class="hljs-string">&quot;12&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript"><span class="hljs-attr">slider</span>:&#123;</span><br><span class="language-javascript"><span class="hljs-attr">min</span>:<span class="hljs-number">0</span>,</span><br><span class="language-javascript"><span class="hljs-attr">max</span>:<span class="hljs-number">0</span>,</span><br><span class="language-javascript"><span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">center</span>:&#123;</span><br><span class="language-javascript"><span class="hljs-attr">time</span>:<span class="hljs-string">&quot;00:00/00:00&quot;</span>,</span><br><span class="language-javascript"><span class="hljs-attr">show</span>:<span class="hljs-string">&quot;none&quot;</span></span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"></span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">video</span> = uni.<span class="hljs-title function_">createVideoContext</span>(<span class="hljs-string">&#x27;video&#x27;</span>,<span class="hljs-variable language_">this</span>)</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">videochange</span>(<span class="hljs-params">e</span>)&#123;</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">video</span>.<span class="hljs-title function_">seek</span>(e.<span class="hljs-property">detail</span>.<span class="hljs-property">value</span>)</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-title function_">videochangeing</span>(<span class="hljs-params">e</span>)&#123;</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">video</span>.<span class="hljs-title function_">stop</span>()</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">video</span>.<span class="hljs-title function_">seek</span>(e.<span class="hljs-property">detail</span>.<span class="hljs-property">value</span>)</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">video</span>.<span class="hljs-title function_">play</span>()</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-title function_">timeupdate</span>(<span class="hljs-params">e</span>)&#123;</span><br><span class="language-javascript"><span class="hljs-comment">// 获取视频的长度以及播放进度（单位：s）</span></span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">slider</span>.<span class="hljs-property">max</span> = e.<span class="hljs-property">detail</span>.<span class="hljs-property">duration</span>;</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">slider</span>.<span class="hljs-property">value</span> = e.<span class="hljs-property">detail</span>.<span class="hljs-property">currentTime</span>;</span><br><span class="language-javascript"><span class="hljs-variable language_">this</span>.<span class="hljs-property">center</span>.<span class="hljs-property">time</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">time</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">slider</span>.<span class="hljs-property">value</span>))+<span class="hljs-string">&quot;/&quot;</span>+ <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">time</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">slider</span>.<span class="hljs-property">max</span>));</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-comment">// 字符串格式化为时间格式</span></span><br><span class="language-javascript"><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span>未进行补零</span></span><br><span class="language-javascript"><span class="hljs-title function_">time</span>(<span class="hljs-params">num</span>)&#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> <span class="hljs-built_in">parseInt</span>(num / <span class="hljs-number">60</span>)+<span class="hljs-string">&quot;:&quot;</span>+num % <span class="hljs-number">60</span></span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">video</span>&#123;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.bottom</span>&#123;</span><br><span class="language-css"><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css"><span class="hljs-attribute">position</span>: fixed;</span><br><span class="language-css"><span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.center</span>&#123;</span><br><span class="language-css"><span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css"><span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css"><span class="hljs-attribute">height</span>: <span class="hljs-number">50vh</span>;</span><br><span class="language-css"><span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="language-css"> <span class="hljs-attribute">justify-content</span>: center; </span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.center</span> text&#123;</span><br><span class="language-css"><span class="hljs-attribute">color</span>: white;</span><br><span class="language-css"></span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.display-block</span>&#123;</span><br><span class="language-css"><span class="hljs-attribute">display</span>: block;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.display-none</span>&#123;</span><br><span class="language-css"><span class="hljs-attribute">display</span>: none;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;微信小程序开发中，会经常遇到video默认播放控件重写的问题。本文将以uniapp框架演示如何进行重写video默</summary>
      
    
    
    
    <category term="前端" scheme="https://tanblog.cc/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="uniapp" scheme="https://tanblog.cc/tags/uniapp/"/>
    
    <category term="video重写" scheme="https://tanblog.cc/tags/video%E9%87%8D%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot动态域名解析的实现</title>
    <link href="https://tanblog.cc/2023/01/03/java/springboot-ddns/"/>
    <id>https://tanblog.cc/2023/01/03/java/springboot-ddns/</id>
    <published>2023-01-02T16:36:06.902Z</published>
    <updated>2023-01-02T17:12:46.242Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><blockquote><ol><li>一个动态公网IPv4&#x2F;v6地址（v4需要到宽带所属营业厅自行付费申请，v6则保证公网IP即可）</li><li>域名（腾讯云）</li><li>一个Springboot项目</li></ol></blockquote><h1 id="Maven依赖引入"><a href="#Maven依赖引入" class="headerlink" title="Maven依赖引入"></a>Maven依赖引入</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--lombok--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- hutool工具库 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>cn.hutool<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hutool-all<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.8.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 腾讯云 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.tencentcloudapi<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>tencentcloud-sdk-java-dnspod<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1.322<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="本地公网IPv4获取"><a href="#本地公网IPv4获取" class="headerlink" title="本地公网IPv4获取"></a>本地公网IPv4获取</h1><blockquote><p>笔者电脑网卡比较多，一个个测试比较麻烦且可能出现BUG，所以偷了个懒直接调用别人写好的接口<a href="https://api.vvhan.com/api/getIpInfo">点击查询本地IPv4地址</a></p></blockquote><blockquote><p>静态工具类IPUtils.java<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IPUtils</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">ip</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">HttpResponse</span> <span class="hljs-variable">httpres</span> <span class="hljs-operator">=</span> HttpUtil.createGet(<span class="hljs-string">&quot;https://api.vvhan.com/api/getIpInfo&quot;</span>).execute();<br>        <span class="hljs-type">HashMap</span> <span class="hljs-variable">hashmap</span> <span class="hljs-operator">=</span> JSONUtil.toBean(httpres.body().toString(), HashMap.class);<br>        <span class="hljs-keyword">return</span> hashmap.get(<span class="hljs-string">&quot;ip&quot;</span>).toString();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></p></blockquote><h1 id="pojo实体类与静态配置文件"><a href="#pojo实体类与静态配置文件" class="headerlink" title="pojo实体类与静态配置文件"></a>pojo实体类与静态配置文件</h1><blockquote><p>TencentCloud.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;tencentcloud&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TencentCloud</span> &#123;<br>    <span class="hljs-keyword">private</span> String secretId;<br>    <span class="hljs-keyword">private</span> String secretKey;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>AnalysisInfo.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;analysisinfo&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AnalysisInfo</span> &#123;<br>    <span class="hljs-keyword">private</span> String domain;<br>    <span class="hljs-keyword">private</span> String subDomain;<br>    <span class="hljs-keyword">private</span> Long recordId;<br>    <span class="hljs-keyword">private</span> String recordLine;<br>    <span class="hljs-keyword">private</span> String recordLineId;<br>    <span class="hljs-keyword">private</span> String url;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>application.properties（请自行修改值）</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment">#腾讯云api密钥信息（打开链接获取：https://console.cloud.tencent.com/cam/capi）</span><br><span class="hljs-attr">tencentcloud.secret-id</span>=<span class="hljs-string">腾讯云secret-id</span><br><span class="hljs-attr">tencentcloud.secret-key</span>=<span class="hljs-string">腾讯云secret-key</span><br><span class="hljs-comment">#DNS解析默认配置信息</span><br><span class="hljs-attr">analysisinfo.domain</span>=<span class="hljs-string">“你的域名”</span><br><span class="hljs-attr">analysisinfo.sub-domain</span>=<span class="hljs-string">“主机记录值”</span><br><span class="hljs-attr">analysisinfo.record-id</span>=<span class="hljs-string">&quot;打开链接查询https://cloud.tencent.com/document/api/1427/56166&quot;</span><br><span class="hljs-attr">analysisinfo.record-line</span>=<span class="hljs-string">默认</span><br><span class="hljs-attr">analysisinfo.record-line-id</span>=<span class="hljs-string">0</span><br><span class="hljs-attr">analysisinfo.url</span>=<span class="hljs-string">dnspod.tencentcloudapi.com</span><br></code></pre></td></tr></table></figure><h1 id="service接口以及实现类"><a href="#service接口以及实现类" class="headerlink" title="service接口以及实现类"></a>service接口以及实现类</h1><blockquote><p>DnsService.java 接口类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">DnsService</span> &#123;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">dnsAnalysis</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> TencentCloudSDKException;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>DnsServiceImpl.java 接口实现类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service(&quot;dnsService&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DnsServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">DnsService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> TencentCloud tencentCloud;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> AnalysisInfo analysisInfo;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">dnsAnalysis</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> TencentCloudSDKException &#123;<br>        <span class="hljs-type">Credential</span> <span class="hljs-variable">cred</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Credential</span>(tencentCloud.getSecretId(), tencentCloud.getSecretKey());<br>        <span class="hljs-type">HttpProfile</span> <span class="hljs-variable">httpProfile</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HttpProfile</span>();<br>        httpProfile.setEndpoint(analysisInfo.getUrl());<br>        <span class="hljs-type">ClientProfile</span> <span class="hljs-variable">clientProfile</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClientProfile</span>();<br>        clientProfile.setHttpProfile(httpProfile);<br>        <span class="hljs-type">DnspodClient</span> <span class="hljs-variable">client</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DnspodClient</span>(cred, <span class="hljs-string">&quot;&quot;</span>, clientProfile);<br>        <span class="hljs-comment">// 实例化一个请求对象,每个接口都会对应一个request对象</span><br>        <span class="hljs-type">ModifyDynamicDNSRequest</span> <span class="hljs-variable">req</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModifyDynamicDNSRequest</span>();<br>        req.setDomain(analysisInfo.getDomain());<br>        req.setSubDomain(analysisInfo.getSubDomain());<br>        req.setRecordId(analysisInfo.getRecordId());<br>        req.setRecordLine(analysisInfo.getRecordLine());<br>        req.setRecordLineId(analysisInfo.getRecordLineId());<br>        req.setValue(IPUtils.ip());<br><span class="hljs-comment">//            req.setTtl(600L);</span><br>        <span class="hljs-comment">// 返回的resp是一个ModifyDynamicDNSResponse的实例，与请求对象对应</span><br>        <span class="hljs-type">ModifyDynamicDNSResponse</span> <span class="hljs-variable">resp</span> <span class="hljs-operator">=</span> client.ModifyDynamicDNS(req);<br><span class="hljs-comment">//        return ModifyDynamicDNSResponse.toJsonString(resp);</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;修改解析记录值成功！&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="controller控制器"><a href="#controller控制器" class="headerlink" title="controller控制器"></a>controller控制器</h1><blockquote><p>DnsController.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;dnscontroller&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DnsController</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> DnsService dnsService;<br>    <span class="hljs-meta">@GetMapping(&quot;/dns&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">dns</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> TencentCloudSDKException &#123;<br>        <span class="hljs-keyword">return</span> dnsService.dnsAnalysis();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h1><blockquote><p>笔者后续会放入cloud服务中写自己的Demo，所以采用api定时调用的形式。</p></blockquote><blockquote><p>DNSTimerConfig.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@EnableScheduling</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DNSTimerConfig</span> &#123;<br>    <span class="hljs-meta">@Scheduled(cron = &quot;0 0 0/1 * * ? &quot;)</span> <span class="hljs-comment">// 每一小时执行一次</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">go</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;开始&quot;</span>);<br>        <span class="hljs-type">HttpResponse</span> <span class="hljs-variable">httpres</span> <span class="hljs-operator">=</span> HttpUtil.createGet(<span class="hljs-string">&quot;http://127.0.0.1:8080/dnscontroller/dns&quot;</span>).execute();<br>        System.out.println(httpres.body().toString());<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h1&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;一个动态公网IPv4&amp;#x2F;v6地址（v4需要到宽带所属营业厅自行付费申请，v6则</summary>
      
    
    
    
    <category term="Springboot" scheme="https://tanblog.cc/categories/Springboot/"/>
    
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="API" scheme="https://tanblog.cc/tags/API/"/>
    
    <category term="ddns" scheme="https://tanblog.cc/tags/ddns/"/>
    
    <category term="腾讯云" scheme="https://tanblog.cc/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云入驻</title>
    <link href="https://tanblog.cc/2022/12/24/think_aloud/Tcloud/"/>
    <id>https://tanblog.cc/2022/12/24/think_aloud/Tcloud/</id>
    <published>2022-12-23T16:38:45.684Z</published>
    <updated>2022-12-23T16:38:45.684Z</updated>
    
    <content type="html"><![CDATA[<p>我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=3u6v6dritvuos">https://cloud.tencent.com/developer/support-plan?invite_code=3u6v6dritvuos</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：&lt;a href=&quot;https://cloud.tencent.com/developer/support-plan?invite_code=3u6v6dritvuos&quot;&gt;https://cloud.tencent.com</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>冒泡排序</title>
    <link href="https://tanblog.cc/2022/12/05/java/algorithm1/"/>
    <id>https://tanblog.cc/2022/12/05/java/algorithm1/</id>
    <published>2022-12-05T10:14:51.340Z</published>
    <updated>2022-12-05T11:03:21.606Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>比较相邻的元素。如果第一个比第二个大，就交换他们两个。对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。针对所有的元素重复以上的步骤，除了最后一个。持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</p></blockquote><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MaopaoDemo</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span>[] list1 = &#123;<span class="hljs-number">8</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">88</span>,<span class="hljs-number">10</span>&#125;;<br><span class="hljs-comment">//        int[] list1 = &#123;1,2,3,4,5,6,7,8&#125;;</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; j &lt; list1.length - <span class="hljs-number">1</span>; j++)&#123;<br>            <span class="hljs-comment">// 记录是否发生交换</span><br>            <span class="hljs-type">Boolean</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; list1.length - <span class="hljs-number">1</span> - j; i++) &#123;<br>                <span class="hljs-comment">// 交换</span><br>                <span class="hljs-keyword">if</span> (list1[i] &gt; list1[i+<span class="hljs-number">1</span>])&#123;<br>                    <span class="hljs-type">int</span> <span class="hljs-variable">min</span> <span class="hljs-operator">=</span> list1[i+<span class="hljs-number">1</span>];<br>                    <span class="hljs-type">int</span> <span class="hljs-variable">max</span> <span class="hljs-operator">=</span> list1[i];<br>                    list1[i] = min;<br>                    list1[i+<span class="hljs-number">1</span>] = max;<br>                    flag = <span class="hljs-literal">true</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-comment">// 如果没有发生交换，程序结束！</span><br>            <span class="hljs-keyword">if</span>(!flag)&#123;<br>                System.out.println(<span class="hljs-string">&quot;冒泡结束，最终结果为：&quot;</span>+Arrays.toString(list1));<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            System.out.println(<span class="hljs-string">&quot;第&quot;</span>+j+<span class="hljs-string">&quot;次冒泡，结果为：&quot;</span>+Arrays.toString(list1));<br><br>        &#125;<br><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">用Java实现冒泡排序并做优化</summary>
    
    
    
    <category term="算法" scheme="https://tanblog.cc/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="冒泡排序" scheme="https://tanblog.cc/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>十一. websocker服务与ws请求头拦截器</title>
    <link href="https://tanblog.cc/2022/11/18/project/online/onlinevideo-11/"/>
    <id>https://tanblog.cc/2022/11/18/project/online/onlinevideo-11/</id>
    <published>2022-11-18T02:42:14.559Z</published>
    <updated>2022-11-18T02:42:14.559Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这两个月有点累，我就不做代码解释了。直接上代码！另外这篇文章代码有一些待优化的地方，如下</p><ol><li>服务逻辑类的switch块待改成反射</li><li>房主退出连接应该将房间权限赋给其他人</li></ol></blockquote><h1 id="ws配置"><a href="#ws配置" class="headerlink" title="ws配置"></a>ws配置</h1><blockquote><p>WebSocketConfigurer.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cc.tanblog.online.config;<br><br><span class="hljs-keyword">import</span> cc.tanblog.online.socket.MyWebSocketHandler;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.web.socket.WebSocketHandler;<br><span class="hljs-keyword">import</span> org.springframework.web.socket.config.annotation.EnableWebSocket;<br><span class="hljs-keyword">import</span> org.springframework.web.socket.config.annotation.WebSocketConfigurer;<br><span class="hljs-keyword">import</span> org.springframework.web.socket.config.annotation.WebSocketHandlerRegistry;<br><br><span class="hljs-keyword">import</span> javax.annotation.Resource;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span> Ocean_IT</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Email</span> 14312400@qq.com</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Data</span> 2022/8/16 9:42</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@EnableWebSocket</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebSocketConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebSocketConfigurer</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 注入拦截器</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> MyHandshakeInterceptor myHandshakeInterceptor;<br><br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerWebSocketHandlers</span><span class="hljs-params">(WebSocketHandlerRegistry webSocketHandlerRegistry)</span> &#123;<br><br>        webSocketHandlerRegistry<br>                <span class="hljs-comment">//添加myHandler消息处理对象，和websocket访问地址</span><br>                .addHandler(myHandler(), <span class="hljs-string">&quot;/ws&quot;</span>)<br>                <span class="hljs-comment">//设置允许跨域访问</span><br>                .setAllowedOrigins(<span class="hljs-string">&quot;*&quot;</span>)<br>                <span class="hljs-comment">//添加拦截器可实现用户链接前进行权限校验等操作</span><br>                .addInterceptors(myHandshakeInterceptor);<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> WebSocketHandler <span class="hljs-title function_">myHandler</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyWebSocketHandler</span>();<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="ws请求头拦截器"><a href="#ws请求头拦截器" class="headerlink" title="ws请求头拦截器"></a>ws请求头拦截器</h1><blockquote><p>MyHandshakeInterceptor.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cc.tanblog.online.config;<br><br><span class="hljs-keyword">import</span> cc.tanblog.online.dao.CreateRoomDao;<br><span class="hljs-keyword">import</span> cc.tanblog.online.dao.UserDao;<br><span class="hljs-keyword">import</span> cc.tanblog.online.dao.VideoroomDao;<br><span class="hljs-keyword">import</span> cc.tanblog.online.entity.User;<br><span class="hljs-keyword">import</span> cc.tanblog.online.entity.Videoroom;<br><span class="hljs-keyword">import</span> cc.tanblog.online.util.TokenUtils;<br><span class="hljs-keyword">import</span> org.apache.juli.logging.Log;<br><span class="hljs-keyword">import</span> org.apache.juli.logging.LogFactory;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.http.server.ServerHttpRequest;<br><span class="hljs-keyword">import</span> org.springframework.http.server.ServerHttpResponse;<br><span class="hljs-keyword">import</span> org.springframework.http.server.ServletServerHttpRequest;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><span class="hljs-keyword">import</span> org.springframework.web.socket.WebSocketHandler;<br><span class="hljs-keyword">import</span> org.springframework.web.socket.server.HandshakeInterceptor;<br><br><br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span> Ocean_IT</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Email</span> 14312400@qq.com</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Data</span> 2022/8/16 14:31</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyHandshakeInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">HandshakeInterceptor</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Log</span> <span class="hljs-variable">logger</span> <span class="hljs-operator">=</span> LogFactory.getLog(GlobalExceptionHandler.class);<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserDao userDao;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> VideoroomDao videoroomDao;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 握手之前，若返回false，则不建立链接 *</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> request</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> response</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> wsHandler</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> attributes</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">beforeHandshake</span><span class="hljs-params">(ServerHttpRequest request, ServerHttpResponse</span><br><span class="hljs-params">            response, WebSocketHandler wsHandler, Map&lt;String, Object&gt; attributes)</span> &#123;<br><br>        <span class="hljs-comment">//将用户id放入socket处理器的会话(WebSocketSession)中</span><br>        <span class="hljs-type">ServletServerHttpRequest</span> <span class="hljs-variable">serverHttpRequest</span> <span class="hljs-operator">=</span> (ServletServerHttpRequest) request;<br><br>        <span class="hljs-keyword">try</span>&#123;<br>            <span class="hljs-comment">//获取参数</span><br>            <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userDao.get_user(TokenUtils.getOpenid(serverHttpRequest.getServletRequest().getHeader(<span class="hljs-string">&quot;token&quot;</span>)));<br>            attributes.put(<span class="hljs-string">&quot;md5_openid&quot;</span>,user.getOpenid());<br>            attributes.put(<span class="hljs-string">&quot;uName&quot;</span>,user.getUName());<br>        &#125;<span class="hljs-keyword">catch</span>(Exception e)&#123;<br>            logger.error(<span class="hljs-string">&quot;ws链接token认证失败&quot;</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br><br>        List&lt;Videoroom&gt; videoroom = videoroomDao.get_videoroom(Long.valueOf(serverHttpRequest.getServletRequest().getParameter(<span class="hljs-string">&quot;vrid&quot;</span>)));<br>        <span class="hljs-comment">// 如果查询结果总数等于0则房间号验证失败</span><br>        <span class="hljs-keyword">if</span>(videoroom.size() == <span class="hljs-number">0</span>)&#123;<br>            logger.error(<span class="hljs-string">&quot;ws链接未查询到房间&quot;</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        attributes.put(<span class="hljs-string">&quot;vr_id&quot;</span>, videoroom.get(<span class="hljs-number">0</span>).getVrId().toString());<br>        logger.info(<span class="hljs-string">&quot;开始握手&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterHandshake</span><span class="hljs-params">(ServerHttpRequest request, ServerHttpResponse</span><br><span class="hljs-params">            response, WebSocketHandler wsHandler, Exception exception)</span> &#123;<br>        logger.info(<span class="hljs-string">&quot;握手完成&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="websocket服务逻辑"><a href="#websocket服务逻辑" class="headerlink" title="websocket服务逻辑"></a>websocket服务逻辑</h1><blockquote><p>MyWebSocketHandler.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cc.tanblog.online.socket;<br><br><br><span class="hljs-keyword">import</span> cc.tanblog.online.dao.CreateRoomDao;<br><span class="hljs-keyword">import</span> cc.tanblog.online.dao.UserDao;<br><span class="hljs-keyword">import</span> cc.tanblog.online.entity.CreateRoom;<br><span class="hljs-keyword">import</span> cc.tanblog.online.entity.SocketClient;<br><span class="hljs-keyword">import</span> cc.tanblog.online.service.SocketService;<br><span class="hljs-keyword">import</span> cc.tanblog.online.util.SocketUtils;<br><span class="hljs-keyword">import</span> cn.hutool.json.JSONUtil;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.socket.CloseStatus;<br><span class="hljs-keyword">import</span> org.springframework.web.socket.TextMessage;<br><span class="hljs-keyword">import</span> org.springframework.web.socket.WebSocketSession;<br><span class="hljs-keyword">import</span> org.springframework.web.socket.handler.TextWebSocketHandler;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.concurrent.ConcurrentHashMap;<br><span class="hljs-keyword">import</span> java.util.concurrent.atomic.AtomicInteger;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span> Ocean_IT</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Email</span> 14312400@qq.com</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Data</span> 2022/8/16 14:34</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyWebSocketHandler</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">TextWebSocketHandler</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> SocketService socketService;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserDao userDao;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> CreateRoomDao createRoomDao;<br><br>    <span class="hljs-comment">//静态变量，用来记录当前在线连接数。应该把它设计成线程安全的。</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">AtomicInteger</span> <span class="hljs-variable">onlineNum</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AtomicInteger</span>();<br>    <span class="hljs-comment">//concurrent包的线程安全Set，用来存放每个客户端对应的WebSocketServer对象。</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> ConcurrentHashMap&lt;String, WebSocketSession&gt; sessionPools = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcurrentHashMap</span>&lt;&gt;();<br>    <span class="hljs-comment">// 房间人数记录</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">HashMap</span> <span class="hljs-variable">roomNum</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleTextMessage</span><span class="hljs-params">(WebSocketSession session, TextMessage message)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-comment">//<span class="hljs-doctag">TODO:</span> 接收消息</span><br>        <span class="hljs-type">SocketClient</span> <span class="hljs-variable">socketClient</span> <span class="hljs-operator">=</span> JSONUtil.toBean(message.getPayload(), SocketClient.class);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">md5_openid</span> <span class="hljs-operator">=</span> session.getAttributes().get(<span class="hljs-string">&quot;md5_openid&quot;</span>).toString();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">vrid</span> <span class="hljs-operator">=</span> session.getAttributes().get(<span class="hljs-string">&quot;vr_id&quot;</span>).toString();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">switch</span> (socketClient.getType())&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;BARRAGE&quot;</span> :<br>                <span class="hljs-comment">//<span class="hljs-doctag">XXX:</span>&#123;&quot;type&quot;:&quot;BARRAGE&quot;,&quot;msg&quot;:&quot;弹幕消息&quot;&#125;</span><br>                msg = SocketUtils.BARRAGE_MSG(session.getAttributes().get(<span class="hljs-string">&quot;md5_openid&quot;</span>).toString(),userDao.get_user(md5_openid),socketClient.getMsg());<br>                sendMessageToAll_room(msg,session.getAttributes().get(<span class="hljs-string">&quot;vr_id&quot;</span>).toString());<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;PROGRESS&quot;</span>:<br>                <span class="hljs-comment">//<span class="hljs-doctag">XXX:</span> &#123;&quot;type&quot;:&quot;PROGRESS&quot;,&quot;num&quot;:&quot;进度条数字&quot;&#125;</span><br>                List&lt;CreateRoom&gt; createRoomList = createRoomDao.get_createRoomList(md5_openid);<br>                <span class="hljs-keyword">if</span>(createRoomList.size() == <span class="hljs-number">0</span>)&#123;<br>                    msg = SocketUtils.DEFAULT_MSG();<br>                    session.sendMessage(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TextMessage</span>(msg));<br>                &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(createRoomList.get(<span class="hljs-number">0</span>).getVrId().toString().equals(vrid))&#123;<br>                    System.out.println(<span class="hljs-string">&quot;----------&quot;</span>);<br>                    msg = SocketUtils.PROGRESS_MSG(session.getAttributes().get(<span class="hljs-string">&quot;md5_openid&quot;</span>).toString(),socketClient.getNum().toString());<br><span class="hljs-comment">//                    sendMessageToAll_room(msg,session.getAttributes().get(&quot;vr_id&quot;).toString());</span><br>                    sendMessageToAll_roomDelMy(msg,session.getAttributes().get(<span class="hljs-string">&quot;vr_id&quot;</span>).toString(),session);<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;PING&quot;</span>:<br>                <span class="hljs-comment">//xxx:&#123;&quot;type&quot;:&quot;PING&quot;&#125;</span><br>                msg = SocketUtils.PONG_MSG();<br>                session.sendMessage(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TextMessage</span>(msg));<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                msg = SocketUtils.DEFAULT_MSG();<br>                session.sendMessage(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TextMessage</span>(msg));<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterConnectionEstablished</span><span class="hljs-params">(WebSocketSession session)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 用户首次建立连接</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">md5_openid</span> <span class="hljs-operator">=</span> session.getAttributes().get(<span class="hljs-string">&quot;md5_openid&quot;</span>).toString();<br>        <span class="hljs-comment">//关闭重复连接</span><br>        <span class="hljs-keyword">if</span>(sessionPools.get(md5_openid)!=<span class="hljs-literal">null</span>)&#123;<br>            sessionPools.get(md5_openid).close();<br>        &#125;<br>        sessionPools.put(md5_openid, session);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">room</span> <span class="hljs-operator">=</span> session.getAttributes().get(<span class="hljs-string">&quot;vr_id&quot;</span>).toString();<br>        addOnlineCount(room);<br>        <span class="hljs-comment">// 发送房间信息(私发)</span><br>        session.sendMessage(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TextMessage</span>(SocketUtils.SYSTEM_MSG(socketService.get_videoroomInfo(Long.valueOf(room)),userDao.get_user(md5_openid))));<br>        <span class="hljs-comment">// 房间欢迎广播(指定房间,需要获取用户信息)</span><br>        sendMessageToAll_room(<br>                SocketUtils.WELCOME_MSG(<span class="hljs-string">&quot;欢迎 &quot;</span> + session.getAttributes().get(<span class="hljs-string">&quot;uName&quot;</span>).toString() + <span class="hljs-string">&quot;加入房间！&quot;</span>,userDao.get_user(md5_openid),roomNum.get(room).toString()),<br>                session.getAttributes().get(<span class="hljs-string">&quot;vr_id&quot;</span>).toString()<br>        );<br>    &#125;<br><br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterConnectionClosed</span><span class="hljs-params">(WebSocketSession session, CloseStatus status)</span><br>            <span class="hljs-keyword">throws</span> Exception &#123;<br>        System.out.println(<span class="hljs-string">&quot;断开连接!&quot;</span>);<br>        sessionPools.remove(session.getAttributes().get(<span class="hljs-string">&quot;md5_openid&quot;</span>).toString());<br>        <span class="hljs-type">String</span> <span class="hljs-variable">room</span> <span class="hljs-operator">=</span> session.getAttributes().get(<span class="hljs-string">&quot;vr_id&quot;</span>).toString();<br>        subOnlineCount(room);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> session.getAttributes().get(<span class="hljs-string">&quot;uName&quot;</span>).toString() + <span class="hljs-string">&quot;已退出房间！&quot;</span>;<br>        sendMessageToAll_room(SocketUtils.QUIT_MSG(msg,roomNum.get(room).toString()),session.getAttributes().get(<span class="hljs-string">&quot;vr_id&quot;</span>).toString());<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加链接人数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addOnlineCount</span><span class="hljs-params">(String room)</span> &#123;<br>        onlineNum.incrementAndGet();<br>        <span class="hljs-keyword">if</span>(roomNum.containsKey(room))&#123;<br>            roomNum.put(room,Integer.parseInt(String.valueOf(roomNum.get(room)))+<span class="hljs-number">1</span>);<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            roomNum.put(room,<span class="hljs-number">1</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 移除链接人数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">subOnlineCount</span><span class="hljs-params">(String room)</span> &#123;<br>        onlineNum.decrementAndGet();<br>        roomNum.put(room,Integer.parseInt(String.valueOf(roomNum.get(room)))-<span class="hljs-number">1</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定聊天室群发</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMessageToAll_room</span><span class="hljs-params">(String msg,String vrId)</span> &#123;<br>        sessionPools.forEach((id, session) -&gt; &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">if</span>(session.getAttributes().get(<span class="hljs-string">&quot;vr_id&quot;</span>).toString().equals(vrId))&#123;<br>                    session.sendMessage(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TextMessage</span>(msg));<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定聊天室群发</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMessageToAll_roomDelMy</span><span class="hljs-params">(String msg,String vrId,WebSocketSession session1)</span> &#123;<br>        sessionPools.forEach((id, session) -&gt; &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">if</span>(session.getAttributes().get(<span class="hljs-string">&quot;vr_id&quot;</span>).toString().equals(vrId)&amp;&amp;session1.getAttributes().get(<span class="hljs-string">&quot;md5_openid&quot;</span>).equals(session.getAttributes().get(<span class="hljs-string">&quot;md5_openid&quot;</span>))!=<span class="hljs-literal">true</span>)&#123;<br>                    session.sendMessage(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TextMessage</span>(msg));<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="websocket静态方法工具类"><a href="#websocket静态方法工具类" class="headerlink" title="websocket静态方法工具类"></a>websocket静态方法工具类</h1><blockquote><p>SocketUtils.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cc.tanblog.online.util;<br><br><span class="hljs-keyword">import</span> cc.tanblog.online.entity.User;<br><span class="hljs-keyword">import</span> cn.hutool.json.JSONUtil;<br><br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span> Ocean_IT</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Email</span> 14312400@qq.com</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@Data</span> 2022/10/8 20:12</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SocketUtils</span> &#123;<br>    <span class="hljs-comment">//    系统消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">SYSTEM_MSG</span><span class="hljs-params">(Object data, User user)</span>&#123;<br>        Map&lt;String,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;type&quot;</span>,<span class="hljs-string">&quot;SYSTEM&quot;</span>);<br>        map.put(<span class="hljs-string">&quot;data&quot;</span>,data);<br>        map.put(<span class="hljs-string">&quot;userinfo&quot;</span>,user);<br>        <span class="hljs-keyword">return</span> JSONUtil.toJsonStr(map);<br>    &#125;<br>    <span class="hljs-comment">//  欢迎消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">WELCOME_MSG</span><span class="hljs-params">(String msg, User user,String roomNum)</span>&#123;<br>        Map&lt;String,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;type&quot;</span>,<span class="hljs-string">&quot;WELCOME&quot;</span>);<br>        map.put(<span class="hljs-string">&quot;msg&quot;</span>,msg);<br>        map.put(<span class="hljs-string">&quot;userinfo&quot;</span>,user);<br>        map.put(<span class="hljs-string">&quot;roomPersonCount&quot;</span>,roomNum);<br>        <span class="hljs-keyword">return</span> JSONUtil.toJsonStr(map);<br>    &#125;<br>    <span class="hljs-comment">// 退出房间消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">QUIT_MSG</span><span class="hljs-params">(String msg,String roomNum)</span>&#123;<br>        Map&lt;String,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;type&quot;</span>,<span class="hljs-string">&quot;QUIT&quot;</span>);<br>        map.put(<span class="hljs-string">&quot;msg&quot;</span>,msg);<br>        map.put(<span class="hljs-string">&quot;roomPersonCount&quot;</span>,roomNum);<br>        <span class="hljs-keyword">return</span> JSONUtil.toJsonStr(map);<br>    &#125;<br>    <span class="hljs-comment">//  弹幕消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">BARRAGE_MSG</span><span class="hljs-params">(String to,User user,String msg)</span>&#123;<br>        Map&lt;String,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;type&quot;</span>,<span class="hljs-string">&quot;BARRAGE&quot;</span>);<br>        map.put(<span class="hljs-string">&quot;msg&quot;</span>,msg);<br>        map.put(<span class="hljs-string">&quot;to&quot;</span>,to);<br>        map.put(<span class="hljs-string">&quot;userinfo&quot;</span>,user);<br>        <span class="hljs-keyword">return</span> JSONUtil.toJsonStr(map);<br>    &#125;<br>    <span class="hljs-comment">//    进度条</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">PROGRESS_MSG</span><span class="hljs-params">(String to,String num)</span>&#123;<br>        Map&lt;String,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;type&quot;</span>,<span class="hljs-string">&quot;PROGRESS&quot;</span>);<br>        map.put(<span class="hljs-string">&quot;to&quot;</span>,to);<br>        map.put(<span class="hljs-string">&quot;num&quot;</span>,num);<br>        <span class="hljs-keyword">return</span> JSONUtil.toJsonStr(map);<br>    &#125;<br>    <span class="hljs-comment">// 心跳包</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">PONG_MSG</span><span class="hljs-params">()</span>&#123;<br>        Map&lt;String,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;type&quot;</span>,<span class="hljs-string">&quot;PONG&quot;</span>);<br>        <span class="hljs-keyword">return</span> JSONUtil.toJsonStr(map);<br>    &#125;<br>    <span class="hljs-comment">// 默认</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>  String <span class="hljs-title function_">DEFAULT_MSG</span><span class="hljs-params">()</span>&#123;<br>        Map&lt;String,Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;type&quot;</span>,<span class="hljs-string">&quot;ERROR&quot;</span>);<br>        map.put(<span class="hljs-string">&quot;msg&quot;</span>,<span class="hljs-string">&quot;你发送的请求错误！&quot;</span>);<br>        <span class="hljs-keyword">return</span> JSONUtil.toJsonStr(map);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这两个月有点累，我就不做代码解释了。直接上代码！另外这篇文章代码有一些待优化的地方，如下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务逻辑类的switch块待改成反射&lt;/li&gt;
&lt;li&gt;房主退出连接应该将房间权限赋给其他人&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockq</summary>
      
    
    
    
    <category term="Springboot" scheme="https://tanblog.cc/categories/Springboot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/Springboot/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="拦截器" scheme="https://tanblog.cc/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
    <category term="websocket" scheme="https://tanblog.cc/tags/websocket/"/>
    
  </entry>
  
  <entry>
    <title>在线影院后端Bug小计</title>
    <link href="https://tanblog.cc/2022/10/14/project/online/online-bug/"/>
    <id>https://tanblog.cc/2022/10/14/project/online/online-bug/</id>
    <published>2022-10-14T15:24:17.844Z</published>
    <updated>2022-10-14T15:53:05.693Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>该期文章主要记录在线影院前端页面编写中遇到的后端逻辑BUG</p></blockquote><h1 id="一-修改视频信息（22-x2F-10-x2F-14）"><a href="#一-修改视频信息（22-x2F-10-x2F-14）" class="headerlink" title="一. 修改视频信息（22&#x2F;10&#x2F;14）"></a>一. 修改视频信息（22&#x2F;10&#x2F;14）</h1><ol><li>后端返回如下：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;code&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;500&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;未查询到你要修改的视频！&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li>后端逻辑如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">put_video</span><span class="hljs-params">(Video video, String token)</span>&#123;<br>    List&lt;UploadVideo&gt; uploadVideo =  uploadVideoDao.get_openid(TokenUtils.getOpenid(token));<br>    Assert.isTrue(uploadVideo.size()!=<span class="hljs-number">0</span>,<span class="hljs-string">&quot;未检测到你上传的视频。&quot;</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; uploadVideo.size(); i++)&#123;<br>        System.out.println(<span class="hljs-string">&quot;-----1----&quot;</span>);<br>        <span class="hljs-keyword">if</span>(uploadVideo.get(i).getVid()==video.getVid())&#123;<br>            Assert.isTrue(videoDao.put_vid(video),<span class="hljs-string">&quot;视频修改失败！&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;-----2------&quot;</span>);<br>            <span class="hljs-keyword">return</span> RespGenerator.success_noData(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> RespGenerator.fail(<span class="hljs-string">&quot;500&quot;</span>,<span class="hljs-string">&quot;未查询到你要修改的视频！&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li><li>错误原因<blockquote><p>video实体类的vid字段为Long长整型，因为Long是long的包装类，long却是属于基本数据类型。<br>所以以上代码就变成了对象地址和对象地址做比较运算，故都返回false！</p></blockquote></li><li>解决办法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"># 第一种：将对象转为基本数据类型再做比较<br>uploadVideo.get(i).getVid().longValue()==video.getVid().longValue()<br># 第二种：使用xx.equals方法（xx.equals方法中也是调用xxValue方法，Integer类同理）<br>uploadVideo.get(i).getVid().equals(video.getVid())<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">Bug合集</summary>
    
    
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="杂谈" scheme="https://tanblog.cc/categories/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="BUG" scheme="https://tanblog.cc/tags/BUG/"/>
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/tags/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>杂谈一：前端设置绝对定位后滚动条失效的解决办法</title>
    <link href="https://tanblog.cc/2022/10/12/front_out/zt1/"/>
    <id>https://tanblog.cc/2022/10/12/front_out/zt1/</id>
    <published>2022-10-12T03:09:42.652Z</published>
    <updated>2022-10-12T03:09:42.652Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><blockquote><p>微信小程序开发中为父元素设置背景图，子元素不能滚动</p></blockquote><h1 id="公共css样式"><a href="#公共css样式" class="headerlink" title="公共css样式"></a>公共css样式</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style&gt;<br><span class="hljs-selector-class">.fu</span>&#123;<br>  <span class="hljs-attribute">background</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;https://xxx.png&quot;</span>);<br>  <span class="hljs-attribute">width</span>:<span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>:<span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">background-size</span>: <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>;<br><span class="hljs-attribute">background-repeat</span>: no-repeat;<br><span class="hljs-attribute">z-index</span>: -<span class="hljs-number">999</span>;<br><span class="hljs-attribute">position</span>: fixed;<br>  &#125;<br>  <span class="hljs-selector-class">.zi</span>&#123;<br>  <span class="hljs-attribute">width</span>:<span class="hljs-number">70%</span>;<br>  <span class="hljs-attribute">height</span>:<span class="hljs-number">120vh</span>;<br>  <span class="hljs-attribute">background</span>:red;<br>  &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h1 id="错误示例"><a href="#错误示例" class="headerlink" title="错误示例"></a>错误示例</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fu&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">scroll-view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;zi&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">scroll-view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fu&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scroll-view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;zi&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">scroll-view</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><blockquote><p>子元素继承父元素属性，导致背景绝对定位无法滑动！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;微信小程序开发中为父元素设置背景图，子元素不能滚动&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;公共css</summary>
      
    
    
    
    <category term="前端" scheme="https://tanblog.cc/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="BUG" scheme="https://tanblog.cc/tags/BUG/"/>
    
    <category term="前端" scheme="https://tanblog.cc/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>十.Springboot实现用户文件的上传</title>
    <link href="https://tanblog.cc/2022/10/07/project/online/onlinevideo-10/"/>
    <id>https://tanblog.cc/2022/10/07/project/online/onlinevideo-10/</id>
    <published>2022-10-07T00:21:07.316Z</published>
    <updated>2022-10-07T00:39:14.849Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>文件的上传采用的是<code>MultipartFile</code>工具类进行获取的，最后将流保存为临时文件以异步的形式保存到腾讯云cos服务！<br>ps：（本期只贴出关于文件上传块的代码，数据持久层代码将不展示！无外呼增删改查，没啥特别的操作！）</p></blockquote><h1 id="对象存储工具类（cos）"><a href="#对象存储工具类（cos）" class="headerlink" title="对象存储工具类（cos）"></a>对象存储工具类（cos）</h1><h2 id="pom依赖引入"><a href="#pom依赖引入" class="headerlink" title="pom依赖引入"></a>pom依赖引入</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">optional</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">optional</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--腾讯云--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.qcloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>cos_api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.6.24<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="编写yam文件"><a href="#编写yam文件" class="headerlink" title="编写yam文件"></a>编写yam文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yam">cos:<br>  #存储桶访问域名<br>  baseUrl: https://xxxxxxxxxxxxxxxxxxx.com<br>  accessKey: AKxxxxxxxxxxxxxxxxxxxpUu4ze4<br>  secretKey: FF0xxxxxxxxxxxxx90<br>  #存储桶地区<br>  regionName: ap-shanghai<br>  #存储桶名字<br>  bucketName: oxxxx-xxxxxxx0<br>  #上传文件前缀路径(eg:/images/)<br>  folderPrefix: /images<br></code></pre></td></tr></table></figure><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-comment">// 自动注入yam</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;cos&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">COSConfig</span> &#123;<br>    <span class="hljs-keyword">private</span> String baseUrl;<br>    <span class="hljs-keyword">private</span> String accessKey;<br>    <span class="hljs-keyword">private</span> String secretKey;<br>    <span class="hljs-keyword">private</span> String regionName;<br>    <span class="hljs-keyword">private</span> String bucketName;<br>    <span class="hljs-keyword">private</span> String folderPrefix;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CosUtils</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> COSClient <span class="hljs-title function_">newCosClient</span><span class="hljs-params">(COSConfig cosConfig)</span>&#123;<br>        <span class="hljs-comment">// 初始化用户身份信息(secretId, secretKey)</span><br>        <span class="hljs-type">COSCredentials</span> <span class="hljs-variable">cred</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BasicCOSCredentials</span>(cosConfig.getAccessKey(),cosConfig.getSecretKey());<br>        <span class="hljs-comment">// 设置bucket的区域, COS地域的简称请参照 https://www.qcloud.com/document/product/436/6224</span><br>        <span class="hljs-type">ClientConfig</span> <span class="hljs-variable">clientConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClientConfig</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Region</span>(cosConfig.getRegionName()));<br>        <span class="hljs-comment">// 生成cos客户端</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">COSClient</span>(cred, clientConfig);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FileUtils</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@Description</span> 创建临时文件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@Return</span> filepath</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@Date</span> 2022/10/7 3:13</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> File <span class="hljs-title function_">transferToFile</span><span class="hljs-params">(MultipartFile multipartFile)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">originalFilename</span> <span class="hljs-operator">=</span> multipartFile.getOriginalFilename();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">prefix</span> <span class="hljs-operator">=</span> originalFilename.split(<span class="hljs-string">&quot;\\.&quot;</span>)[<span class="hljs-number">0</span>];<br>        <span class="hljs-type">String</span> <span class="hljs-variable">suffix</span> <span class="hljs-operator">=</span> originalFilename.substring(originalFilename.lastIndexOf(<span class="hljs-string">&quot;.&quot;</span>));<br>        <span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> File.createTempFile(prefix, suffix);<br>        multipartFile.transferTo(file);<br>        <span class="hljs-keyword">return</span> file;<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@Description</span> 保留后缀创建新名字，uuid+后缀</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@Param</span> null</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@Return</span> &#123;<span class="hljs-doctag">@link</span> null&#125;</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@Author</span> Ocean_IT</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@Email</span> 14312400@qq.com</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@Date</span> 2022/10/7 3:31</span><br><span class="hljs-comment">     */</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">get_new_filename</span><span class="hljs-params">(MultipartFile file)</span>&#123;<br>        String[] strs = file.getOriginalFilename().split(<span class="hljs-string">&quot;\\.&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">Suffix</span> <span class="hljs-operator">=</span>strs[strs.length-<span class="hljs-number">1</span>];<br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> IdUtil.simpleUUID()+<span class="hljs-string">&quot;.&quot;</span>+ Suffix;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">folderName</span> <span class="hljs-operator">=</span> DateUtil.today()+<span class="hljs-string">&quot;/&quot;</span>+ Suffix;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> folderName +<span class="hljs-string">&quot;/&quot;</span>+ name;<br>        <span class="hljs-keyword">return</span> key;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="程序核心逻辑编写"><a href="#程序核心逻辑编写" class="headerlink" title="程序核心逻辑编写"></a>程序核心逻辑编写</h1><h2 id="服务层"><a href="#服务层" class="headerlink" title="服务层"></a>服务层</h2><blockquote><p>VideoServiceImpl</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * @Description 上传视频</span><br><span class="hljs-comment"> * @Param null</span><br><span class="hljs-comment"> * @Return &#123;@link null&#125;</span><br><span class="hljs-comment"> * @Author Ocean_IT</span><br><span class="hljs-comment"> * @Email 14312400@qq.com</span><br><span class="hljs-comment"> * @Date 2022/10/6 23:32</span><br><span class="hljs-comment"> */</span><br> <span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> UploadVideoService uploadVideoService;<br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> CreateRoomDao createRoomDao;<br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">post_video</span><span class="hljs-params">(MultipartFile file, String token)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">title</span> <span class="hljs-operator">=</span> file.getOriginalFilename();<br>    <span class="hljs-keyword">if</span>(title.length()&gt;<span class="hljs-number">20</span>)&#123;<br>        title = title.substring(<span class="hljs-number">0</span>,<span class="hljs-number">15</span>)+<span class="hljs-string">&quot;...&quot;</span>;<br>    &#125;<br>    Assert.isTrue(userDao.get_uploadVideo_num(TokenUtils.getOpenid(token)),<span class="hljs-string">&quot;你上传视频的已达到上限！&quot;</span>);<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">vid</span> <span class="hljs-operator">=</span> IdWorker.getId();<br><br>    <span class="hljs-type">String</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> FileUtils.get_new_filename(file);<br>    <span class="hljs-type">File</span> <span class="hljs-variable">localFile</span> <span class="hljs-operator">=</span> FileUtils.transferToFile(file);<br><br>    <span class="hljs-type">Video</span> <span class="hljs-variable">video</span> <span class="hljs-operator">=</span> Video.builder().vid(vid).vUrl(cosConfig.getBaseUrl()+<span class="hljs-string">&quot;/&quot;</span>+key).vTitle(title).build();<br>    Assert.isTrue(videoDao.post_video(video),<span class="hljs-string">&quot;出现未知错误，视频保存失败。请联系管理员解决！&quot;</span>);<br>    <span class="hljs-type">UploadVideo</span> <span class="hljs-variable">uploadVideo</span> <span class="hljs-operator">=</span> UploadVideo.builder().openid(TokenUtils.getOpenid(token)).vid(vid).uvId(IdWorker.getId()).build();<br>    Assert.isTrue(uploadVideoDao.post_uploadVideo(uploadVideo),<span class="hljs-string">&quot;上传记录更新失败，请联系管理员解决！&quot;</span>);<br>    Map&lt;String, Object&gt; map=<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;String,Object&gt;();<br>    map.put(<span class="hljs-string">&quot;uploadVideo&quot;</span>,uploadVideo);<br>    map.put(<span class="hljs-string">&quot;video&quot;</span>,video);<br>    uploadVideoService.UploadToCOS(key,localFile,cosConfig);<br>    Assert.isTrue(userDao.put_uploadVideo_num(TokenUtils.getOpenid(token),<span class="hljs-literal">false</span>),<span class="hljs-string">&quot;数据库表修改失败，请联系管理员处理！&quot;</span>);<br>    <span class="hljs-keyword">return</span> RespGenerator.success(map);<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>VideoService</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">post_video</span><span class="hljs-params">(MultipartFile file, String token)</span> <span class="hljs-keyword">throws</span> Exception;<br></code></pre></td></tr></table></figure><blockquote><p>UploadVideoServiceImpl 异步执行，需要在启动器添加@EnableAsync</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@Service(&quot;asyncService&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UploadVideoServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UploadVideoService</span> &#123;<br>    <span class="hljs-meta">@Async</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">UploadToCOS</span><span class="hljs-params">(String key, File localPath, COSConfig cosConfig)</span>&#123;<br>        <span class="hljs-keyword">try</span>&#123;<br>            <span class="hljs-type">PutObjectRequest</span> <span class="hljs-variable">putObjectRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PutObjectRequest</span>(cosConfig.getBucketName(), key, localPath);<br>            CosUtils.newCosClient(cosConfig).putObject(putObjectRequest);<br>            log.info(<span class="hljs-string">&quot;文件上传成功，地址：&#123;&#125;&quot;</span>,cosConfig.getBaseUrl()+<span class="hljs-string">&quot;/&quot;</span>+key);<br>        &#125;<span class="hljs-keyword">catch</span> (Exception e)&#123;<br>            log.error(<span class="hljs-string">&quot;文件上传cos失败。&quot;</span>);<br>        &#125;<span class="hljs-keyword">finally</span> &#123;<br>            localPath.delete();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>UploadVideoService</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UploadVideoService</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">UploadToCOS</span><span class="hljs-params">(String key, File localPath, COSConfig cosConfig)</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="controller控制器"><a href="#controller控制器" class="headerlink" title="controller控制器"></a>controller控制器</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/video&quot;)</span><br><span class="hljs-meta">@ApiOperation(value=&quot;上传视频&quot;,notes = &quot;传入file和token&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">post_video</span><span class="hljs-params">(MultipartFile file, HttpServletRequest request)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    <span class="hljs-keyword">return</span> videoService.post_video(file,request.getHeader(<span class="hljs-string">&quot;token&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;文件的上传采用的是&lt;code&gt;MultipartFile&lt;/code&gt;工具类进行获取的，最后将流保存为临时文件以异</summary>
      
    
    
    
    <category term="Springboot" scheme="https://tanblog.cc/categories/Springboot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/Springboot/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="小程序" scheme="https://tanblog.cc/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>九. 配置swagger生成api文档</title>
    <link href="https://tanblog.cc/2022/10/05/project/online/onlinevideo-9/"/>
    <id>https://tanblog.cc/2022/10/05/project/online/onlinevideo-9/</id>
    <published>2022-10-05T12:41:05.441Z</published>
    <updated>2022-10-05T12:48:21.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>项目开发中需要写一些api开发文档，如果不写的话容易忘记这个接口的请求方法以及参数等。本期利用swagger生成实时api文档</p></blockquote><h1 id="导入pom依赖"><a href="#导入pom依赖" class="headerlink" title="导入pom依赖"></a>导入pom依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--swagger--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.springfox<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springfox-swagger2<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.6.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.springfox<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.6.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="配置swagger控制器"><a href="#配置swagger控制器" class="headerlink" title="配置swagger控制器"></a>配置swagger控制器</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@EnableSwagger2</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SwaggerConfig</span> &#123;<br><br>    <span class="hljs-keyword">private</span> ApiInfo <span class="hljs-title function_">apiInfo</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ApiInfoBuilder</span>()<br>                .title(<span class="hljs-string">&quot;online&quot;</span>)<br>                .description(<span class="hljs-string">&quot;在线视频api接口文档&quot;</span>)<br>                .termsOfServiceUrl(<span class="hljs-string">&quot;https://tanblog.cc&quot;</span>)<br>                .version(<span class="hljs-string">&quot;1.0&quot;</span>)<br>                .build();<br>    &#125;<br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Docket <span class="hljs-title function_">createRestApi</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Docket</span>(DocumentationType.SWAGGER_2)<br>                .apiInfo(apiInfo())<br>                .select()<br>                .apis(RequestHandlerSelectors.basePackage(<span class="hljs-string">&quot;cc.tanblog.online&quot;</span>))<br>                .paths(PathSelectors.regex(<span class="hljs-string">&quot;.*&quot;</span>))<br>                .build();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="token拦截器放行"><a href="#token拦截器放行" class="headerlink" title="token拦截器放行"></a>token拦截器放行</h1><blockquote><p><code>WebConfiguration</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 配置拦截器、拦截路径</span><br><span class="hljs-comment"> * 每次请求到拦截的路径，就会去执行拦截器中的方法</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addInterceptors</span><span class="hljs-params">(InterceptorRegistry registry)</span> &#123;<br>    List&lt;String&gt; excludePath = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>    <span class="hljs-comment">//排除拦截，除了注册登录(此时还没token)，其他都拦截</span><br>    excludePath.add(<span class="hljs-string">&quot;/swagger-ui.html&quot;</span>);<br>    excludePath.add(<span class="hljs-string">&quot;/swagger-resources/**&quot;</span>);<br>    excludePath.add(<span class="hljs-string">&quot;/v2/**&quot;</span>);<br>    excludePath.add(<span class="hljs-string">&quot;/doc.html/**&quot;</span>);<br>    excludePath.add(<span class="hljs-string">&quot;/webjars/**&quot;</span>);<br>    excludePath.add(<span class="hljs-string">&quot;/usercontroller/login&quot;</span>);  <span class="hljs-comment">//登录</span><br><br>    registry.addInterceptor(tokenInterceptor)<br>            .addPathPatterns(<span class="hljs-string">&quot;/**&quot;</span>)<br>            .excludePathPatterns(excludePath);<br>    WebMvcConfigurer.<span class="hljs-built_in">super</span>.addInterceptors(registry);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h1><blockquote><p>浏览器访问：<a href="http://127.0.0.1:8080/swagger-ui.html">http://127.0.0.1:8080/swagger-ui.html</a><br>效果图如下<img src="https://tanblog.cc/upload/2022/10/C~_Q60~%60%7DSQ%5B4_RHSKRQZAY.png" alt="swagger"></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;项目开发中需要写一些api开发文档，如果不写的话容易忘记这个接口的请求方法以及参数等。本期利用swagger生成实</summary>
      
    
    
    
    <category term="Springboot" scheme="https://tanblog.cc/categories/Springboot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/Springboot/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/tags/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="拦截器" scheme="https://tanblog.cc/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>八. 实现房间的新增，查找，删除，修改接口实现</title>
    <link href="https://tanblog.cc/2022/10/05/project/online/onlinevideo-8/"/>
    <id>https://tanblog.cc/2022/10/05/project/online/onlinevideo-8/</id>
    <published>2022-10-05T07:58:29.056Z</published>
    <updated>2022-10-05T09:54:15.563Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本期代码量较大，且涉及多表操作逻辑复杂建议配合目录食用！每个功能的编写顺序都是<code>Service</code>&#x3D;&gt;<code>ServiceImpl</code>&#x3D;&gt;<code>Dao</code>&#x3D;&gt;<code>DaoImpl</code><br>最后再用<code>Controller</code>调用<code>Service</code>完成接口的实现</p></blockquote><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><blockquote><p>本篇的验证都是基于token进行操作，所以需要先准备一个token生成器的test方法！最后将生成的token保存到请求头的<code>token</code>中！</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">TokenUtilsTest</span> &#123;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">sign</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-comment">// 如果不能使用builder方法，请查看pom文件中是否存在lombok依赖，若依赖存在请检查User实体类上是否添加@Builder注解</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> User.builder()<br>                .openid(<span class="hljs-string">&quot;9IWM51WXRKD9BN21CJV SS9SXBAMV4F FEA&quot;</span>)<br>                .build();<br> <br>        System.out.println(TokenUtils.sign(user));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="查看已创建的房间"><a href="#查看已创建的房间" class="headerlink" title="查看已创建的房间"></a>查看已创建的房间</h1><h2 id="Dao数据持久层"><a href="#Dao数据持久层" class="headerlink" title="Dao数据持久层"></a>Dao数据持久层</h2><ol><li>暴露接口<blockquote><p><code>VideoroomDao</code><br>根据vrid查询视频房间信息，返回数组对象</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> List&lt;Videoroom&gt; <span class="hljs-title function_">get_videoroom</span><span class="hljs-params">(Long vrid)</span>;<br></code></pre></td></tr></table></figure><blockquote><p><code>CreateRoomDao</code><br>根据加密后的openid查询创建房间记录表中的所以数据</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> List&lt;CreateRoom&gt; <span class="hljs-title function_">get_createRoomList</span><span class="hljs-params">(String md5_openid)</span>;<br></code></pre></td></tr></table></figure></li><li>数据持久层接口实现<blockquote><p> <code>VideoroomDaoImpl</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> VideoroomMapper videoroomMapper;<br><br><span class="hljs-keyword">private</span> <span class="hljs-type">VideoroomExample</span> <span class="hljs-variable">videoroomExample</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">VideoroomExample</span>();<br><br><span class="hljs-keyword">public</span> List&lt;Videoroom&gt; <span class="hljs-title function_">get_videoroom</span><span class="hljs-params">(Long vrid)</span>&#123;<br>    videoroomExample.createCriteria().andVrIdEqualTo(vrid);<br>    <span class="hljs-keyword">return</span> videoroomMapper.selectByExample(videoroomExample);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><code>CreateRoomDao</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> CreateRoomMapper createRoomMapper;<br><span class="hljs-keyword">private</span> <span class="hljs-type">CreateRoomExample</span> <span class="hljs-variable">createRoomExample</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CreateRoomExample</span>();<br><br><span class="hljs-keyword">public</span> List&lt;CreateRoom&gt; <span class="hljs-title function_">get_createRoomList</span><span class="hljs-params">(String md5_openid)</span>&#123;<br>    createRoomExample.createCriteria().andOpenidEqualTo(md5_openid);<br>    <span class="hljs-keyword">return</span> createRoomMapper.selectByExample(createRoomExample);<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="Service服务层"><a href="#Service服务层" class="headerlink" title="Service服务层"></a>Service服务层</h2><ol><li>暴露接口<blockquote><p><code>VideoroomService</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">get_videoroom</span><span class="hljs-params">(String token)</span>;<br></code></pre></td></tr></table></figure></li><li>服务层接口实现<blockquote><p>VideoroomServiceImpl</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> CreateRoomDao createRoomDao;<br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> VideoroomDao videoroomDao;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * @Description 根据token查看已创建的房间等信息</span><br><span class="hljs-comment"> * @Param null</span><br><span class="hljs-comment"> * @Return &#123;@link null&#125;</span><br><span class="hljs-comment"> * @Author Ocean_IT</span><br><span class="hljs-comment"> * @Email 14312400@qq.com</span><br><span class="hljs-comment"> * @Date 2022/10/5 2:27</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">get_videoroom</span><span class="hljs-params">(String token)</span>&#123;<br>    List&lt;CreateRoom&gt; createRoomList = createRoomDao.get_createRoomList(TokenUtils.getOpenid(token));<br>    <span class="hljs-keyword">if</span>(createRoomList.size() == <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">return</span> RespGenerator.success(<span class="hljs-string">&quot;未查询到用户已创建房间信息！&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> RespGenerator.success(videoroomDao.get_videoroom(createRoomList.get(<span class="hljs-number">0</span>).getVrId()));<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="Controller控制器层"><a href="#Controller控制器层" class="headerlink" title="Controller控制器层"></a>Controller控制器层</h2><blockquote><p><code>Videoroomcontroller</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> VideoroomService videoroomService;<br><span class="hljs-comment">//查看自己创建的房间</span><br><span class="hljs-meta">@GetMapping(&quot;/videoroom&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">get_videoroom</span><span class="hljs-params">(HttpServletRequest request)</span>&#123;<br>    <span class="hljs-keyword">return</span> videoroomService.get_videoroom(request.getHeader(<span class="hljs-string">&quot;token&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h2><blockquote><p>url：<code>http://127.0.0.1:8080/videoroomcontroller/videoroom</code><br>Methed：GET<br>Header：token<br>return：json</p></blockquote><h1 id="创建房间"><a href="#创建房间" class="headerlink" title="创建房间"></a>创建房间</h1><h2 id="Mapper编写"><a href="#Mapper编写" class="headerlink" title="Mapper编写"></a>Mapper编写</h2><blockquote><p>UserMapper.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;updateByAddCount_create_room&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;map&quot;</span>&gt;</span><br>  <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">  create_room 数量 + 1</span><br><span class="hljs-comment">  --&gt;</span><br>  update user<br>  set create_room = create_room + 1<br>  where openid = #&#123;record.openid,jdbcType=VARCHAR&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;updateByDelCount_create_room&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;map&quot;</span>&gt;</span><br>  <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">  create_room 数量 - 1</span><br><span class="hljs-comment">  --&gt;</span><br>  update user<br>  set create_room = create_room - 1<br>  where openid = #&#123;record.openid,jdbcType=VARCHAR&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Mapper接口暴露"><a href="#Mapper接口暴露" class="headerlink" title="Mapper接口暴露"></a>Mapper接口暴露</h2><blockquote><p>UserMapper.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-title function_">updateByAddCount_create_room</span><span class="hljs-params">(String md5_openid)</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">updateByDelCount_create_room</span><span class="hljs-params">(String md5_openid)</span>;java<br></code></pre></td></tr></table></figure><h2 id="Dao数据持久层-1"><a href="#Dao数据持久层-1" class="headerlink" title="Dao数据持久层"></a>Dao数据持久层</h2><ol><li>暴露接口<blockquote><p><code>VideoDao</code><br>根据vid查询视频表信息，返回对象。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Video <span class="hljs-title function_">get_vid</span><span class="hljs-params">(Long vid)</span>;<br></code></pre></td></tr></table></figure><blockquote><p><code>VideoroomDao</code><br>传入一个Videoroom对象并将他插入数据库，返回布尔类型</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">post_videoroom</span><span class="hljs-params">(Videoroom videoroom)</span>;<br></code></pre></td></tr></table></figure><blockquote><p><code>UserDao</code><br>根据openid查询user表数据，并根据type执行createVideo字段的自增和自减，返回布尔类型</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">put_createVideo_num</span><span class="hljs-params">(String md5_openid,Boolean type)</span>;<br></code></pre></td></tr></table></figure><blockquote><p><code>CreateRoomDao</code><br>根据主键查询表中是否超出创建房间的数量再执行创建。返回布尔类型</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">Post_createRoom</span><span class="hljs-params">(CreateRoom createRoom)</span>;<br></code></pre></td></tr></table></figure></li><li>数据持久层接口实现<blockquote><p><code>VideoDaoImpl</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> VideoMapper videoMapper;<br><span class="hljs-keyword">public</span> Video <span class="hljs-title function_">get_vid</span><span class="hljs-params">(Long vid)</span>&#123;<br>    <span class="hljs-keyword">return</span> videoMapper.selectByPrimaryKey(vid);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><code>VideoroomDaoImpl</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">post_videoroom</span><span class="hljs-params">(Videoroom videoroom)</span>&#123;<br>    <span class="hljs-keyword">return</span> videoroomMapper.insert(videoroom) == <span class="hljs-number">1</span>?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><code>UserDaoImpl</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">put_createVideo_num</span><span class="hljs-params">(String md5_openid,Boolean type)</span>&#123;<br>    <span class="hljs-keyword">if</span>(type)&#123;<br>        <span class="hljs-keyword">return</span> userMapper.updateByAddCount_create_room(md5_openid)==<span class="hljs-number">1</span>?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> userMapper.updateByDelCount_create_room(md5_openid)==<span class="hljs-number">1</span>?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><code>CreateRoomDaoImpl</code> </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">Post_createRoom</span><span class="hljs-params">(CreateRoom createRoom)</span>&#123;<br>    createRoomExample.createCriteria().andOpenidEqualTo(createRoom.getOpenid());<br>    <span class="hljs-keyword">return</span> createRoomMapper.selectByExample(createRoomExample).size()&lt;<span class="hljs-number">1</span> ?createRoomMapper.insert(createRoom) ==<span class="hljs-number">1</span>?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>:<span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="Service服务层-1"><a href="#Service服务层-1" class="headerlink" title="Service服务层"></a>Service服务层</h2><ol><li>暴露接口<blockquote><p><code>VideoroomService</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">post_videoroom</span><span class="hljs-params">(Videoroom videoroom,Long vid,String token)</span>;<br></code></pre></td></tr></table></figure></li><li>服务层接口实现<blockquote><p><code>VideoroomServiceImpl</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> CreateRoomDao createRoomDao;<br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> VideoroomDao videoroomDao;<br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> UserDao userDao;<br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> VideoDao videoDao;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * @Description 根据token创建房间</span><br><span class="hljs-comment"> * @Param null</span><br><span class="hljs-comment"> * @Return &#123;@link null&#125;</span><br><span class="hljs-comment"> * @Author Ocean_IT</span><br><span class="hljs-comment"> * @Email 14312400@qq.com</span><br><span class="hljs-comment"> * @Date 2022/10/5 2:28</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">post_videoroom</span><span class="hljs-params">(Videoroom videoroom,Long vid,String token)</span>&#123;<br>    <span class="hljs-type">Video</span> <span class="hljs-variable">video</span> <span class="hljs-operator">=</span> videoDao.get_vid(vid);<br>    Assert.notNull(video,<span class="hljs-string">&quot;未查询到视频信息，请重新选择视频创建房间&quot;</span>);<br>    videoroom.setVrId(IdWorker.getId());<br>    Assert.isTrue(videoroomDao.post_videoroom(videoroom),<span class="hljs-string">&quot;房间创建失败&quot;</span>);<br>    <span class="hljs-type">CreateRoom</span> <span class="hljs-variable">createRoom</span> <span class="hljs-operator">=</span> CreateRoom.builder()<br>            .openid(TokenUtils.getOpenid(token))<br>            .crId(IdWorker.getId())<br>            .vrId(videoroom.getVrId())<br>            .vid(vid).build();<br>    Assert.isTrue(userDao.put_createVideo_num(TokenUtils.getOpenid(token),<span class="hljs-literal">true</span>),<span class="hljs-string">&quot;房间数更新失败！&quot;</span>);<br>    <span class="hljs-keyword">return</span> createRoomDao.Post_createRoom(createRoom)?RespGenerator.success(createRoom):RespGenerator.fail(<span class="hljs-string">&quot;400&quot;</span>,<span class="hljs-string">&quot;房间创建失败&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="Controller控制器层-1"><a href="#Controller控制器层-1" class="headerlink" title="Controller控制器层"></a>Controller控制器层</h2><blockquote><p><code>videoroomcontroller</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//创建房间</span><br><span class="hljs-meta">@PostMapping(&quot;/videoroom/&#123;vid&#125;&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">post_videoroom</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;vid&quot;)</span> Long vid,<span class="hljs-meta">@RequestBody</span> Videoroom videoroom, HttpServletRequest request)</span>&#123;<br>    <span class="hljs-keyword">return</span> videoroomService.post_videoroom(videoroom,vid,request.getHeader(<span class="hljs-string">&quot;token&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="调用方法-1"><a href="#调用方法-1" class="headerlink" title="调用方法"></a>调用方法</h2><blockquote><p>url：<a href="http://127.0.0.1:8080/videoroomcontroller/videoroom/%7Bvid%7D">http://127.0.0.1:8080/videoroomcontroller/videoroom/{vid}</a><br>Methed：POST<br>Header：token<br>DATA：<code>&#123;     &quot;vrTitle&quot;:&quot;标题&quot;,     &quot;vrDescribe&quot;:&quot;描述信息&quot; &#125;</code><br>return：json</p></blockquote><h1 id="修改房间信息"><a href="#修改房间信息" class="headerlink" title="修改房间信息"></a>修改房间信息</h1><h2 id="Dao数据持久层-2"><a href="#Dao数据持久层-2" class="headerlink" title="Dao数据持久层"></a>Dao数据持久层</h2><ol><li>暴露接口<blockquote><p><code>VideoroomDao</code><br>根据vrid查询并修改数据为videoroom对象中的值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">put_videoroom</span><span class="hljs-params">(Long vrid,Videoroom videoroom)</span>;<br></code></pre></td></tr></table></figure></li><li>数据持久层接口实现<blockquote><p><code>VideoroomDaoImpl</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">put_videoroom</span><span class="hljs-params">(Long vrid,Videoroom videoroom)</span>&#123;<br>    videoroomExample.createCriteria().andVrIdEqualTo(vrid);<br>    videoroom.setVrId(<span class="hljs-literal">null</span>);<br>    <span class="hljs-keyword">return</span> videoroomMapper.updateByExampleSelective(videoroom,videoroomExample)==<span class="hljs-number">1</span>?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="Service服务层-2"><a href="#Service服务层-2" class="headerlink" title="Service服务层"></a>Service服务层</h2><ol><li>暴露接口<blockquote><p><code>VideoroomService</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">put_videoroom</span><span class="hljs-params">(Videoroom videoroom,String token)</span>;<br></code></pre></td></tr></table></figure></li><li>服务层接口实现<blockquote><p><code>VideoroomServiceImpl</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * @Description 根据token等信息修改房间信息</span><br><span class="hljs-comment"> * @Param null</span><br><span class="hljs-comment"> * @Return &#123;@link null&#125;</span><br><span class="hljs-comment"> * @Author Ocean_IT</span><br><span class="hljs-comment"> * @Email 14312400@qq.com</span><br><span class="hljs-comment"> * @Date 2022/10/5 6:20</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">put_videoroom</span><span class="hljs-params">(Videoroom videoroom,String token)</span>&#123;<br>    List&lt;CreateRoom&gt; createRoomList = createRoomDao.get_createRoomList(TokenUtils.getOpenid(token));<br>    <span class="hljs-keyword">if</span>(createRoomList.size() == <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">return</span> RespGenerator.fail(<span class="hljs-string">&quot;400&quot;</span>,<span class="hljs-string">&quot;未查询到你要修改房间的信息！&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        Assert.isTrue(videoroomDao.put_videoroom(createRoomList.get(<span class="hljs-number">0</span>).getVrId(),videoroom),<span class="hljs-string">&quot;修改房间信息失败！&quot;</span>);<br>        <span class="hljs-keyword">return</span> RespGenerator.success_noData(<span class="hljs-string">&quot;房间信息修改完成！&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="Controller控制器层-2"><a href="#Controller控制器层-2" class="headerlink" title="Controller控制器层"></a>Controller控制器层</h2><blockquote><p><code>Videoroomcontroller</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//修改房间标题等信息</span><br><span class="hljs-meta">@PutMapping(&quot;/videoroom&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">put_videoroom</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> Videoroom videoroom,HttpServletRequest request)</span>&#123;<br>    <span class="hljs-keyword">return</span> videoroomService.put_videoroom(videoroom,request.getHeader(<span class="hljs-string">&quot;token&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="调用方法-2"><a href="#调用方法-2" class="headerlink" title="调用方法"></a>调用方法</h2><blockquote><p>url：<a href="http://127.0.0.1:8080/videoroomcontroller/videoroom">http://127.0.0.1:8080/videoroomcontroller/videoroom</a><br>Methed：PUT<br>Header：token<br>Data：<code>&#123;     &quot;vrTitle&quot;:&quot;sss打赏&quot;,     &quot;vrDescribe&quot;:&quot;dasd&quot;,     &quot;vrId&quot;:&quot;0&quot; &#125;</code><br>return：json</p></blockquote><h1 id="删除房间"><a href="#删除房间" class="headerlink" title="删除房间"></a>删除房间</h1><h2 id="Dao数据持久层-3"><a href="#Dao数据持久层-3" class="headerlink" title="Dao数据持久层"></a>Dao数据持久层</h2><ol><li>暴露接口<blockquote><p><code>CreateRoomDao</code><br>根据vrid删除表信息</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">del_createRoom</span><span class="hljs-params">(Long vrid)</span>;<br></code></pre></td></tr></table></figure><blockquote><p><code>VideoroomDao</code><br>根据vrid删除表信息</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">del_videoroom</span><span class="hljs-params">(Long vrid)</span>;<br></code></pre></td></tr></table></figure></li><li>数据持久层接口实现<blockquote><p><code>CreateRoomDaoImpl</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">del_createRoom</span><span class="hljs-params">(Long vrid)</span>&#123;<br>    createRoomExample.createCriteria().andVrIdEqualTo(vrid);<br>    <span class="hljs-keyword">return</span> createRoomMapper.deleteByExample(createRoomExample) == <span class="hljs-number">1</span>?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><code>VideoroomDaoImpl</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">del_videoroom</span><span class="hljs-params">(Long vrid)</span>&#123;<br>    <span class="hljs-keyword">return</span> videoroomMapper.deleteByPrimaryKey(vrid) ==<span class="hljs-number">1</span>?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="Service服务层-3"><a href="#Service服务层-3" class="headerlink" title="Service服务层"></a>Service服务层</h2><ol><li>暴露接口<blockquote><p><code>VideoroomService</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">del_videoroom</span><span class="hljs-params">(String token)</span>;<br></code></pre></td></tr></table></figure></li><li>服务层接口实现<blockquote><p><code>VideoroomServiceImpl</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * @Description 根据token删除房间</span><br><span class="hljs-comment"> * @Param null</span><br><span class="hljs-comment"> * @Return &#123;@link null&#125;</span><br><span class="hljs-comment"> * @Author Ocean_IT</span><br><span class="hljs-comment"> * @Email 14312400@qq.com</span><br><span class="hljs-comment"> * @Date 2022/10/5 14:27</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">del_videoroom</span><span class="hljs-params">(String token)</span>&#123;<br>    List&lt;CreateRoom&gt; createRoomList = createRoomDao.get_createRoomList(TokenUtils.getOpenid(token));<br>    <span class="hljs-keyword">if</span>(createRoomList.size() == <span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">return</span> RespGenerator.fail(<span class="hljs-string">&quot;400&quot;</span>,<span class="hljs-string">&quot;未查询到你要删除房间的信息！&quot;</span>);<br>    &#125;<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">vrid</span> <span class="hljs-operator">=</span> createRoomList.get(<span class="hljs-number">0</span>).getVrId();<br>    Assert.isTrue(createRoomDao.del_createRoom(vrid),<span class="hljs-string">&quot;删除房间记录失败&quot;</span>);<br>    Assert.isTrue(videoroomDao.del_videoroom(vrid),<span class="hljs-string">&quot;删除房间信息失败&quot;</span>);<br>    Assert.isTrue(userDao.put_createVideo_num(TokenUtils.getOpenid(token),<span class="hljs-literal">false</span>),<span class="hljs-string">&quot;房间数更新失败！&quot;</span>);<br>    <span class="hljs-keyword">return</span> RespGenerator.success_noData(<span class="hljs-string">&quot;房间删除成功！&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="Controller控制器层-3"><a href="#Controller控制器层-3" class="headerlink" title="Controller控制器层"></a>Controller控制器层</h2><blockquote><p><code>VideoroomController</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//删除房间信息</span><br><span class="hljs-meta">@DeleteMapping(&quot;/videoroom&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">del_videoroom</span><span class="hljs-params">(HttpServletRequest request)</span>&#123;<br>    <span class="hljs-keyword">return</span> videoroomService.del_videoroom(request.getHeader(<span class="hljs-string">&quot;token&quot;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="调用方法-3"><a href="#调用方法-3" class="headerlink" title="调用方法"></a>调用方法</h2><blockquote><p>url：<a href="http://127.0.0.1:8080/videoroomcontroller/videoroom/%7Bvid%7D">http://127.0.0.1:8080/videoroomcontroller/videoroom/{vid}</a><br>Methed：DELETE<br>Header：token<br>return：json</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本期代码量较大，且涉及多表操作逻辑复杂建议配合目录食用！每个功能的编写顺序都是&lt;code&gt;Service&lt;/code&gt;&amp;#x3D;&amp;gt;&lt;code&gt;ServiceImpl&lt;/code&gt;&amp;#x3D;&amp;gt;&lt;code&gt;Dao&lt;/code&gt;&amp;#x3D</summary>
      
    
    
    
    <category term="Springboot" scheme="https://tanblog.cc/categories/Springboot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/Springboot/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/tags/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="mysql" scheme="https://tanblog.cc/tags/mysql/"/>
    
    <category term="mybatis" scheme="https://tanblog.cc/tags/mybatis/"/>
    
    <category term="API" scheme="https://tanblog.cc/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>七. 实现用户修改个人信息</title>
    <link href="https://tanblog.cc/2022/10/04/project/online/onlinevideo-7/"/>
    <id>https://tanblog.cc/2022/10/04/project/online/onlinevideo-7/</id>
    <published>2022-10-04T14:53:56.226Z</published>
    <updated>2022-10-04T15:10:03.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>上一章已经实现请求体拦截，本期将会结合前一章进行功能实现</p></blockquote><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><ol><li><code>REST风格请求</code></li><li><code>限制修改内容</code></li></ol><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="数据持久层（dao）"><a href="#数据持久层（dao）" class="headerlink" title="数据持久层（dao）"></a>数据持久层（dao）</h2><blockquote><p>在userdao接口中新增暴露出修改用户信息接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">put_userinfo</span><span class="hljs-params">(User user)</span>;<br></code></pre></td></tr></table></figure><blockquote><p>userDaoImpl中实现修改用户信息请求接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">put_userinfo</span><span class="hljs-params">(User user)</span>&#123;<br>        userExample.createCriteria().andOpenidEqualTo(user.getOpenid());<br>        user.setUploadNum(<span class="hljs-literal">null</span>);<br>        user.setCreateRoom(<span class="hljs-literal">null</span>);<br><span class="hljs-comment">//      ... where openid = openid set user = user ....</span><br>        <span class="hljs-keyword">return</span> userMapper.updateByExampleSelective(user,userExample) == <span class="hljs-number">1</span>?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="服务层（service）"><a href="#服务层（service）" class="headerlink" title="服务层（service）"></a>服务层（service）</h2><blockquote><p>UserService中新增暴露出如下接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">put_userinfo</span><span class="hljs-params">(User user, HttpServletRequest request)</span>;<br></code></pre></td></tr></table></figure><blockquote><p>UserServiceimpl实现接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-meta">@Transactional</span><br>    <span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">put_userinfo</span><span class="hljs-params">(User user, HttpServletRequest request)</span>&#123;<br><span class="hljs-comment">//        查询token查询是谁的请求最后再给他修改信息</span><br>        user.setOpenid(TokenUtils.tookenList(request.getHeader(<span class="hljs-string">&quot;token&quot;</span>)).get(<span class="hljs-number">0</span>).getOpenid());<br>        Assert.isTrue(userDao.put_userinfo(user),<span class="hljs-string">&quot;信息修改失败&quot;</span>);<br>        <span class="hljs-keyword">return</span> RespGenerator.success_noData(<span class="hljs-string">&quot;用户信息修改成功&quot;</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="控制器层（controller）"><a href="#控制器层（controller）" class="headerlink" title="控制器层（controller）"></a>控制器层（controller）</h2><blockquote><p>UserController中新增Put接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//    用户修改个人信息</span><br><span class="hljs-meta">@PutMapping(&quot;/user&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">user</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> User user, HttpServletRequest request)</span>&#123;<br>    <span class="hljs-keyword">return</span> userService.put_userinfo(user,request);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="请求流程总结"><a href="#请求流程总结" class="headerlink" title="请求流程总结"></a>请求流程总结</h1><blockquote><p>程序根据请求头的token解析出用户主键，最后根据用户主键修改数据库内容。并做修改限制。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;上一章已经实现请求体拦截，本期将会结合前一章进行功能实现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;分析</summary>
      
    
    
    
    <category term="Springboot" scheme="https://tanblog.cc/categories/Springboot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/Springboot/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/tags/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="mybatis" scheme="https://tanblog.cc/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>六. 接口请求自定义拦截器配置</title>
    <link href="https://tanblog.cc/2022/10/03/project/online/onlinevideo-6/"/>
    <id>https://tanblog.cc/2022/10/03/project/online/onlinevideo-6/</id>
    <published>2022-10-02T19:56:24.030Z</published>
    <updated>2022-10-02T19:56:24.030Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>WebMvcConfigurer配置类其实是Spring内部的一种配置方式，采用JavaBean的形式来代替传统的xml配置文件形式进行针对框架个性化定制，可以自定义一些Handler，Interceptor，ViewResolver，MessageConverter。基于java-based方式的spring mvc配置，需要创建一个配置类并实现WebMvcConfigurer 接口。</p></blockquote><h1 id="继承WebMvcConfigurer类并实现api拦截"><a href="#继承WebMvcConfigurer类并实现api拦截" class="headerlink" title="继承WebMvcConfigurer类并实现api拦截"></a>继承WebMvcConfigurer类并实现api拦截</h1><blockquote><p>WebConfiguration<br>主要用于对除登录API以外的接口都进行拦截处理，拦截到的所以请求再经过TokenInterceptor进行验证token</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebConfiguration</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配置拦截器、拦截路径</span><br><span class="hljs-comment">     * 每次请求到拦截的路径，就会去执行拦截器中的方法</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addInterceptors</span><span class="hljs-params">(InterceptorRegistry registry)</span> &#123;<br>        List&lt;String&gt; excludePath = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        <span class="hljs-comment">//排除拦截，除了注册登录(此时还没token)，其他都拦截</span><br>        excludePath.add(<span class="hljs-string">&quot;/usercontroller/user&quot;</span>);  <span class="hljs-comment">//登录</span><br>        registry.addInterceptor(tokenInterceptor)<br>                .addPathPatterns(<span class="hljs-string">&quot;/**&quot;</span>)<br>                .excludePathPatterns(excludePath);<br>        WebMvcConfigurer.<span class="hljs-built_in">super</span>.addInterceptors(registry);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="HandlerInterceptor接口的拦截器实例配置"><a href="#HandlerInterceptor接口的拦截器实例配置" class="headerlink" title="HandlerInterceptor接口的拦截器实例配置"></a>HandlerInterceptor接口的拦截器实例配置</h1><blockquote><p>TokenInterceptor<br>主要用于验证请求头信息中是否存在token并解密token查询数据库是否存在该用户</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TokenInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">HandlerInterceptor</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">preHandle</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><br>        <span class="hljs-comment">//跨域请求会首先发一个option请求，直接返回正常状态并通过拦截器</span><br>        <span class="hljs-keyword">if</span>(request.getMethod().equals(<span class="hljs-string">&quot;OPTIONS&quot;</span>))&#123;<br>            response.setStatus(HttpServletResponse.SC_OK);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        response.setCharacterEncoding(<span class="hljs-string">&quot;utf-8&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">token</span> <span class="hljs-operator">=</span> request.getHeader(<span class="hljs-string">&quot;token&quot;</span>);<br>        <span class="hljs-keyword">if</span> (token!=<span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-type">boolean</span> result= TokenUtils.verify(token);<br>            <span class="hljs-keyword">if</span> (result)&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        response.setContentType(<span class="hljs-string">&quot;application/json; charset=utf-8&quot;</span>);<br>        <span class="hljs-keyword">try</span> &#123;<br>            JSONObject json=<span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONObject</span>();<br>            json.put(<span class="hljs-string">&quot;msg&quot;</span>,<span class="hljs-string">&quot;未获取到登录信息,请返回重新登录。&quot;</span>);<br>            json.put(<span class="hljs-string">&quot;code&quot;</span>,<span class="hljs-string">&quot;401&quot;</span>);<br>            response.getWriter().append(json.toString());<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        <br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;WebMvcConfigurer配置类其实是Spring内部的一种配置方式，采用JavaBean的形式来代替传统的</summary>
      
    
    
    
    <category term="Springboot" scheme="https://tanblog.cc/categories/Springboot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/Springboot/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/tags/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="API" scheme="https://tanblog.cc/tags/API/"/>
    
    <category term="拦截器" scheme="https://tanblog.cc/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>五. 小程序用户注册登录的实现</title>
    <link href="https://tanblog.cc/2022/10/02/project/online/onlinevideo-5/"/>
    <id>https://tanblog.cc/2022/10/02/project/online/onlinevideo-5/</id>
    <published>2022-10-01T17:30:21.970Z</published>
    <updated>2022-10-04T15:10:13.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>前几期主要针对<a href="/archives/onlinevideo2">数据库的设计</a>，<a href="/archives/onlinevideo3">mybatis的配置以及mybatis逆向生成代码</a>，以及<a href="archives/onlinevideo4">响应体返回信息封装和全局异常拦截</a>的一些配置拦截处理，文章可能枯燥且看不出任何实际效果。本文将结合前几期的配置进行实战操作！</p></blockquote><h1 id="用户登录"><a href="#用户登录" class="headerlink" title="用户登录"></a>用户登录</h1><blockquote><p>微信小程序中自带<code>wx.login</code>接口，请求该接口会返回一个过期时长为五分钟的code。通过开发者的appid和secret将获取到的code发送请求可以取到openid。最后将 openid作为用户唯一标识主键存入数据库完成注册！<br><a href="https://mp.weixin.qq.com/wxamp/devprofile/get_profile?token=642866518&lang=zh_CN">点击查看微信开发者appid和secret</a></p></blockquote><h2 id="前端获取用户登录凭证（code）并请求后端"><a href="#前端获取用户登录凭证（code）并请求后端" class="headerlink" title="前端获取用户登录凭证（code）并请求后端"></a>前端获取用户登录凭证（code）并请求后端</h2><blockquote><p>微信小程序的创建本博客将不叙述，<a href="https://blog.csdn.net/m0_52650516/article/details/116639287?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166464868816800180678718%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=166464868816800180678718&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-116639287-null-null.142%5Ev51%5Econtrol,201%5Ev3%5Eadd_ask&utm_term=%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%88%9B%E5%BB%BA&spm=1018.2226.3001.4187">点击跳转微信小程序的创建</a><br>在index.js中添加如下代码</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">login</span>(<span class="hljs-params"></span>)&#123;<br>      <span class="hljs-comment">// 获取code凭证</span><br>      wx.<span class="hljs-title function_">login</span>(&#123;<br>        <span class="hljs-title function_">success</span>(<span class="hljs-params">res</span>)&#123;<br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;wx.login接口得到的数据：&quot;</span>,res);<br>          <span class="hljs-keyword">let</span> code = res.<span class="hljs-property">code</span><br>          <span class="hljs-keyword">let</span> userinfo = wx.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&#x27;userinfo&#x27;</span>)<br>          userinfo.<span class="hljs-property">code</span> = code<br>          <span class="hljs-comment">// 将code传入后端</span><br>          wx.<span class="hljs-title function_">request</span>(&#123;<br>            <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;http://127.0.0.1:8080//usercontroller/user&#x27;</span>,<br>            <span class="hljs-attr">method</span>:<span class="hljs-string">&#x27;post&#x27;</span>,<br>            data : userinfo,<br>            <span class="hljs-comment">// 后端响应的数据</span><br>            <span class="hljs-title function_">success</span>(<span class="hljs-params">res</span>)&#123;<br>              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;后端返回的数据：&quot;</span>,res);<br>            &#125;,<br>            <span class="hljs-title function_">fail</span>(<span class="hljs-params">err</span>)&#123;<br>              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;后端请求失败&quot;</span>);<br>            &#125;<br>          &#125;)<br>        &#125;<br>      &#125;)<br>&#125;,<br><span class="hljs-title function_">userinfo</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">let</span> that = <span class="hljs-variable language_">this</span><br>  wx.<span class="hljs-title function_">getUserProfile</span>(&#123;<br>    <span class="hljs-attr">desc</span>:<span class="hljs-string">&#x27;获取用户信息并登录&#x27;</span>,<br>    <span class="hljs-title function_">success</span>(<span class="hljs-params">res</span>)&#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;获取到用户信息：&quot;</span>,res.<span class="hljs-property">userInfo</span>);<br>      wx.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&#x27;userinfo&#x27;</span>, res.<span class="hljs-property">userInfo</span>)<br>      that.<span class="hljs-title function_">login</span>()<br>    &#125;<br>  &#125;)<br>&#125;,<br></code></pre></td></tr></table></figure><blockquote><p>因为官方规定<code> wx.getUserProfile</code>接口必须处罚点击事件才能调用。所以还需要wxml来调用userinfo方法！</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--pages/index/index.wxml--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">&quot;userinfo&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>效果图如下![O&#96;@8IB0539)UYFPZRJW7G(O](<a href="https://tanblog.cc/upload/2022/10/O%60%408IB0539%29UYFPZRJW7G%28O.png">https://tanblog.cc/upload/2022/10/O%60%408IB0539%29UYFPZRJW7G%28O.png</a>)</p></blockquote><blockquote><p>若提示<code>http://127.0.0.1:8080//usercontroller/user</code>request 合法域名列表中，请按下图操作打开不检验合法域名<img src="https://tanblog.cc/upload/2022/10/A%601%7DX%5BL%60H2Z%29BIS%7B%28X%7BQP%24K.png" alt="A`1}X[L`H2Z)BIS{(X{QP$K"></p></blockquote><h2 id="后端响应并给前端返回Token"><a href="#后端响应并给前端返回Token" class="headerlink" title="后端响应并给前端返回Token"></a>后端响应并给前端返回Token</h2><blockquote><p>后端查询加密后的openid如果存在则直接返回token，如果不存在则新建用户再返回token。</p></blockquote><h3 id="pom依赖注入"><a href="#pom依赖注入" class="headerlink" title="pom依赖注入"></a>pom依赖注入</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--token--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.auth0<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>java-jwt<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.4.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- hutool工具库 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>cn.hutool<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hutool-all<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.8.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--lombok--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="controller控制器类"><a href="#controller控制器类" class="headerlink" title="controller控制器类"></a>controller控制器类</h3><blockquote><p>UserContorller</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;usercontroller&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br>    <span class="hljs-meta">@PostMapping(&quot;/user&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">login</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> Map&lt;String,String&gt; params)</span>&#123;<br>        <span class="hljs-keyword">return</span> userService.login(params);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="服务层接口类"><a href="#服务层接口类" class="headerlink" title="服务层接口类"></a>服务层接口类</h3><blockquote><p>UserService</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserService</span> &#123;<br>    <span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">login</span><span class="hljs-params">(Map&lt;String,String&gt; params)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="服务层接口实现类"><a href="#服务层接口实现类" class="headerlink" title="服务层接口实现类"></a>服务层接口实现类</h3><blockquote><p>UserServiceImpl</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service(&quot;userService&quot;)</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UserService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserDao userDao;<br>    <span class="hljs-keyword">public</span> BaseResponse <span class="hljs-title function_">login</span><span class="hljs-params">(Map&lt;String,String&gt; params)</span>&#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">md5_openid</span> <span class="hljs-operator">=</span> WeChatUtils.GetOpenid(params.get(<span class="hljs-string">&quot;code&quot;</span>));<br>        <span class="hljs-comment">// 新账号默认创建房间数量为1，上传视频数量5。若不是新账号则用加密后的openid生成token</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> User.builder()<br>                .uImg(params.get(<span class="hljs-string">&quot;avatarUrl&quot;</span>))<br>                .uName(params.get(<span class="hljs-string">&quot;nickName&quot;</span>))<br>                .openid(md5_openid)<br>                .createRoom(<span class="hljs-number">1</span>)<br>                .uploadNum(<span class="hljs-number">5</span>)<br>                .build();<br><span class="hljs-comment">//  如果数据库没有这个加密后的openid则注册账号</span><br>        <span class="hljs-keyword">if</span> (!userDao.openid(md5_openid))&#123;<br>            Assert.isTrue(userDao.addUser(user),<span class="hljs-string">&quot;创建用户失败，请联系管理员处理&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">userMap</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        userMap.put(<span class="hljs-string">&quot;token&quot;</span>,TokenUtils.sign(user));<br>        <span class="hljs-keyword">return</span> RespGenerator.success(userMap);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="数据持久层接口类"><a href="#数据持久层接口类" class="headerlink" title="数据持久层接口类"></a>数据持久层接口类</h3><blockquote><p>UserDao</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserDao</span> &#123;<br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">openid</span><span class="hljs-params">(String md5_openId)</span>;<br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">addUser</span><span class="hljs-params">(User user)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="数据持久层接口实现类"><a href="#数据持久层接口实现类" class="headerlink" title="数据持久层接口实现类"></a>数据持久层接口实现类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Repository(&quot;userDao&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserDaoImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UserDao</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserMapper userMapper;<br>    <span class="hljs-type">UserExample</span> <span class="hljs-variable">userExample</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserExample</span>();<br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">openid</span><span class="hljs-params">(String openId)</span>&#123;<br>        userExample.createCriteria().andOpenidEqualTo(openId);<br>        <span class="hljs-keyword">return</span> userMapper.selectByExample(userExample).size() &lt; <span class="hljs-number">1</span> ?<span class="hljs-literal">false</span>:<span class="hljs-literal">true</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">addUser</span><span class="hljs-params">(User user)</span>&#123;<br>        <span class="hljs-keyword">return</span> userMapper.insert(user) ==<span class="hljs-number">1</span> ?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><blockquote><p>WeChatUtils</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WeChatUtils</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">String</span> <span class="hljs-variable">appid</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;wxf9ac121f6797029f&quot;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String secret=<span class="hljs-string">&quot;78ad8f60d3d686eda0822abfc8c8c8f9&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getAppid</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> appid;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAppid</span><span class="hljs-params">(String appid)</span> &#123;<br>        WeChatUtils.appid = appid;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getSecret</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> secret;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setSecret</span><span class="hljs-params">(String secret)</span> &#123;<br>        WeChatUtils.secret = secret;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">GetOpenid</span><span class="hljs-params">(String code)</span>&#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://api.weixin.qq.com/sns/jscode2session&quot;</span>;<span class="hljs-comment">//指定URL</span><br>        Map&lt;String, Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<span class="hljs-comment">//存放参数</span><br>        map.put(<span class="hljs-string">&quot;appid&quot;</span>, WeChatUtils.getAppid());<br>        map.put(<span class="hljs-string">&quot;secret&quot;</span>, WeChatUtils.getSecret());<br>        map.put(<span class="hljs-string">&quot;js_code&quot;</span>,code);<br>        map.put(<span class="hljs-string">&quot;grant_type&quot;</span>,<span class="hljs-string">&quot;authorization_code&quot;</span>);<br>        <span class="hljs-comment">//发送get请求并接收响应数据</span><br>        String result= HttpUtil.createGet(url).form(map).execute().body();<br>        <span class="hljs-keyword">return</span> SecureUtil.md5(JSONUtil.parseObj(result).get(<span class="hljs-string">&quot;openid&quot;</span>).toString());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>TokenUtils</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TokenUtils</span> &#123;<br><br>    <span class="hljs-comment">//token到期时间10小时</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> EXPIRE_TIME= <span class="hljs-number">10</span>*<span class="hljs-number">60</span>*<span class="hljs-number">60</span>*<span class="hljs-number">1000</span>;<br>    <span class="hljs-comment">//密钥盐</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String TOKEN_SECRET=<span class="hljs-string">&quot;ljdyaishi22jin**3nkjnj??&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 生成token</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> user</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">sign</span><span class="hljs-params">(User user)</span>&#123;<br><br>        String token=<span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            Date expireAt=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(System.currentTimeMillis()+EXPIRE_TIME);<br>            token = JWT.create()<br>                    <span class="hljs-comment">//发行人</span><br>                    .withIssuer(<span class="hljs-string">&quot;Ocean_Tan&quot;</span>)<br>                    <span class="hljs-comment">//存放数据</span><br>                    .withClaim(<span class="hljs-string">&quot;md5_openid&quot;</span>,user.getOpenid())<br>                    <span class="hljs-comment">//过期时间</span><br>                    .withExpiresAt(expireAt)<br>                    .sign(Algorithm.HMAC256(TOKEN_SECRET));<br>        &#125; <span class="hljs-keyword">catch</span> (IllegalArgumentException|JWTCreationException je) &#123;<br><br>        &#125;<br>        <span class="hljs-keyword">return</span> token;<br>    &#125;<br><br><br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserMapper userMapper;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> TokenUtils tokenUtils;<br>    <span class="hljs-meta">@PostConstruct</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">inin</span><span class="hljs-params">()</span>&#123;<br>        tokenUtils = <span class="hljs-built_in">this</span>;<br>    &#125;<br><br><span class="hljs-comment">//解密token并判断用户是否存在</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Boolean <span class="hljs-title function_">verify</span><span class="hljs-params">(String token)</span>&#123;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//创建token验证器</span><br>            JWTVerifier jwtVerifier=JWT.require(Algorithm.HMAC256(TOKEN_SECRET)).withIssuer(<span class="hljs-string">&quot;Ocean_Tan&quot;</span>).build();<br>            DecodedJWT decodedJWT=jwtVerifier.verify(token);<br>            <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> User.builder().openid(decodedJWT.getClaim(<span class="hljs-string">&quot;md5_openid&quot;</span>).asString()).build();<br>            <span class="hljs-type">UserExample</span> <span class="hljs-variable">userExample</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserExample</span>();<br>            userExample.createCriteria().andOpenidEqualTo(user.getOpenid());<br>            <span class="hljs-keyword">return</span> tokenUtils.userMapper.selectByExample(userExample).size()==<span class="hljs-number">1</span>?<span class="hljs-literal">true</span>:<span class="hljs-literal">false</span>;<br><span class="hljs-comment">//            System.out.println(&quot;过期时间：      &quot; + decodedJWT.getExpiresAt());</span><br><br>        &#125; <span class="hljs-keyword">catch</span> (IllegalArgumentException |JWTVerificationException e) &#123;<br>            <span class="hljs-comment">//抛出错误即为验证不通过</span><br><span class="hljs-comment">//            throw new IllegalArgumentException(&quot;未获取到用户信息！请登录！&quot;);</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br><br><br><br>    <span class="hljs-comment">//    解密token并获取token用户信息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> List&lt;User&gt; <span class="hljs-title function_">tookenList</span><span class="hljs-params">(String token)</span>&#123;<br>        JWTVerifier jwtVerifier=JWT.require(Algorithm.HMAC256(TOKEN_SECRET)).withIssuer(<span class="hljs-string">&quot;Ocean_Tan&quot;</span>).build();<br>        DecodedJWT decodedJWT=jwtVerifier.verify(token);<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> User.builder().openid(decodedJWT.getClaim(<span class="hljs-string">&quot;md5_openid&quot;</span>).asString()).build();<br>        <span class="hljs-type">UserExample</span> <span class="hljs-variable">userExample</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserExample</span>();<br>        userExample.createCriteria().andOpenidEqualTo(user.getOpenid());<br>        <span class="hljs-keyword">return</span> tokenUtils.userMapper.selectByExample(userExample);<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>效果如下图所示<img src="https://tanblog.cc/upload/2022/10/8%609ST%60G3HUTCP%28%40N~R540%7B0.png" alt="8`9ST`G3HUTCP(@N~R540{0"></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;前几期主要针对&lt;a href=&quot;/archives/onlinevideo2&quot;&gt;数据库的设计&lt;/a&gt;，&lt;a hre</summary>
      
    
    
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/tags/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="小程序" scheme="https://tanblog.cc/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="mysql" scheme="https://tanblog.cc/tags/mysql/"/>
    
    <category term="mybatis" scheme="https://tanblog.cc/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>四. 统一API响应体与全局异常拦截器的封装配置</title>
    <link href="https://tanblog.cc/2022/10/01/project/online/onlinevideo-4/"/>
    <id>https://tanblog.cc/2022/10/01/project/online/onlinevideo-4/</id>
    <published>2022-10-01T15:35:57.567Z</published>
    <updated>2022-10-01T16:28:26.747Z</updated>
    
    <content type="html"><![CDATA[<h1 id="API响应体的统一"><a href="#API响应体的统一" class="headerlink" title="API响应体的统一"></a>API响应体的统一</h1><h2 id="引入lombok依赖"><a href="#引入lombok依赖" class="headerlink" title="引入lombok依赖"></a>引入lombok依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--lombok--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="响应体POJO类"><a href="#响应体POJO类" class="headerlink" title="响应体POJO类"></a>响应体POJO类</h2><blockquote><p>主要实现统一响应体返回格式</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BaseResponse</span>&lt;T&gt; &#123;<br>    <span class="hljs-keyword">private</span> String code;<br>    <span class="hljs-keyword">private</span> String message;<br>    <span class="hljs-keyword">private</span> T data;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h2 id="响应体枚举类"><a href="#响应体枚举类" class="headerlink" title="响应体枚举类"></a>响应体枚举类</h2><blockquote><p>BaseCodeEnum</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">BaseCodeEnum</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">BaseCodeInfoInterface</span> &#123;<br>    SUCCESS(<span class="hljs-string">&quot;200&quot;</span>,<span class="hljs-string">&quot;成功！&quot;</span>),<br>    BOOY_NOT_MATCH(<span class="hljs-string">&quot;400&quot;</span>,<span class="hljs-string">&quot;数据格式不匹配或参数异常&quot;</span>),<br>    NO_AUTHORIZED(<span class="hljs-string">&quot;401&quot;</span>,<span class="hljs-string">&quot;未查询到登录信息或无权进行此操作&quot;</span>),<br>    NOT_FOUND(<span class="hljs-string">&quot;404&quot;</span>,<span class="hljs-string">&quot;访问资源不存在&quot;</span>),<br>    INTERNAL_SERVER_ERROR(<span class="hljs-string">&quot;500&quot;</span>,<span class="hljs-string">&quot;服务器内部错误&quot;</span>),<br>    ASSERT(<span class="hljs-string">&quot;400&quot;</span>,<span class="hljs-string">&quot;ASSERT抛出异常！&quot;</span>);<br><br><br>    <span class="hljs-keyword">private</span> String code;<br>    <span class="hljs-keyword">private</span> String message;<br><br>    BaseCodeEnum(String code, String message) &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getCode</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> code;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getMessage</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> message;<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setCode</span><span class="hljs-params">(String code)</span> &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMessage</span><span class="hljs-params">(String message)</span> &#123;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="枚举接口类"><a href="#枚举接口类" class="headerlink" title="枚举接口类"></a>枚举接口类</h2><blockquote><p>BaseCodeInfoInterface</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">BaseCodeInfoInterface</span> &#123;<br>    String <span class="hljs-title function_">getCode</span><span class="hljs-params">()</span>;<br>    String <span class="hljs-title function_">getMessage</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="响应体调用方法封装"><a href="#响应体调用方法封装" class="headerlink" title="响应体调用方法封装"></a>响应体调用方法封装</h2><blockquote><p>RespGenerator</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RespGenerator</span> &#123;<br><span class="hljs-comment">//    正常返回调用接口</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> BaseResponse <span class="hljs-title function_">success</span><span class="hljs-params">(Object data)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BaseResponse</span>(BaseCodeEnum.SUCCESS.getCode(),<span class="hljs-string">&quot;接口调用成功&quot;</span>,data);<br>    &#125;<br><br>    <span class="hljs-comment">//    正常返回调用接口(无参)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> BaseResponse <span class="hljs-title function_">success_noData</span><span class="hljs-params">(String msg)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BaseResponse</span>(BaseCodeEnum.SUCCESS.getCode(),msg,<span class="hljs-literal">null</span>);<br>    &#125;<br><br><br><span class="hljs-comment">//    失败调用（入参异常枚举）</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>  BaseResponse&lt;Object&gt; <span class="hljs-title function_">fail</span><span class="hljs-params">(BaseCodeEnum baseErrorEnum)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BaseResponse</span>&lt;Object&gt;(baseErrorEnum.getCode(),baseErrorEnum.getMessage(),<span class="hljs-literal">null</span>);<br>    &#125;<br><br><span class="hljs-comment">//    调用失败</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>  BaseResponse&lt;Object&gt; <span class="hljs-title function_">fail</span><span class="hljs-params">(String code,String message)</span>&#123;<br>        System.out.println(<span class="hljs-keyword">new</span> <span class="hljs-title class_">BaseResponse</span>&lt;Object&gt;(code,message,<span class="hljs-literal">null</span>).toString());<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BaseResponse</span>&lt;Object&gt;(code,message,<span class="hljs-literal">null</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="全局统一异常处理"><a href="#全局统一异常处理" class="headerlink" title="全局统一异常处理"></a>全局统一异常处理</h1><blockquote><p>项目开发中经常会用到很多<code>try</code> <code>catch</code>代码块，然而使用过多会显得项目臃肿且不利于项目的可读性与维护性。</p></blockquote><h2 id="全局异常拦截器类"><a href="#全局异常拦截器类" class="headerlink" title="全局异常拦截器类"></a>全局异常拦截器类</h2><blockquote><p>GlobalExceptionHandler</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestControllerAdvice</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GlobalExceptionHandler</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Log</span> <span class="hljs-variable">logger</span> <span class="hljs-operator">=</span> LogFactory.getLog(cc.tanblog.online.config.GlobalExceptionHandler.class);<br><br><span class="hljs-comment">//    处理自定义异常</span><br>    <span class="hljs-meta">@ExceptionHandler(value = BaseException.class)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Object&gt; <span class="hljs-title function_">baseExceptionHandler</span><span class="hljs-params">(BaseException e)</span>&#123;<br>        logger.error(<span class="hljs-string">&quot;发生自定义异常！原因是：&quot;</span>+e.getMessage());<br>        <span class="hljs-keyword">return</span> RespGenerator.fail(e.getCode(),e.getMessage());<br>    &#125;<br><br>    <span class="hljs-comment">//    处理空指针异常</span><br>    <span class="hljs-meta">@ExceptionHandler(value = NullPointerException.class)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Object&gt; <span class="hljs-title function_">exceptionHandler</span><span class="hljs-params">(NullPointerException e)</span>&#123;<br>        logger.error(<span class="hljs-string">&quot;发生业务异常！原因是：&quot;</span>+e.getMessage());<br>        <span class="hljs-keyword">return</span> RespGenerator.fail(BaseCodeEnum.BOOY_NOT_MATCH);<br>    &#125;<br><br>    <span class="hljs-comment">//    处理断言异常</span><br>    <span class="hljs-meta">@ExceptionHandler(value = IllegalArgumentException.class)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Object&gt; <span class="hljs-title function_">exceptionHandler</span><span class="hljs-params">(IllegalArgumentException e)</span>&#123;<br>        logger.error(<span class="hljs-string">&quot;assert抛出异常。原因是：&quot;</span>+e.getMessage());<br>        BaseCodeEnum.ASSERT.setMessage(e.getMessage());<br>        <span class="hljs-keyword">return</span> RespGenerator.fail(BaseCodeEnum.ASSERT);<br>    &#125;<br><br>            <span class="hljs-comment">//    参数为空异常</span><br>    <span class="hljs-meta">@ExceptionHandler(value = MethodArgumentNotValidException.class)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Object&gt; <span class="hljs-title function_">MethodArgumentNotValidException</span><span class="hljs-params">(MethodArgumentNotValidException e)</span>&#123;<br>        logger.error(<span class="hljs-string">&quot;参数异常：&quot;</span>+e.getBindingResult().getFieldError().getDefaultMessage());<br>        BaseCodeEnum.BOOY_NOT_MATCH.setMessage(e.getBindingResult().getFieldError().getDefaultMessage());<br>        <span class="hljs-keyword">return</span> RespGenerator.fail(BaseCodeEnum.BOOY_NOT_MATCH);<br>    &#125;<br><br><span class="hljs-comment">//    HttpRequestMethodNotSupportedException    404</span><br>    <span class="hljs-meta">@ExceptionHandler(value = HttpRequestMethodNotSupportedException.class)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Object&gt; <span class="hljs-title function_">HttpRequestMethodNotSupportedException</span><span class="hljs-params">(HttpRequestMethodNotSupportedException e)</span>&#123;<br>        logger.error(<span class="hljs-string">&quot;assert抛出异常。原因是：&quot;</span>+e.getMessage());<br>        BaseCodeEnum.ASSERT.setMessage(e.getMessage());<br>        <span class="hljs-keyword">return</span> RespGenerator.fail(BaseCodeEnum.ASSERT);<br>    &#125;<br><span class="hljs-comment">//    DataIntegrityViolationException</span><br><br>    <span class="hljs-meta">@ExceptionHandler(value = DataIntegrityViolationException.class)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Object&gt; <span class="hljs-title function_">DataIntegrityViolationException</span><span class="hljs-params">(DataIntegrityViolationException e)</span>&#123;<br>        logger.error(<span class="hljs-string">&quot;数据库异常操作&quot;</span>);<br>        BaseCodeEnum.ASSERT.setMessage(<span class="hljs-string">&quot;主键异常&quot;</span>);<br>        <span class="hljs-keyword">return</span> RespGenerator.fail(BaseCodeEnum.ASSERT);<br>    &#125;<br>    <br>    <span class="hljs-comment">//    全部异常拦截处理</span><br>    <span class="hljs-meta">@ExceptionHandler(value = Exception.class)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Object&gt; <span class="hljs-title function_">exceptionHandler</span><span class="hljs-params">(Exception e)</span>&#123;<br>        logger.error(<span class="hljs-string">&quot;发生服务器内部未知错误，请联系管理员处理。错误原因为：&quot;</span>,e);<br>        BaseCodeEnum.INTERNAL_SERVER_ERROR.setMessage(<span class="hljs-string">&quot;发生服务器内部未知错误，请联系管理员处理。错误原因为：&quot;</span>+e);<br>        <span class="hljs-keyword">return</span> RespGenerator.fail(BaseCodeEnum.INTERNAL_SERVER_ERROR);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h2><blockquote><p>BaseException</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BaseException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">RuntimeException</span>&#123;<br>    <span class="hljs-keyword">private</span> String code;<br>    <span class="hljs-keyword">private</span> String message;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BaseException</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BaseException</span><span class="hljs-params">(BaseCodeEnum baseCodeEnum)</span>&#123;<br>        <span class="hljs-built_in">super</span>(baseCodeEnum.getCode());<br>        <span class="hljs-built_in">this</span>.code = baseCodeEnum.getCode();<br>        <span class="hljs-built_in">this</span>.message = baseCodeEnum.getMessage();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getCode</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> code;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setCode</span><span class="hljs-params">(String code)</span> &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getMessage</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> message;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMessage</span><span class="hljs-params">(String message)</span> &#123;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>IllegalStateException</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IllegalStateException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">RuntimeException</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">IllegalStateException</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">IllegalStateException</span><span class="hljs-params">(String s)</span> &#123;<br>        <span class="hljs-built_in">super</span>(s);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><blockquote><p>NullPointerException</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">NullPointerException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">RuntimeException</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">seriaVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">5162710183389028792L</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">NullPointerException</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">NullPointerException</span><span class="hljs-params">(String s)</span> &#123;<br>        <span class="hljs-built_in">super</span>(s);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;API响应体的统一&quot;&gt;&lt;a href=&quot;#API响应体的统一&quot; class=&quot;headerlink&quot; title=&quot;API响应体的统一&quot;&gt;&lt;/a&gt;API响应体的统一&lt;/h1&gt;&lt;h2 id=&quot;引入lombok依赖&quot;&gt;&lt;a href=&quot;#引入lombok依赖&quot; cla</summary>
      
    
    
    
    <category term="Springboot" scheme="https://tanblog.cc/categories/Springboot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/Springboot/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/tags/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>三. SpringBoot项目初始化mybatis配置</title>
    <link href="https://tanblog.cc/2022/09/30/project/online/onlinevideo-3/"/>
    <id>https://tanblog.cc/2022/09/30/project/online/onlinevideo-3/</id>
    <published>2022-09-30T12:34:06.547Z</published>
    <updated>2022-09-30T14:14:13.912Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>初始化创建Springboot项目结构如下图所示，本文将不叙述如何创建springboot。详情可点击跳转<a href="https://developer.aliyun.com/article/1037334">IDEA创建Springboot项目</a><br><img src="https://tanblog.cc/upload/2022/09/%2530F2QC%25RE%7B6%28%24%40%7BUWA7PHW.png" alt="%30F2QC%RE{6($@{UWA7PHW"></p></blockquote><h1 id="配置mybatis-plus与逆向代码生成"><a href="#配置mybatis-plus与逆向代码生成" class="headerlink" title="配置mybatis-plus与逆向代码生成"></a>配置mybatis-plus与逆向代码生成</h1><h2 id="pom依赖引入"><a href="#pom依赖引入" class="headerlink" title="pom依赖引入"></a>pom依赖引入</h2><blockquote><p>在<code>pom.xml</code>文件中的<code>dependencies</code>标签内插入如下代码</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--mybatis--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.3.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.ibatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>ibatis-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>在<code>plugins</code>标签内插入如下代码</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--            mybatis逆向代码生成工具--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.generator<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.3.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>                    <span class="hljs-comment">&lt;!--允许移动生成的文件 --&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">verbose</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">verbose</span>&gt;</span><br>                    <span class="hljs-comment">&lt;!--允许覆盖生成的文件 --&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">overwrite</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">overwrite</span>&gt;</span><br>                    <span class="hljs-comment">&lt;!--配置文件的路径 --&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">configurationFile</span>&gt;</span>src/main/resources/generatorConfig.xml<span class="hljs-tag">&lt;/<span class="hljs-name">configurationFile</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-comment">&lt;!--            end--&gt;</span><br></code></pre></td></tr></table></figure><h2 id="generatorConfig-xml文件的编写"><a href="#generatorConfig-xml文件的编写" class="headerlink" title="generatorConfig.xml文件的编写"></a>generatorConfig.xml文件的编写</h2><blockquote><p>在<code>resources</code>目录下创建generatorConfig.xml文件</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">generatorConfiguration</span></span><br><span class="hljs-meta">        <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">generatorConfiguration</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;application.properties&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!-- defaultModelType=&quot;flat&quot; 设置复合主键时不单独为主键创建实体 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;MySql&quot;</span> <span class="hljs-attr">defaultModelType</span>=<span class="hljs-string">&quot;flat&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 生成的POJO实现java.io.Serializable接口 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;org.mybatis.generator.plugins.SerializablePlugin&quot;</span> /&gt;</span><br><br>        <span class="hljs-comment">&lt;!--注释--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">commentGenerator</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 将数据库中表的字段描述信息添加到注释 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;addRemarkComments&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br>            <span class="hljs-comment">&lt;!-- 注释里不添加日期 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;suppressDate&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">commentGenerator</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--&lt;jdbcConnection&gt;--&gt;</span><br>            <span class="hljs-comment">&lt;!--&lt;property name=&quot;nullCatalogMeansCurrent&quot; value=&quot;true&quot;/&gt;--&gt;</span><br>        <span class="hljs-comment">&lt;!--&lt;/jdbcConnection&gt;--&gt;</span><br><br><br>        <span class="hljs-comment">&lt;!-- 数据库连接，直接通过$&#123;&#125;读取application.properties里的配置 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">jdbcConnection</span></span><br><span class="hljs-tag">                <span class="hljs-attr">driverClass</span>=<span class="hljs-string">&quot;$&#123;spring.datasource.driver-class-name&#125;&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">connectionURL</span>=<span class="hljs-string">&quot;$&#123;spring.datasource.url&#125;&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">userId</span>=<span class="hljs-string">&quot;$&#123;spring.datasource.username&#125;&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">password</span>=<span class="hljs-string">&quot;$&#123;spring.datasource.password&#125;&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- Tan --&gt;</span><br>            <span class="hljs-comment">&lt;!-- 指定生成数据库表的实体类，避免生成user等表出现生成错误实体类的情况 --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;nullCatalogMeansCurrent&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">jdbcConnection</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 生成POJO对象，并将类放到cc.tanblog.online.entity包下 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">javaModelGenerator</span> <span class="hljs-attr">targetPackage</span>=<span class="hljs-string">&quot;cc.tanblog.online.entity&quot;</span> <span class="hljs-attr">targetProject</span>=<span class="hljs-string">&quot;src/main/java&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">javaModelGenerator</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 生成mapper xml文件，并放到resources下的mapper文件夹下 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">sqlMapGenerator</span> <span class="hljs-attr">targetPackage</span>=<span class="hljs-string">&quot;cc.tanblog.online.mapper&quot;</span>  <span class="hljs-attr">targetProject</span>=<span class="hljs-string">&quot;src/main/resources&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">sqlMapGenerator</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">javaClientGenerator</span> <span class="hljs-attr">targetPackage</span>=<span class="hljs-string">&quot;cc.tanblog.online.mapper&quot;</span> <span class="hljs-attr">targetProject</span>=<span class="hljs-string">&quot;src/main/java&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;XMLMAPPER&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;enableSubPackages&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">javaClientGenerator</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">tableName</span>=<span class="hljs-string">&quot;create_room&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;modelOnly&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;false&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">tableName</span>=<span class="hljs-string">&quot;upload_video&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;modelOnly&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;false&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">tableName</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;modelOnly&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;false&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">tableName</span>=<span class="hljs-string">&quot;video&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;modelOnly&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;false&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">tableName</span>=<span class="hljs-string">&quot;videoroom&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;modelOnly&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;false&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">context</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">generatorConfiguration</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="配置application-properties"><a href="#配置application-properties" class="headerlink" title="配置application.properties"></a>配置application.properties</h2><p>&lt; 用于mybatis逆向生成代码链接数据库</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">spring.mvc.pathmatch.matching-strategy</span>=<span class="hljs-string">ant-path-matcher</span><br><span class="hljs-attr">spring.datasource.url</span>=<span class="hljs-string">jdbc:mysql://127.0.0.1:3306/online?serverTimezone=UTC&amp;characterEncoding=utf8&amp;useUnicode=true&amp;useSSL=false&amp;allowPublicKeyRetrieval=true&amp;testOnborrow =false</span><br><span class="hljs-attr">spring.datasource.username</span>=<span class="hljs-string">root</span><br><span class="hljs-attr">spring.datasource.password</span>=<span class="hljs-string">123456</span><br><span class="hljs-attr">spring.datasource.driver-class-name</span>=<span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><br></code></pre></td></tr></table></figure><h2 id="逆向生成POJO文件"><a href="#逆向生成POJO文件" class="headerlink" title="逆向生成POJO文件"></a>逆向生成POJO文件</h2><blockquote><p><code>maven</code>&gt;&gt;<code>mybatis-generator</code>&gt;&gt;<code>mybatis-generator:generate</code><br>生成的目录如下图<br>![<del>X2A_P526&#96;2KQE{</del>5%J_R5B](<a href="https://tanblog.cc/upload/2022/09/~X2A_P526%602KQE%7B~5%25J_R5B.png">https://tanblog.cc/upload/2022/09/~X2A_P526%602KQE%7B~5%25J_R5B.png</a>)</p></blockquote><h2 id="配置mybatis"><a href="#配置mybatis" class="headerlink" title="配置mybatis"></a>配置mybatis</h2><blockquote><p>在<code>cc.tanblog.online.config</code>目录下创建<code>MybatisConfig.java</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@MapperScan(basePackages = &#123;&quot;cc.tanblog.online.mapper&quot;&#125;,sqlSessionFactoryRef = &quot;sqlSessionFactory&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MybatisConfig</span> &#123;<br><br><br>    <span class="hljs-comment">// 工厂生产要dataSource 由spring产生</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> SqlSessionFactoryBean <span class="hljs-title function_">sqlSessionFactory</span><span class="hljs-params">(DataSource dataSource)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">SqlSessionFactoryBean</span> <span class="hljs-variable">sessionFactoryBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBean</span>();<span class="hljs-comment">//工厂bean的对象是产品</span><br>        sessionFactoryBean.setDataSource(dataSource);<br>        <span class="hljs-type">PathMatchingResourcePatternResolver</span> <span class="hljs-variable">resolver</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PathMatchingResourcePatternResolver</span>();<br>        <span class="hljs-comment">//扫描 数据库和java entity 对应的配置文件，所在包是哪里</span><br>        sessionFactoryBean.setMapperLocations(resolver.getResources(<span class="hljs-string">&quot;classpath:/cc/tanblog/online/mapper/*Mapper.xml&quot;</span>));       <span class="hljs-comment">//mybatis的xml文件路径</span><br>        sessionFactoryBean.setTypeAliasesPackage(<span class="hljs-string">&quot;cc.tanblog.online.entiy&quot;</span>);<span class="hljs-comment">//生成的实体类映射在那个包</span><br><span class="hljs-comment">//        //将分页拦截器注册到插件中</span><br>        <span class="hljs-comment">//PageInterceptor pageInterceptor = new PageInterceptor();</span><br>        <span class="hljs-comment">//sessionFactoryBean.setPlugins(new Interceptor[]&#123;pageInterceptor&#125;);</span><br>        <span class="hljs-keyword">return</span>  sessionFactoryBean;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a>配置application.yml</h2><blockquote><p>用于mybatis数据库操作的连接</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">jackson:</span><br>    <span class="hljs-attr">date-format:</span> <span class="hljs-string">yyyy-MM-dd</span> <span class="hljs-string">HH:mm:ss</span><br>    <span class="hljs-attr">time-zone:</span> <span class="hljs-string">GMT-8</span><br>    <span class="hljs-attr">datasource:</span><br>      <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://127.0.0.1:3306/online_video?serverTimezone=UTC&amp;characterEncoding=utf8&amp;useUnicode=true&amp;useSSL=false&amp;allowPublicKeyRetrieval=true&amp;testOnborrow</span> <span class="hljs-string">=false</span><br>      <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br>      <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.jdbc.Driver</span><br>    <span class="hljs-attr">mybatis:</span><br>      <span class="hljs-attr">configuration:</span><br>        <span class="hljs-attr">log-impl:</span> <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl</span><br>    <span class="hljs-attr">servlet:</span><br>      <span class="hljs-attr">session:</span><br>        <span class="hljs-attr">cookie:</span><br>          <span class="hljs-attr">http-only:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">连接配置</summary>
    
    
    
    <category term="Springboot" scheme="https://tanblog.cc/categories/Springboot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/Springboot/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="mybatis" scheme="https://tanblog.cc/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>python进度条与下载器的实现</title>
    <link href="https://tanblog.cc/2022/09/30/python/pyprogress/"/>
    <id>https://tanblog.cc/2022/09/30/python/pyprogress/</id>
    <published>2022-09-30T00:31:12.278Z</published>
    <updated>2022-10-04T15:10:37.340Z</updated>
    
    <content type="html"><![CDATA[<h1 id="覆盖式进度条的实现"><a href="#覆盖式进度条的实现" class="headerlink" title="覆盖式进度条的实现"></a>覆盖式进度条的实现</h1><blockquote><p>覆盖式进度条的实现是由<code>\r</code>会退至首行实现，不多BB，我先来个小<code>Demo</code>给大伙儿练练手！</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">50</span>):<br>    <span class="hljs-built_in">print</span>(i,end=<span class="hljs-string">&quot;\r&quot;</span>)<br>    time.sleep(<span class="hljs-number">1</span>)<span class="hljs-comment"># 睡眠1秒</span><br></code></pre></td></tr></table></figure><blockquote><p>通过运行以上案例可以看到程序每隔1秒循环覆盖打印<code>变量i</code>的值，那如果打打印信息改一下呢？</p></blockquote><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> <span class="hljs-type">time</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range (<span class="hljs-number">50</span>):<br>    print(&quot;█&quot;*i,end=&quot;\r&quot;)<br>    <span class="hljs-type">time</span>.sleep(<span class="hljs-number">1</span>)# 睡眠<span class="hljs-number">1</span>秒<br></code></pre></td></tr></table></figure><blockquote><p>再次运行你会惊奇的发现进度条效果出来了！是不是很神奇？😎好了，系好安全带咋们要开始冲刺了！</p></blockquote><h1 id="下载器的实现"><a href="#下载器的实现" class="headerlink" title="下载器的实现"></a>下载器的实现</h1><blockquote><p>首先咋们先来一段简单的伪代码爬虫</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">&gt;<span class="hljs-keyword">import</span> requests<br><br>&gt;<span class="hljs-keyword">def</span> <span class="hljs-title function_">Get_Data</span>(<span class="hljs-params">url,hander</span>):<br>   <span class="hljs-keyword">return</span> requests.get(url=url,hander=hander)<br>   <br>&gt;url = <span class="hljs-string">&quot;https://tanblog.cc/upload/2022/09/EADE32CD-73D6-4EF7-84C7-7CEDBC39319D.jpeg&quot;</span><br>&gt;hander = &#123;<br>  <span class="hljs-string">&#x27;User-Agent&#x27;</span>:<span class="hljs-string">&#x27;Mozilla/5.0&#x27;</span><br>&gt;&#125;<br>&gt;<span class="hljs-built_in">print</span>(Get_Data(url,hander).text)<br></code></pre></td></tr></table></figure><p>通过运行以上程序你会发现只有获取完响应体信息才会打印变量而不能实时得到已获取的响应体大小。<br><code>缺点</code>：当请求大文件后会自动开始获取响应体信息，不利于查看与下载进度的展示<br><code>优点</code>：如果是小文件可以快速读取响应体信息</p></blockquote><blockquote><p>当然，为避免请求大文件时无法读取响应体的尴尬，可以在请求时加上<code>stream=True</code>开启流模式<br>代码如下：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download_file</span>(<span class="hljs-params">url,filename</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;解析完成，正在开始下载！如未下载，请手动打开下方链接下载！&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;下载地址：%s&quot;</span>%url)<br>    header = &#123;<br>        <span class="hljs-string">&#x27;User-Agent&#x27;</span>:<span class="hljs-string">&#x27;Mozilla/5.0&#x27;</span>,<br>        <span class="hljs-string">&#x27;content-type&#x27;</span>:<span class="hljs-string">&#x27;application/json; charset=utf-8&#x27;</span>,<br>        <span class="hljs-string">&#x27;Referer&#x27;</span>:<span class="hljs-string">&#x27;https://www.bilibili.com&#x27;</span><br>    &#125;<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;视频名：%s&quot;</span>%filename)<br>    res = requests.get(url,headers=header,stream=<span class="hljs-literal">True</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;视频总大小：%s kb&quot;</span>%<span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(res.headers.get(<span class="hljs-string">&quot;Content-Length&quot;</span>))/<span class="hljs-number">1024</span>))<br>    f = <span class="hljs-built_in">open</span>(filename+<span class="hljs-string">&quot;.mp4&quot;</span>,<span class="hljs-string">&quot;wb&quot;</span>)<br>    <br>    write_size = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> res.iter_content(chunk_size=<span class="hljs-number">1024</span>):<br>        <span class="hljs-keyword">if</span> chunk:<br>            f.write(chunk)<br>            write_size +=<span class="hljs-number">1024</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;█&quot;</span> * <span class="hljs-built_in">int</span>(write_size/(<span class="hljs-built_in">int</span>(res.headers.get(<span class="hljs-string">&quot;Content-Length&quot;</span>))/<span class="hljs-number">50</span>))+<span class="hljs-string">&quot; &quot;</span>*(<span class="hljs-number">50</span>-(<span class="hljs-built_in">int</span>(write_size/(<span class="hljs-built_in">int</span>(res.headers.get(<span class="hljs-string">&quot;Content-Length&quot;</span>))/<span class="hljs-number">50</span>)))) + <span class="hljs-string">&quot;已下载 &quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(write_size/(<span class="hljs-built_in">int</span>(res.headers.get(<span class="hljs-string">&quot;Content-Length&quot;</span>))/<span class="hljs-number">50</span>))*<span class="hljs-number">2</span>)+<span class="hljs-string">&quot;%&quot;</span>,end=<span class="hljs-string">&quot;\r&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;█&quot;</span> * <span class="hljs-built_in">int</span>(write_size/(<span class="hljs-built_in">int</span>(res.headers.get(<span class="hljs-string">&quot;Content-Length&quot;</span>))/<span class="hljs-number">50</span>))+<span class="hljs-string">&quot; &quot;</span>*(<span class="hljs-number">50</span>-(<span class="hljs-built_in">int</span>(write_size/(<span class="hljs-built_in">int</span>(res.headers.get(<span class="hljs-string">&quot;Content-Length&quot;</span>))/<span class="hljs-number">50</span>)))) +<span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(write_size/(<span class="hljs-built_in">int</span>(res.headers.get(<span class="hljs-string">&quot;Content-Length&quot;</span>))/<span class="hljs-number">50</span>))*<span class="hljs-number">2</span>)+<span class="hljs-string">&quot;% 下载完成！&quot;</span>)<br><br>url = <span class="hljs-string">&quot;https://upos-sz-mirror08ct.bilivideo.com/upgcxcode/59/28/834082859/834082859_nb3-1-16.mp4?e=ig8euxZM2rNcNbRVhwdVhwdlhWdVhwdVhoNvNC8BqJIzNbfq9rVEuxTEnE8L5F6VnEsSTx0vkX8fqJeYTj_lta53NCM=&amp;uipk=5&amp;nbs=1&amp;deadline=1664521770&amp;gen=playurlv2&amp;os=08ctbv&amp;oi=730467091&amp;trid=70250f21dcda4920a44766a481f8f6c5T&amp;mid=0&amp;platform=html5&amp;upsig=338055a9e8388a07804741c1d94a123d&amp;uparams=e,uipk,nbs,deadline,gen,os,oi,trid,mid,platform&amp;bvc=vod&amp;nettype=0&amp;bw=54744&amp;orderid=0,1&amp;logo=80000000&quot;</span><br>filename = <span class="hljs-string">&quot;bilibili&quot;</span><br>download_file(url,filename)<br></code></pre></td></tr></table></figure><blockquote><p>Tips：当开启<code>stream=True</code>流模式后，可以用<code>res.headers.get(&quot;Content-Length&quot;)</code>方法获取文件Byte大小！<br>什么？太复杂了看不懂？没关系，来一个简易版的Demo</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">video_size = <span class="hljs-number">73206360</span><span class="hljs-comment"># 文件大小</span><br>num = <span class="hljs-number">0</span><span class="hljs-comment"># 已读取的大小</span><br>code = <span class="hljs-literal">True</span><br><span class="hljs-keyword">while</span> (code):<br>    num+=<span class="hljs-number">1024</span><span class="hljs-comment"># 每读取一次大小为1024Byte，可用chunk_size设置单次读取大小</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;█&quot;</span> * <span class="hljs-built_in">int</span>(num/(video_size/<span class="hljs-number">50</span>))+<span class="hljs-string">&quot; &quot;</span>*(<span class="hljs-number">50</span>-(<span class="hljs-built_in">int</span>(num/(video_size/<span class="hljs-number">50</span>)))) + <span class="hljs-string">&quot;已下载 &quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(num/(video_size/<span class="hljs-number">50</span>))*<span class="hljs-number">2</span>)+<span class="hljs-string">&quot;%&quot;</span>,end=<span class="hljs-string">&quot;\r&quot;</span>)<br>    <span class="hljs-keyword">if</span>(num &gt;=video_size):<br>        code = <span class="hljs-literal">False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;█&quot;</span> * <span class="hljs-built_in">int</span>(num/(video_size/<span class="hljs-number">50</span>))+<span class="hljs-string">&quot; &quot;</span>*(<span class="hljs-number">50</span>-(<span class="hljs-built_in">int</span>(num/(video_size/<span class="hljs-number">50</span>)))) + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(num/(video_size/<span class="hljs-number">50</span>))*<span class="hljs-number">2</span>)+<span class="hljs-string">&quot;% 下载完成！&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;覆盖式进度条的实现&quot;&gt;&lt;a href=&quot;#覆盖式进度条的实现&quot; class=&quot;headerlink&quot; title=&quot;覆盖式进度条的实现&quot;&gt;&lt;/a&gt;覆盖式进度条的实现&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;覆盖式进度条的实现是由&lt;code&gt;\r&lt;/code&gt;会退至</summary>
      
    
    
    
    <category term="爬虫" scheme="https://tanblog.cc/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="python" scheme="https://tanblog.cc/tags/python/"/>
    
    <category term="爬虫" scheme="https://tanblog.cc/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>二. 数据库搭建</title>
    <link href="https://tanblog.cc/2022/09/29/project/online/onlinevideo-2/"/>
    <id>https://tanblog.cc/2022/09/29/project/online/onlinevideo-2/</id>
    <published>2022-09-29T13:57:20.006Z</published>
    <updated>2022-10-06T22:49:37.281Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><blockquote><p>数据库设计采用<a href="https://blog.csdn.net/minwang593/article/details/12417747">新奥尔良设计法</a></p></blockquote><h2 id="产品需求分析"><a href="#产品需求分析" class="headerlink" title="产品需求分析"></a>产品需求分析</h2><blockquote><p>需求分析是数据库设计的第一步，也是最困难、应当投入最大精力的一步.需求分析要做的是了解、分析用户对系统的需求，弄清系统要达到的目标、要实现的功能.需求分析的结果用数据流程图和数据字典表示.值得注意的是，要使一个系统具有较长的生命周期，除了要满足用户提出的需求外，还需要系统设计人员预测未来系统可能要支持的功能</p></blockquote><p><img src="https://tanblog.cc/upload/2022/09/8%5B%40%40U%29PO_WQGYN~ZY%7DJ%5DWMS.png" alt="在线同步影院需求分析"></p><h2 id="概念结构设计"><a href="#概念结构设计" class="headerlink" title="概念结构设计"></a>概念结构设计</h2><blockquote><p>概念结构设计是将系统需求分析得到的用户需求抽象为信息结构的过程。概念结构即概念模型，用E-R图对其进行描述。概念结构具有的特点∶是现实世界的真实模型、易于理解、易于更改、易于向数据模型转换。</p></blockquote><p><img src="https://tanblog.cc/upload/2022/09/image-1664465210063.png" alt="在线同步影院概念模型"></p><h2 id="逻辑结构设计"><a href="#逻辑结构设计" class="headerlink" title="逻辑结构设计"></a>逻辑结构设计</h2><blockquote><p>逻辑结构设计的任务就是把概念模型转换成某个具体的DBMS所支持的数据模型。通常概念模型向逻辑模型转换过程分3步进行：</p><ol><li>概念模型转换为—般的数据模型</li><li>一般的数据模型转换为特定DBMS支持的数据模型</li><li>优化数据模型</li></ol></blockquote><p><img src="https://tanblog.cc/upload/2022/09/image-1664465106654.png" alt="在线同步影院逻辑结构"></p><h2 id="物理结构设计"><a href="#物理结构设计" class="headerlink" title="物理结构设计"></a>物理结构设计</h2><blockquote><p>数据库的物理结构:数据库在物理设备上的存储结构与存取方法，依赖于给定的计算机系统。物理结构设计是对于给定的逻辑数据模型，选取一个最适合应用环境的物理结构。物理结构设计分为两步:</p><ol><li>确定数据库的存取方法和存取结构</li><li>对物理结构进行评价(重点是时间和效率)，若评价结构满足原设计要求，则可以进行物理实施;否则要修改物理结构，甚至返回逻辑设计阶段修改数据模型</li></ol></blockquote><p><img src="https://ocean-1306678650.cos.ap-shanghai.myqcloud.com/picture/image-1665096523022.png" alt="image-1665096523022"></p><h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> DATABASE `online`<span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci; <br></code></pre></td></tr></table></figure><h1 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-comment">/* DBMS name:      MySQL 5.0                                    */</span><br><span class="hljs-comment">/* Created on:     2022/9/29 23:38:39                           */</span><br><span class="hljs-comment">/*==============================================================*/</span><br><br><br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">exists</span> create_room;<br><br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">exists</span> upload_video;<br><br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">exists</span> <span class="hljs-keyword">user</span>;<br><br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">exists</span> video;<br><br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">exists</span> videoroom;<br><br><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-comment">/* Table: create_room                                           */</span><br><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> create_room<br>(<br>   cr_id                <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   vr_id                <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   openid               <span class="hljs-type">varchar</span>(<span class="hljs-number">35</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   vid                  <span class="hljs-type">bigint</span>,<br>   <span class="hljs-keyword">primary</span> key (cr_id)<br>);<br><br><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-comment">/* Table: upload_video                                          */</span><br><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> upload_video<br>(<br>   vid                  <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   openid               <span class="hljs-type">varchar</span>(<span class="hljs-number">35</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   uv_id                <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   <span class="hljs-keyword">primary</span> key (uv_id)<br>);<br><br><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-comment">/* Table: user                                                  */</span><br><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">user</span><br>(<br>   openid               <span class="hljs-type">varchar</span>(<span class="hljs-number">35</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   u_name               <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>),<br>   u_img                <span class="hljs-type">varchar</span>(<span class="hljs-number">300</span>),<br>   upload_num           <span class="hljs-type">int</span>,<br>   create_room          <span class="hljs-type">int</span>,<br>   <span class="hljs-keyword">primary</span> key (openid)<br>);<br><br><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-comment">/* Table: video                                                 */</span><br><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> video<br>(<br>   vid                  <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   v_title              <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   v_url                <span class="hljs-type">varchar</span>(<span class="hljs-number">300</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   v_describe           <span class="hljs-type">varchar</span>(<span class="hljs-number">100</span>),<br>   <span class="hljs-keyword">primary</span> key (vid)<br>);<br><br><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-comment">/* Table: videoroom                                             */</span><br><span class="hljs-comment">/*==============================================================*/</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> videoroom<br>(<br>   vr_id                <span class="hljs-type">bigint</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>,<br>   vr_title             <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>),<br>   vr_describe          <span class="hljs-type">varchar</span>(<span class="hljs-number">100</span>),<br>   <span class="hljs-keyword">primary</span> key (vr_id)<br>);<br><br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> create_room <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> FK_Relationship_5 <span class="hljs-keyword">foreign</span> key (vid)<br>      <span class="hljs-keyword">references</span> video (vid) <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> restrict <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> restrict;<br><br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> create_room <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> FK_create_room <span class="hljs-keyword">foreign</span> key (vr_id)<br>      <span class="hljs-keyword">references</span> videoroom (vr_id) <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> restrict <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> restrict;<br><br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> create_room <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> FK_create_room2 <span class="hljs-keyword">foreign</span> key (openid)<br>      <span class="hljs-keyword">references</span> <span class="hljs-keyword">user</span> (openid) <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> restrict <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> restrict;<br><br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> upload_video <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> FK_upload_video <span class="hljs-keyword">foreign</span> key (vid)<br>      <span class="hljs-keyword">references</span> video (vid) <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> restrict <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> restrict;<br><br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> upload_video <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> FK_upload_video2 <span class="hljs-keyword">foreign</span> key (openid)<br>      <span class="hljs-keyword">references</span> <span class="hljs-keyword">user</span> (openid) <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span> restrict <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> restrict;<br><br></code></pre></td></tr></table></figure><h1 id="生成表测试数据"><a href="#生成表测试数据" class="headerlink" title="生成表测试数据"></a>生成表测试数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;NU5YM T64H1ACW0X5C534PIOCKGSWADOWU8&#x27;</span>, <span class="hljs-string">&#x27;OH KGE9O5XAWMW0N51W2&#x27;</span>, <span class="hljs-string">&#x27;BQTH35UYI2PYTBWEEV8J3 BXBAA9XGGDVG6XQEINRJQVVEG1HCKCNFJQAJAI7 B6AH32TLO2IOAIU9YUA Y D76YQ4WUJJHM4AFQ6DP9PVMCMJUOH8FUF51J5V0SJHCW099V9PQ1DA90L8C1OF5GHGO00GU1FGYVMO J03QRJ329QQI6JUPHQSFNXGUGVMA2LS82WBGHAC50IV4WSKVRW6FCGDR05H0NPM0SVOEYO UCXVQR4PQAA2KM7NMV1 KHN8HCJRUIVWWHJDRVB7N8OCIOUJRCUF908I7GWPU81S7U&#x27;</span>, <span class="hljs-number">19</span>, <span class="hljs-number">4</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;37 9F 679K2B33H1X2A3STRXI4RM6GT095L&#x27;</span>, <span class="hljs-string">&#x27;ICSS7 AVJRME43TUPJ8Q&#x27;</span>, <span class="hljs-string">&#x27;EDB26XAWD8QE0BQXDK3GAAXYLWARCE0 5DBUJMKP9FIAG2G70JWJLAQYQATG19UKV5IB80OCR THWU10OW9R25 L 2UBDVII90B95O5JQDIU3LY9SLK8LEA9I J0LM1SHL2583Q8OI5VV4W1A0YQ5ILF14WT2TUKB S2ENHIJP4N28WMOWEOMT2TUYOP4OJ8 MBRNOQMWLK0IJ8E0GL53K77OEGB4927AF9N0D4 QCEE4LFXT91WJXQLVRIYIML6KN SHVI4OFDXUXC 6A1B0 P39QYIQOMXM PX663RTSYC&#x27;</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;PYXQG I05VSV0END78CKB 6HA9TDWL7SKYQ&#x27;</span>, <span class="hljs-string">&#x27;GTEN4TJWYTOAMT15C6WS&#x27;</span>, <span class="hljs-string">&#x27;LU3DQXOHNPG18HOK89WFWKDF77CSSQG2EO45M R1JYKUPIDFI2IR9VQCPU 7S W79L3JJOXFUKY43QGY5SR76S9DSS17IP4G8OYUNMLMQ7QMDI6QOY96NOAUQPU55FR8EY LRTYAGGDA1MIYP0VA58XRQ4YHJ47KVBPF3P T8VL555BIUBT9QLYT2K8VY3N6TLX6I4E5CUEH8P3XT5JYYB3B CT5752EDGQTAASY4O3MF89E8OQHYAR7VQ69NF68SLIGBUFJWM85B3WRVYF BW451Y0B7JJEAHWD0WGV0TNR&#x27;</span>, <span class="hljs-number">16</span>, <span class="hljs-number">10</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27; GOU3TKJSA0LUDR 1R966AC2J0Y7GFOR8P6&#x27;</span>, <span class="hljs-string">&#x27;GII24T8O71Q9DU2UQTJK&#x27;</span>, <span class="hljs-string">&#x27;34YHH0YV9W6FX1AMAFF64LV0AUPIXAJAEF5RTPUNFGPYW1AKUIYLM9L0MJUS0Y8RIMWDQU Y339EFTKSDJY94QM20BBMSPIC5QJT24IN0U6Y 6  VR4GY6O3YTDKQA9BK517P6TQF1JJ4UM2WQV5JMV6I3 WCDT8NOABJHNC8HARBFV4JIFYA3IKAOYH8JNNPIULIH RPD1S7GGCDIS5OF9KEGTWY8NFLA33MI1FSABKDCB3LJPL6E RHQYC5UUHQ18LUTF0U9ALGGOWUTQYCPWUP6HOHOOW277I8HX8VO11&#x27;</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;9IWM51WXRKD9BN21CJV SS9SXBAMV4F FEA&#x27;</span>, <span class="hljs-string">&#x27; 9HBC4M5NMVE DTXA HM&#x27;</span>, <span class="hljs-string">&#x27;402FB 9DOYGMTYBFLXSY2LQVVMN0BDBT25AKS4DTTNE41K4R9O33QHBFU50G7JPE1YG9HMYRB6SI6WEJ6YVULJAJ9XOT2UMXSDWP7EPGVVW3HCE85OLYPRN8BRLF B594AA5BO4Q5WCBTM50YN2BPOB669 VJD8UUFJ3N4E5UG0VKVGMHLCYN4WQ21DVVVLTTJV6LTKTPJ0HMMXLK6S39EUX9LJ9O2P Y5R439HLI3T3EVX 5W01P6AC1AL34MUR4R0XKBPY1X5UUYNM47YCOIADQFWHXM29BTNL1AK14U0X&#x27;</span>, <span class="hljs-number">10</span>, <span class="hljs-number">7</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;P POWY7AQG9WNV5JW6YE894AEFQNB3S4L C&#x27;</span>, <span class="hljs-string">&#x27;L5BTGOH8MM4KVNRAONH8&#x27;</span>, <span class="hljs-string">&#x27;IN0VHHTOG JWN71TDI68JK0G0VAMNHNSD5PV7 1UTEMM7R0K86S4Q9PUJ6R7IEM00 ABCUET25VSS3XCUWCX 0OD6PPVM2U9I70NX5XQ2WCBU4D 2EYGDT1P2EMDYUCGH6YV2VYV6SYTVO0F9QM1 MBQTJS4H1LM2PYRWW3QBBDJDH SCF2Q 97HNW989T9XY0NMJ16VXG1EU7JCSES7JHQ57MVEAABRDNGH7YF2YJ6XWDBIJY5TTY81R781OG0L1QJ23988XBTD3F8U4T5M269O3MS6K7V38MWNGHDFVWQL&#x27;</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;7F3GGF36N22H3XUAV23EYSDJ6Y1MU7KYUN1&#x27;</span>, <span class="hljs-string">&#x27;3G0F4TK4AT3C4JBM9X4L&#x27;</span>, <span class="hljs-string">&#x27;3RF4K4P7JNOOH8NJ1DP2R599L0TWCWI3KMC8HEGXKQOVQSVGCNLH K6JS6V0F9I466R6XKTRGQM99G4YMOXHRJYSD64BSCUGNIN8J1 CJRAVWUYP50DBG3PYQ7DJJXGMRMBPIHYY8YM24VO171VH1PANA9SID80S9DC4I4IIXAW8U EW35LJY7D6GAR7KS1Q0KL6SI6N4NP LYY 4K287WEGQ50USNRYUX7P3MAM9VU1C 1KNG3HBGL1KLIQD67JM2KNPT CVNFANN1K3WPDCXX7IAIC569BAGG7GW5CHMWU&#x27;</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;TIPF1J 5XM2 GYRBN2Q6FME2P7MOVT9PRD0&#x27;</span>, <span class="hljs-string">&#x27;JB7EC53E0BBFSOHUAMKJ&#x27;</span>, <span class="hljs-string">&#x27;M07NVT93VU8T4TJBEWGORKSMP1FWO9VVUFH1G4D1022G NFF2Y8R0PUECVBV22DQHSPNCLYQFXRBQ59MIDQ92464RD0RABL06AE20W7U93F91NG1OKWMXXMKWYLT093B5KXK1NKAAQ0TJANX2DHVP6ANAFSVX2NK4OE 1CT PB66 8RON2 RHUJGV18FRTCOD2OVKEY5ASE54F3W AONDS388E9NBELUQLIFA3B2DHY8PT2933OKKRUDFK0CCQYCGHBJWOG8S5VLK8JQMYT68F2E2XG OLGOHGDP49B9VWX0&#x27;</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;4 JOITHJDIPDWANASPBR0U55TV0R4M82GHF&#x27;</span>, <span class="hljs-string">&#x27;UHUOI7UKB3P OGG84XH5&#x27;</span>, <span class="hljs-string">&#x27;JEIANQPVLD91AE8P7N8G5KO3NW XKBRXIXE5VQTLW385Q6WBSGTFEA1I9HY69CQIDCTNGLA1H 1RM N9BKYJOI2HSWW4YC0I15NC5F5IMB21OTMLTCQW0I442WU 43ICIN4U5Q4YNAXA57K473GPU1D8X326SR 3R4P0AFS0 2K0T 48I0RFA5P8933BHXYITQ4TUSGY1L6V1HP S9JJVDWA1DT1CLN RJHEPJ7P7U8NNCH44TYTRND469CA 55KOJ117UXW0MIB0PE1KNH4K9H5P132IDC OLE695CRXO2Y&#x27;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">16</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;5GAAN7XXPTM2PR3FWQN 505579NJN8FP DI&#x27;</span>, <span class="hljs-string">&#x27;FAOHUBNOJ0EOO1VN0MS8&#x27;</span>, <span class="hljs-string">&#x27;226QCKVGFY7HMYPLNITLXIHFCGT6JN7V9CDXJB404WGTY176L5 ELYFKE3NQC2JGKT9YFJK4ULTKUCSC2C13WKPHWRTM EYAH8XU6URAC ORCQ1QDGY04T 8XO5Q30N42P883ML5YH94N1Q6BDI5H5B40D5LB52UVSUGF97JHSI W YM7B74CV0G9S8EC WI1F5HK20EB45DB748YXDA07KTBCI WM8C5 DYT6QVB0QY56VAX93KWBWVBRWUR0BNE5I4LPD7XGK2OE372RAKC73IYA44P2P G5B AM7U2VPO&#x27;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27; WCMA43UXF3MW74PA8T8RB414SR5QHNHRW1&#x27;</span>, <span class="hljs-string">&#x27;HJ2I1HPYE4B9CYCABXHG&#x27;</span>, <span class="hljs-string">&#x27;573KTBJLUTMPFGMOILB1LID3DURC902F TA576DJU14OJAPW3A9LJ8YPC6VII2AMGFIVQ1Y1TLLPI6C AQYOLO7SOBP7DOS712TSGYA9B6A97YGN0H4ELN1UXWLHXVSS3PI4 G75XCQ0YTJD8YQ3UA35OG9KS0AM4898ED796JRQME29WF17A9UKJDMU2Y2NLFYOD2PSQ7ICMP6007LCAJJM50 TGXOF2 R438SM9LA0W6T2ME89UJ6I6MT55JG71H7F9YC8EWTYWOPGS12WD2J3BDYQXWIU3GYL4S4UW90L&#x27;</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;T5QS25YFVGU4HV2B63JTUXLUCLLR34H69P9&#x27;</span>, <span class="hljs-string">&#x27;SXNRE1ESPPBL2XM3DKJQ&#x27;</span>, <span class="hljs-string">&#x27;OFCXM3GBYC9VA9GI ESXW94SGMK9HM3HP22U8F4S21O0VAPN6WWM28YBKTX0YYLE2PX8SS OS4XBVBCHTPETAL3N938732A6DRRSIVAJR2X934BFRFG 8HDEYMBNSN9WQ48TL8J33RE0DCS5E64COW DJYQTVEUQT2RDAEJ6GDUCNNBEOF7OETBIE0XT9SO2TAI2WPCT1NINTGM302BH615WK60FVBNDFUH8QHD6KLG3U7RCEESXUCFSH7Y3PA BXAFT5X7MAPHEO63ED3SSAEHK6BFUQ06R3GXHJ4RL1V80&#x27;</span>, <span class="hljs-number">2</span>, <span class="hljs-number">19</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;XCU1TRKINDVK4B9VE0CDW57V68TK50V1NLJ&#x27;</span>, <span class="hljs-string">&#x27;AHXDIV7Y1QD3OEDRT85J&#x27;</span>, <span class="hljs-string">&#x27;CM8N 99HDQTU820H MXN7P8G95AS4D4YVL2NSFW52UBBQFXCJ6B45QJPTV8YDWAYE6S4WI8KA23V9S9JGONHBNNTM4D25JPFY9UX UI51QKI 0VQW0J6J0919OR9FS3EQPY375SXC0EHM8CC XVSCPUA75QRNL KV87S8KWP8 K2B35BX6R3N4M312V0Q8N8LITDCMHTUNBTVNGEWBP0Y KPCW2L9G8H33GCB9YB8Y7DJ97W7VFMBGI T1I87DKXOFXBEVGXLN0J4T6S29W5930G1PNU6J9VMVF5G7  2IUA&#x27;</span>, <span class="hljs-number">13</span>, <span class="hljs-number">3</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;JYKIORMPQFH22 HXJU37MELWBVLF63NYG 1&#x27;</span>, <span class="hljs-string">&#x27;YLTQEYLDLBJPJYK61CMF&#x27;</span>, <span class="hljs-string">&#x27;YIWRUTFYXUFAQ27HAVSC8RCRTE9IV42RW0P2UQLLX3WDN96B5QBXW7EAF2U791C8EDOPG58RFMC5I7XPXVVY AL0N60CHPM5C1O924HB3LGT4UY7BH6BX27CH4VXUF336VE15LRA5MP69X6HK2UN6ERWEO9LPH9UY69X4FRTCPDPU6PDEN57734FE2VOE1X95KHJICG7 8HHP8 T5L8VIUES2V42B55GU724T13 V0UCRKO0MPY9OB 2G38EXR9NLITJN28RB94OYMS7541K8 KG577YNRV6KEADJXOB9LNL&#x27;</span>, <span class="hljs-number">17</span>, <span class="hljs-number">6</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;DDFF1SUW6HR MP231O TOYRWVAF940LCXEP&#x27;</span>, <span class="hljs-string">&#x27;WLMCQ97S7DJRC8CVBDX &#x27;</span>, <span class="hljs-string">&#x27;AKAJVYDWWX51EAUQC577EMEPJEHDFMVSTN7KD57WH3LU1BW9H01TYIQF8ID53IJ4KM0K1RYEO8KFWWOPFJG1R2CBL2FHVW0P8JL48XI6C37U5UTEGBXL07WJGTWY6XDQKH32V9EOBAT9EGQERT9BC4WTQA9DV0D1DC BDN02JD12VFNBNGK9XIMNB09MG2M3E0XYOHJ2XSSR9UIGGI5LJF446E UXEH0H7 8CJW4GVA0U74TI7ONFC7 BPS9RP4NJMELB SB4WYMEE 07N1VC5INO68912HEFRQK7DREX0LL&#x27;</span>, <span class="hljs-number">18</span>, <span class="hljs-number">9</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;WV2N5Y4VAINKIYOGGSXUAHSU2BJ2 V3P0E2&#x27;</span>, <span class="hljs-string">&#x27;X98HLFUAF3IB9QQ  QLS&#x27;</span>, <span class="hljs-string">&#x27;7RFAYTIYN3E6DW8EB09E25VV3R3SYB715YLN6OIO7X3BGX FPGXEG4VFKHTHAR5AL6BMD1T CPIG17Y6VQTUJ 67TDT7280QGVAG1MH01XEK8JVPYKXSCWHGHMOCFJN151Y3P3U0OJAF8NQ5P35YY QITUUXKC9XO K3Y HEAUHC99VWBU2RE96UI3ILOAABIH3NDSBRDJ1BHUVEKS48VKD4WQMQ1UFAPNDNKSIVYST07WMBR9F2FS46RNX9XGP2S2XM9BIKL3IRQT7HP10NBLHYF10WLEF1WP5Q2I1XFFHJ&#x27;</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;J9NOKX3AV2YRF 3TKFEOKL5I4XKHIP7GTO6&#x27;</span>, <span class="hljs-string">&#x27;0BBMNM6IOXOS5E0AYPJF&#x27;</span>, <span class="hljs-string">&#x27;DT4UTALYPNWMRK4WGY4RNX6VSG5424 YH50IXLQOVGYF6BF9U8OW6HWH453KPYYBGTXRHXO51GMTMOQK697B6L1QWHHR 18KOV41FOKCJ 4EIKR3W041WU2GW85D6 AAN75XAM8WOBXXV8XSFA572883 4871QJRULT61 D4VLUA8DF7BW76Y5MT1R7AUO0WRRAO8CDXGVYKM1BM2ILEEE C MPRFMN9XCXHYQG W5JYOQCW9NUJR804Q6QV4Q51XVFTTKNHN99VGC2MGTRDV70AARK5UMW6EQQ1YNPE701U&#x27;</span>, <span class="hljs-number">8</span>, <span class="hljs-number">18</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;G3F2PYXUUJPSC1HFKVDGK3J7CAR31A7BHP8&#x27;</span>, <span class="hljs-string">&#x27;OEHWHAGVWKPBRTEG56CQ&#x27;</span>, <span class="hljs-string">&#x27;M6V AEGT5E7JNKR5 975YA3P287B231IEXUTEOB0J8IBTR4OH4179S2GB GES3QSGRWPIU07JKNNXDRMTY751CE4HVLLYIUM14RSB1GT4L6A0D2211BI027RSEIG7RG7Y WXK7WFT0CL8MQANYPGWVUG2FW555UUGOJK0BVQOV9KRVONQSITKN KM67JHVM GXPWI53OCNRXST6PVXP0S6JICCP5W3NA8V8PVGO8W6G0I0P589X8G4PXL0F46U2JR3QG U N0RST6Y2UH1Q8F2 LBM5C10CNFIK9QWN9W3  &#x27;</span>, <span class="hljs-number">6</span>, <span class="hljs-number">12</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;H2FN6HGYBER 9T2PFJSKRY7X4S93LEQMKUD&#x27;</span>, <span class="hljs-string">&#x27;B8BQI4X25ISIBU05 DU4&#x27;</span>, <span class="hljs-string">&#x27;41DURWCGMI5GY3G8BH6Q8IWW21JK88 UNJXAVXT00U9LIQR U0K2MVORYLW9APJC2OFI0K OKEN8H76CH8T NQM EV64VE84TKQ 0QHTBCYRWNNS3QG4VQ79E 469MCG873D5POJAU1SEJWFNYC6DSQ101TJA31AUJ HC6RKKV201TE039M0RCACD IIEY562D69X8O88EJ9HSG E NO77PVLQVIFOCEEGOTTD6NG97MW74DMA5DDJL0S2R6U93VFFUFHIRGD617 77 S93FH0ER7NC9M0M4PTBHW R08SEF&#x27;</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">user</span> (openid, u_name, u_img, upload_num, create_room) <span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;7BSUVE2WV9EGWHEK6YDGSPTN CIIUXIFYDO&#x27;</span>, <span class="hljs-string">&#x27;LSLNYJ3PNOOC6RJ0V6WC&#x27;</span>, <span class="hljs-string">&#x27;0BD5 WPC9L9T 51N8OYES4WLKH7C7OTPPI XB4JS Q7IF0LGREUJCNUII503MB7RD490YQEKHAYTSN0VQRW41PK2CJSKP0OCUW4S1GDN3F2FEFLB8PGAJGTE4K SU3OGI1C8TWT5NVULLKWAXMOVLYLMILSCDQX774G2IMFELMCAQ5RJYAGFX676NE6JN0EUE4RKE24ST5I57ACW0VH2D28I93YB5WDU1EBQRJ3YTC FHV1DA 9MPEICK9N99BDRLR18YBWMKF620RJ4KM0JSU6IBVLNI3AD3FKBCJ9PL4BM&#x27;</span>, <span class="hljs-number">9</span>, <span class="hljs-number">17</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;OGODMPYGKSAJ3XSYLYKQ&#x27;</span>, <span class="hljs-string">&#x27;C99RPEM1GNR 2KAV2 0M7YJREH2ITYCT EKT9TD P0LBPONK09UB9U H 3N9B3P6SE9XW6J47F98BDI 323MRA37DKP73MBOM BGU67F759E9 6HFE3RDGL1OVODGSLASCHDAHR0NSY4UP6ONL0KVFJ5JBSCST8581BDGKT6WFEDGQE7VHQK 66W3O0FGR8ID12TNWDCVIHQH1YYT6 VIM3T243KVMVT4RVM5TL42VWHDM8WOB8A9J6KN7LDJAPN 0KHAK 9GU1LKA 89VRB2MJ0NWV3VLJR0XTNFBCNK25L&#x27;</span>, <span class="hljs-string">&#x27;TSJ5FDIWLOLN7H94KFS96XLLIK0SJD54E5BO5Y4S  V5 8SEFS1212CK6MJ530DCR8V3QC O0SN5ERQ53GCGTKTQVGUR2Q7WEQC2&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">13</span>, <span class="hljs-string">&#x27;EFQ09WJGI8SBM1A32FF4&#x27;</span>, <span class="hljs-string">&#x27;LT5AS9K3UHM2CL0MF8J1P624 5RDHM8Q W0I3AHCGO3YJ2XKPT2K5QJHD IOQ 3YA12KJ65JWK XKI94CVTJ 16 1P9VH38R3S68 JXR3JIGDJI5WTQBCWTJH5XKD72D0HEGUE R3S95B4W8102GVK R8XNEK1PNPF5C17AYXG1SDOFKFOCLTN0VTOY8SQ15VT352SJDML 902XYQ DMV72RUWJ29SR07Q5BXD9SB6FO9GYXQ 7HBP XX0G2T4C3H7LD4NRI5239MHVO5M9C YHNPA1IP22VG5V2QN3L8 WE&#x27;</span>, <span class="hljs-string">&#x27;C99E9EBQFI0RJMK6FV1CBBGAO610U88GQTUHH I5HCD9UBR6CRU66C5MNE KQ9AA5JF5DN6UMIBF5GCJLGSR7M1Q8UX3O7JPBCI5&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">17</span>, <span class="hljs-string">&#x27;SKGJ53TTU2Y3XWXJM0KA&#x27;</span>, <span class="hljs-string">&#x27;68TYTR5J591QUYUXSDXHXESADV4QSN3OK3RAI7THPAWO26RXF6SRSNF255G92L7RVXCT5LHU131P4YY9I275UJ5MPSK69C1JS 3AKKLD25BMR7UWIXJR1MKB9FL4PAM0IYA5PK 09DAWST5XC60DBBLLI8KGPPCCRVYJJ0NUL0DO1IVMIKJEM0F7QM73MSUWT8X607Y3KTORD BC1ATXYYKWOJ3OTO14FVTH5DI68V5MPQ0OIWCQCAQPOAIHOD5PY51J L8O7PHBX9TD EG5U4 RKLLGPSME8OQ2LXA9K77M&#x27;</span>, <span class="hljs-string">&#x27;NGKCBM4KJY0IPM8A52IS9CJT9EA0KKA2586FOSVR7KPGR9CJTL5217BK804ORXV MVTYAGFOBXMYCU000YY1G2IW88YC8L0PY1IY&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">10</span>, <span class="hljs-string">&#x27;RCWYMT144MG27H01S0LB&#x27;</span>, <span class="hljs-string">&#x27;1 V9376AJEMBRK86CR96NMWF4A4U PL003JE 3EUL09U3P2W31263F8OOJHFKXOHVVJ C9O54QSX20JIH8FM21AIFDE631BUNCTDCCH9BADDMRXM4XW ISB9KH6GRK4FGJN0SC UEAF2AQ7DKJESYDGYCEEQCGIADCJMXP58M6P2225PGG3TEWJ80LXP52N5LMB J9QF9G7MIBE5GXFYGY7FUFX4 5HD8132 8A2LD83RG8T95587GVJ86S08WTXK870593G06C2FVUML59UBQS5G19FRV4JSQB3EFAKV0D7&#x27;</span>, <span class="hljs-string">&#x27;9HEN4NBOM6YTLT2BU03Y21WSW4CQ FMNA59OU8JI8KORHS1P7IXKGDEX7F75MJTEI55FS0FGEMGAKCM3XGL8846W2XTQTU OOK37&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;XU5F725LNIEXU9SN8DH7&#x27;</span>, <span class="hljs-string">&#x27;NC417Y17WKWKY2BO01PH60DSO5P JXGD30R8WG3SO30Q4A87YSPS2DLMHC1 IU1K2I9 HFAAWXN9FKLK1YY2Q2GEQ8QI7MR 8TUSSLQIA 4DCP6JAO4MLAS01I 551OXWBMRPJVG6OL1DG40AMME02LJD8T5UPYVWUCP5TEACSXR2EU02RO0ED96EX0DV97GKMN03TAA5HST03 SAI9P92EB6H4ET47GS9YSGWTWIEN2SXKP1P7G2 WHD7HFAP2UYRDS98JQSIR12ARA0L1RCR E6R9CYB6Q LVEK19L 84X&#x27;</span>, <span class="hljs-string">&#x27;ACBPSFAHTWUM15F2709Y0D2XJOA61WT ODULQH246Q2I1AMV9OWG2XPSRA9QD1WDB9WK MDLP3X5Y 33APN0S673JUNA BMNN0QB&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">14</span>, <span class="hljs-string">&#x27;TGSA5V9AHQ923LKSA1BP&#x27;</span>, <span class="hljs-string">&#x27;HD48FR2WM12VBACNI37CEL6QEB4DJEJMRBHB0BHRI9YW0CFIN63460TGW1H5H8LKN8VM1O4WLVMO0S S4L1NUG2Y7206CCM V2P7AOOHK6GHO 9YP8LLG109F5OU7RTN8NLG4MND1EYTTOA68WIXM7H2SYPOOY31KRISC594SN2AT0V8JCVMGT5QI3MEUQ4BQ4LUEDIUHYXPJJNLH71WN5F7U07WFEE8LAEE7P9FYAYYG6 DY M5CWH635K5LL894ROD632A GW7HC0DX6JTA6BXJQ0D2DNH7XIUCSBME8QN&#x27;</span>, <span class="hljs-string">&#x27;V6L F393FPJV8KDC94V6WFG0QF4S3ITL8SX FPB2IFHX0N6A25S5 115 I9B4NWEHLB1SXIYUG6PM6HWE2RPUIY7O3PJA31TI3H5&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">5</span>, <span class="hljs-string">&#x27;WVSIOHB3LOVQ81HWGEBA&#x27;</span>, <span class="hljs-string">&#x27;6SOYC30LQFOHK18U57GOV4637J4729QPIPQ960HBGL4EJ442K A74IBHTEHHW3HY2MN0I4PYS   V1VPP0J7 9ULQW2KS8T4WKQLDFRNJAC70O0KDXECJCX43 C8P1V2OY03U XO3N3LFW9KYWS1WQ1YIXNVOS0UIJE62LUIDLWGMEOTEDHA78W37I1LON M3KG874CQT18N4ULM49 UMMJRUUA3RRPQNMM9E7N3DBARISME4XK0DI99NH3S13FQWQ4 XH5JK83 EONPV2CSNHN3FDTQMKQ84CUP FL3FVG8&#x27;</span>, <span class="hljs-string">&#x27;NJLRNIP94E EX2G7PN4Q63YB2JK5S7  7BKNKQVCIEM2VR9OP5PJJU691I2R973XNWS0WNCDX5NHY7DT3N5I74EJUGGAGUW 7UTA&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">18</span>, <span class="hljs-string">&#x27;N6DV80DX8VKLI16R8BL7&#x27;</span>, <span class="hljs-string">&#x27;DVTAGS6VQ LWGUMLMYD259MFUI 2ITW 5MN2FNPKXD7IKPIR91G7ARYRV LRX1UHD3T1WLDUJYXW3377PEEREF52D41RAXEISFCFHYBCXVH5 K9N8LS1XDB9P15RQ7GM6JJMCILCI8UJM5YE31MGR0C AS1L 4QYAB 47E SO1BI 7EFK33NE8VHKB4B97QAXMJLA7Y9V5EOJJFD1 OBSACQ0G41AIO3 4BVCVX2LF QACQJUW7EIV 93Y 4DDNJBERYNTY2DJ5MT7QWDWPXK2TBCI 0AOFDU0K 1TYVP4AE&#x27;</span>, <span class="hljs-string">&#x27;D8HCGKM8GRRW2L5P92F22QWFF98T5MH6AUHY8HC67C7YYGQE78TBDNU4QYTPRL GH8BMGLVAI46N2I6X6KYJHB1CGW OC0Q2BLPA&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;A59SFAU8H82KQ6MPP5J8&#x27;</span>, <span class="hljs-string">&#x27;75N02XI6KCLTDONDFLN1IDQ8V1LO7O480MG6DVAIMLWBPXT NQOM9SI613BDGOKJFEYASIWFE421 OKSD5PV5IGFX EH4EWT4QOYUJJN3O9SV6AXI9N76ODRH4U7U5MR9A E1JP DBC51MNLKX9NFCE38CFFC1J8N2 I114HHK0A84K9ID2  GWH4URMC3Q6HJLTEETA8ER06PBGVABI VK7Q96XMCLRLKGIS 3PX3UTN9DYQO4AMCBM5MV8YMQBAD3HV L7DFAVHMJMO0C00KFAXDPX5P4AGOP8CJ5FYJW &#x27;</span>, <span class="hljs-string">&#x27;BJNN9R18P13VSHYJ4UGD8G0CB2F6PG7O2T9LUBWQ94AW7QQT07GJACU 0U310T43 XOJ69LP5SWV3H KYBKC8Q9JVDY382JIC643&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;5HD64CV3G31YHKJ1J5HQ&#x27;</span>, <span class="hljs-string">&#x27;HJVHV7K1G4EX7EF739XAHICY NX4KYAKJLPRWJ8B6H1DPWIUOWN3AETFJ9C9NNTSJCQS0MKJG1DOKJ79T23NB6O5T95Y6 NEG9S2XMI0M2T JFLLF8A1K7CANCCEMPQS8N4BU0VP0T0NV0IKJNKIK4XMW762 1S4UT7ALO581DT4D6JL4JKGC1ELGE7HVJC2DWR0GXOU2RI3C73R905FGIGB9DBDC7M2T VMBIKJKVIBNRCS04J52ELJ9JMM0ER5B0TDIIOV KMSO 81HR5HS22PF4I92YJ1 X8QYGQ3VKWL&#x27;</span>, <span class="hljs-string">&#x27;RFTGS1CTPD7JRYNHD7TNCILWU ALIT3 K40VNPBWRCM7ATVSEPVIX2U8VT3LT D54 DL8JTELUBQFIM9NNH23RU V4CJOS MG4WT&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">9</span>, <span class="hljs-string">&#x27;5U6FBG4NGKRP6OIEWHXL&#x27;</span>, <span class="hljs-string">&#x27;CDIKSSRGS9 WUDOH42N2YG B4B43QIM 2TP25YD9R24THD2MGDGBFC8VYE4H5YGFVM4WQVA8 15VH2 7SU5EL5EBYHPFPC9H7KS1R54V76G4YFWUDXQPQE9P5OPT126V6QM5I7PSPS7808NE0HX64JSB3LN6TCQJBO9LAE6UCNDLV8CT3QAI2UAHX4XPQDLGQB4BE10YFXQ7P0C9GB4YVJBR8PN9H7TV10EX7AWAX6RQR4AYH9IIYTQV63RAVVO6GJ3R49T27FSIC 4E42DSPNONGGY N8QTN1YQIW2R80XI&#x27;</span>, <span class="hljs-string">&#x27;272UYN4W2LM0XSKWE7X8WX9YJ6BN70EHP9MV80L36FVCLBT7GXU5KNT5T0YLFJF3Q6B89I5GPDMPJUOVUDI404T002V U0CWTE7V&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">15</span>, <span class="hljs-string">&#x27;F CMU5BUPCAYX83QUO50&#x27;</span>, <span class="hljs-string">&#x27;P 35ULC1K0J3AFO5M3WJT2KGV45YHR0E7BOYM2V7 Q1EFY89O694RL85OR D0VQF76MR 75VHM4V5GMEO1ALR13REHLXBXHL4N1L0279JA2Y9RPEI8N1M50VNXGPJXHHCM9O96UBSCFD413O67BTQ5OOYM6U7CQCC2WFUDLJR8 TMY4BL8LCYLJ2Y0SSJ 14MOVCG0T53CVB5J02SK 9OIUK8EH161XDO7D49RN1G0GWM6NCSCCBVBLEI1S9B6QD38TMXR PIDDWJRU6ONSF1UMDH2JBPGLYF71TRIIC0JMO&#x27;</span>, <span class="hljs-string">&#x27;I6XONOEQ5EDF6U6OYKU6O26JL59QK5QYUHX83G17DCX46MDIJM6TCLD2D245NNIOS8T51SO0QJ5QITWFJBYUK47LG9KAU HHCO64&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;W5L3H9YIKL6152GGLI A&#x27;</span>, <span class="hljs-string">&#x27;WI1BJEPP59G1VKS6LAEOAM WHYPROJEU83K5JGQCR8JJFIW TJURCP05FFUH9A84LKHNSLUSYSXPYPK3OID2AQQ2GNXMMLVDLDNKHHAJBEL A NY1T93STYAVRT0K7FNCEP6WPKB U9IA F59KI0L WJMB220P85IX1J8QG MGD3TCCHC8YNH6 T5A1YTOW89MW9TY2KFU86SH7VOO5H98W7D1YFWKDEDL7OXPR852UU7V0F98HOQWOXTCPXAOTB0CSRY55B0N3U0R6CMK3 TULFHC1IYCRT1Q448E5BTFKM&#x27;</span>, <span class="hljs-string">&#x27;NKO866MTXIUG644T03PAMP30U7XY0I8K0PP5BWPH5NKQBWBXAS7F5NXTG6ATVQ3HB Q35QJM03QK8V 03G9IWX5THQEXITMKQ0 N&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">11</span>, <span class="hljs-string">&#x27;5MEPQO12YCB628COAT1T&#x27;</span>, <span class="hljs-string">&#x27;7E83TTXWDL79YNGWWOWVQ4K18I UWPO7UV57EHPIBOC4A97K7RAMX78GCC5P36KC182CHGXKNF4X4JEH KAC04  1RDWSW7FUEGGQ3UIB50OMBVEB GIWCITVIQGXGCHG72IB4IFD0MLFR8PDSOP0V9WC7JQWOH7YEWQXNS0U4Y SJWDCP4PC0FS0EF3RXXXNM9ES9AOTG9EFM33GB8EEI2PIK84XWROOFR2OVFHEY2GMHQ7Y4RV6IXHG16LIRV3C98DXUD3SF7 6WMP2JOD9LMPH3PD20UJYJU3BY3W3KQY&#x27;</span>, <span class="hljs-string">&#x27;B41NCN9FTRFL46S68LKUQMBC2OF5HE JYXXQ YCWGLNV41W619RC5GEA7KY8UNILQEOMTNHT2VGNUY1GRV3FKS8226DI34NTT6LS&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">19</span>, <span class="hljs-string">&#x27;Y27Y1LMALSPP1 3DI1M &#x27;</span>, <span class="hljs-string">&#x27;F5986XA9QQHJBXIIOL5XTI178DBWK01H9V 4KG6389NTOKN70W0XACIVKOLRFASV14VANA5JX 21A1FU7MCUR48APT8UYUWKQBTCTGDIH3DD 7DWY  LNUIYO7B2G0L4SDHLHX9Y553MKVE3HHGRFFVFWMP482EC7JAY5II2N5I8URL8L53NJO5GF91AP523HHG0A0259JLDRHFBIC04I9IXSRSI7ANHPA0 F18QT38R6IKH4T3RWUAX245E8IJOGGQT48IEN00W2B00QT1T9X6NVQ486OA3UV60 0QYOYAU&#x27;</span>, <span class="hljs-string">&#x27;R6G13IFE4RY5CSRW 2S8GKO8J4RF COCRYCQJQYAR7MGASO5AM9FJ9MEJVHQFES0UAF3WB53NYBTN0KAJP2H55RMHGR8 6J7 DCI&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">16</span>, <span class="hljs-string">&#x27;846AT2LK7EKUW9HM2N6 &#x27;</span>, <span class="hljs-string">&#x27;D71E9X957X6HCFGWJJV9JUPSNR D8XAC5E57241BE8HX6GR0WSFVO2F1QTOPBDWTD2786UDHH0NOKGBSQ2GQ0O9AXCF9D4VA68BE W2I6HGK8GA3OTPWS6WNYF9FEFQILVVSKIPW6N0LGXKIBH6IQHT1K4BSXXSVSUJMFANTAIOW0OT8AD6V7X9WJA521P2CXV9BOA12AW2T90I3BOCG1A9DPSJ6B7FO7O9DUYS6 M5S1LWN2JJWKONAVCK3WBJ6TT3K55M79B4FRH11A0WYPN 3WKJ3FBTT1RJP6210 MHJ&#x27;</span>, <span class="hljs-string">&#x27;M603L6TCDOUYQJYBPHVR0HERNXF S2V99MSPMT0P77QF0HMORSD0E6 ISV R99BRQ60J2SBL0TB9VKYN88D3I19JURN99D9XKR5I&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">7</span>, <span class="hljs-string">&#x27;AX4PDOJADOWJULYTIJW7&#x27;</span>, <span class="hljs-string">&#x27;C6O2S VMW5PXQ 5H3VFB5YNU6F9 30 08KG9AD6Y3KXIA39RM2DXHMT4VAD8IUO EWPRPUS7SNLBJ73MAFEOD0NVI38J9HYNEXLBV41S0LFEGL4WTU24784MWREAB4DF8Q2FNQF9A YJ3F2JKLPLDADYBJAKRUUWJUT505UDRRF2IR1ODGE C4WQO423MPJRD5CBWREY0DY3SKANLH1XLIIUANP81MYUE XABUH37MCB2RGU59AML97G5LX14GS9S3N59KTY0O83H3FWHOL1XYCTNUA83X339MBNS1CVM61G&#x27;</span>, <span class="hljs-string">&#x27;IQ0A9D45IK FT OSC588 8TK04VJNQG6G6Q9Y7FG340AQJWF1I310BPAP1MHJTWRKMC1K1B5WRLSRWG3N1FN6E9TLP7V87A4GD1D&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">8</span>, <span class="hljs-string">&#x27;NL3W3FO8EHGASNL LO81&#x27;</span>, <span class="hljs-string">&#x27;7ACLL47O45IDSR143O5R13J7 ABCU4Y1HXNSXA4TSBLN22APEAKPVFRS 692VYX8KJ2LJC49LTSFIUVO877M3156WI TLIQ0PJM8 VSK4WJKQOGCXS7AIONOX2MK91X078M3DUIY5RK6SGHPSB NHH0BAFHHT5RJFUKPCKD8CGVEDL4C6 AVW1SS759SMWEKRIDR0WBVGYTMLSEKGU277C9DXMW MROOK9554Y13B7WC581C3XM2BRJ3T8MM9M96B2BUUD0NPY0ABHM8I3I2R4HK58VHKPM GRJ1X4H2IWB8&#x27;</span>, <span class="hljs-string">&#x27;50OX6 MK7EIGEJ1V9B93 INWBF7SRR95AN43649EWR2WEQ0OMC7T6R8 VG Y7WQG2W3MAHW967TGV9O753G9HPJMINSGHVHG44S5&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;WQY1W2Y3TVJWT7LAR8YF&#x27;</span>, <span class="hljs-string">&#x27;SIHJ77JYJKP3ARHG0PXOI4U0PMJEKP76XPP4NWUL6RPMOVIMPP8IYSGAYO HTUDAIT8KFVT3SNOSPKA666BCECWI0IEP7QUUV3O44K4N QLTUPFIM2PRE90ESP67OQUAY3JNAHRLVS8NL1V6MMR LXW NCIP81X94T1PMWYH516UGBRUDKNUNMYBKTCMYTYICP7GR47004RN 2LCM18V8JTO0 E W4  3JTRE8C0743 SU4QKI792TFHY35J4WFQEKH4ACFG F2BF0C30X3UWF1AYSYOS0Y0RFJQ7DVI5YDX&#x27;</span>, <span class="hljs-string">&#x27;U79BYABQ2NRP8N2DAFFKGTJTDOTIM18Y7FDSM0W4AB6NRFXT01 MB3W5N8A69T5 U3G46QMKRM4M9APT3GOTC4DA4AR2923V543W&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> video (vid, v_title, v_url, v_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">12</span>, <span class="hljs-string">&#x27;BHJ8BNDYMGYLJ0DY6CW6&#x27;</span>, <span class="hljs-string">&#x27;LXMT9N23IA4U24UE27J7946CW79H1XIMYRHB5D86P7I1WKOD55DUJ49I8LKTI0NX8OV80ADVBY8VJ04 8G0OO9JB1905YBW04OWDSW3N84OLOQJ7KL8JESGK7S19AA0PFQ0NW7RNCAGJID6PHY4GUDCOOMG3 TLIYNX6BJJMLUG7Q20S9U0LR27SE7AP 70JJ8N7IOD Y7W9MARE9FKAFDVMBTXCV6FM02G4JS UEKAJXX07VUP1M5 MHOXGMSR5ARWIWHVX 5B0 B1GI4MGNOXTXW7JVLRABSU3QQCMR 3T&#x27;</span>, <span class="hljs-string">&#x27;38CPWT4DOKUAYI5BBV7PNLE2EPETNB3VCRQV01XSJVKV5YFFHQGJ4PL5 47RUEMYJV8 IDM YBVS6IQONJXIG62GR5DA9 17QL1M&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">13</span>, <span class="hljs-string">&#x27;V59 CQX91GGPVAODXJVY&#x27;</span>, <span class="hljs-string">&#x27;E9WUE2TDILQTWIMDU81U WWSCROJC10SXYM1WEAQQ4S6 75NDBGHRFIGB1BGNB0VIKD XMNQ0VXUL6D3TCX92LU SW8SA2EMNV21&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;G5AA8FPW4YF07R5 ISAX&#x27;</span>, <span class="hljs-string">&#x27;S30F8IKTYVDMP0L4D1C95DGLAB69VIYNAO4N9IE6Y02SL T3TQ7YSFC29L4PP2MGQJNU3AFBWU3U0PBDY4FB8 IMCSTJS1V92BY1&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">18</span>, <span class="hljs-string">&#x27;JWN2S0L4EVCWV4ICMVNJ&#x27;</span>, <span class="hljs-string">&#x27;O7WLOXXOKO0D 0S9WRVR57KXPSS0N2810HCPQ9USY76LKMVCCHL7VJJQ5LRTG6D759ND BSDTIBQVMYT4R5R7WMIRNGWWI5N5LVI&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;MWUK38233ED6 8UC8D2Q&#x27;</span>, <span class="hljs-string">&#x27;XTMBTS8LO28LT2BGFUJFA3TQ1B124EE8K2W3Q2177CJ51T3FA8PAHW2UD9ES6LYRFO VBB2PADMRFBT14GFM3 P  D8XIWFHLN1H&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">19</span>, <span class="hljs-string">&#x27;HE2SBLSJEKPESJUL ES1&#x27;</span>, <span class="hljs-string">&#x27;CEYE9DV9NS1PQ8PKX6K1G4F3903YOFYEN3OQY1L5GDP3IPEXV8N1WEMNPIFVTWGQ42FDSFSLJ2WYCF14RQD60G7M2UA3NB1ALXP2&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">17</span>, <span class="hljs-string">&#x27;4RTBRMSGO1BUQU1X0Y61&#x27;</span>, <span class="hljs-string">&#x27;N0AFPU39ND2BI8BUY FNNFOODA I148Q1PN5PI 2FULA16EHG381RL0QQXAHC44HWS9VFVLO5PLFCYUTRADRRHXN0PU K6PJS 9F&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">14</span>, <span class="hljs-string">&#x27;G4AH 7J0DYHP5I1A84LH&#x27;</span>, <span class="hljs-string">&#x27;QJ7GT1RTES4NOFEF08BWXG7ENHJBQCL7H2D 1HN88U YHUNBXVD3VJTUO8LDAF DM X V1H1W6GW088DYBM2OKU QD0FL4WO4L C&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;OGFNHDNJ WMM3PXHBKOY&#x27;</span>, <span class="hljs-string">&#x27;X1CBJTUPPR07LDTQPP78WV9CBRMJX8 3CC3R7LTWEWN1BT 9WEONBK24K38041LEU4DQ3B61KNMSN8HVPMSV56H 39KVP6SMM0J8&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;TW3DEOYHLE C7CVP86UU&#x27;</span>, <span class="hljs-string">&#x27;DO4V7A5078V02MSAMES84R8GSKT9E1U 9A4DRL8XJ739I6TWXQKEELMUH66 HL8B0NUJAPNEBK9C4EODDNP492XQXRQLNJF7X6DO&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">9</span>, <span class="hljs-string">&#x27;JUXEBTIF9QDUCFVL9HCX&#x27;</span>, <span class="hljs-string">&#x27;D61 6JW6ET208JB6I 4HB3K2930996X420OUSBORHDDSUOVKJIY3TS0J6XAUDX3E1JQTX OD0FTCJ82E66X8PDR9S2CWOHQ9FK5E&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;V4JWQR1KR1IWIEV0O7YN&#x27;</span>, <span class="hljs-string">&#x27;CI4B5PD P9WXW0D999RQ1 21JY JX8KRSSM4KEUMSTMLNDC4QT6HEI3IE897Q6JQ3M1GI2RV7RS1W3RGIAKBU WAP78HMD9Q4QI6&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">7</span>, <span class="hljs-string">&#x27;OSYLNP8T 6M6LUYERH 8&#x27;</span>, <span class="hljs-string">&#x27;84CNMVHUT1ILO02W QSEUJJ69MBQVPKMH2X3Q1 420EO0P306ABYYNLO1KKV3AD8ITOOOVBLMJ6BFJK8EHJKBQNJN4NNELVV NVN&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">15</span>, <span class="hljs-string">&#x27;BJ78OHUJCRTTS3FIY8W3&#x27;</span>, <span class="hljs-string">&#x27;1QL6WM3BYO254APSJ3YASJ1NCB9839PUIV7 UP12MCEL86USC00NLF53F305JR1TRJT9XMRLHJPG9WQGEMLFVV1V9EWNKPLPHSDG&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;LXJ3EWEMCKLC64SHBG1O&#x27;</span>, <span class="hljs-string">&#x27;5MRON8CS6P 8F UMUANIGMWVY TEGO341DBM890WJ8YC723DCKN8O3D40Y BF3H0MXKJFFN3FJRLJP00NXIWK1WVKC4O8UBYKQA1&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">5</span>, <span class="hljs-string">&#x27;FBWQFJJLLDVOOAO7 KBF&#x27;</span>, <span class="hljs-string">&#x27;DDG F0CG8PI O2H0UKDR B08QOP1YN5HCO09OIF05PSXR2KR9QWK6DBHQ8YGG0LWLU2SVBH46CDLVDKXLFX8KIDH70QJ8GSWD9QK&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">8</span>, <span class="hljs-string">&#x27;2LI8M4EFA4ER4LADXBTH&#x27;</span>, <span class="hljs-string">&#x27;52R7830XGX41MK7V43C21IYT12PU17BSAVCCACR0HYK86UQOCW6N81R 4E4NWWIRI41AAFY3I7194XR482LARVOS8AL DG70NSHH&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">11</span>, <span class="hljs-string">&#x27;VIGXB7EQ10GV H5WYVI2&#x27;</span>, <span class="hljs-string">&#x27;AI8LIRIMEDVRC73QN6G9Q2F3UVM4 31 AQG044NEVOWATAYE 14JFGPXR38YEQXIE4U4G9 DJ7YL7P9BUE0WPLD2MXTF8U1GQMTS&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">16</span>, <span class="hljs-string">&#x27;XLPUM7CV44KI3U7E42TG&#x27;</span>, <span class="hljs-string">&#x27;4GTYE7HPOAT7B5PRHY1SW4DOGW6TD14 AF48FX5TY8BGM43S7J6Y5AAXITTCJ4TYPDTWPEW96541WXCPTM06W15NBXADEJ6 LRID&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">10</span>, <span class="hljs-string">&#x27;8CT6SMQYLISH5HFK6ORI&#x27;</span>, <span class="hljs-string">&#x27;BO0L52GND9WFU0KMTRUEGXMV8USLOLKPDM0E4D8NAKH1ATM7HTIXWYRJ9GIGB76L03OJWXA0XA3RQMQFLJO4AJ9OSSJCBCCEER6 &#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> videoroom (vr_id, vr_title, vr_describe) <span class="hljs-keyword">values</span> (<span class="hljs-number">12</span>, <span class="hljs-string">&#x27;HYWLNIYSANWXDIPOLQ8O&#x27;</span>, <span class="hljs-string">&#x27;U 3DLQ1 ACAHS100ONM9438708R4SATTS6 1N5U9JFF7UEKUPM0YNKC8BD0FE69E4J1 GMF9OL14HMLXJ6F0RAUMNTCNGWH3UJ6T&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">10</span>, <span class="hljs-string">&#x27;7BSUVE2WV9EGWHEK6YDGSPTN CIIUXIFYDO&#x27;</span>, <span class="hljs-number">2</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">18</span>, <span class="hljs-string">&#x27;7F3GGF36N22H3XUAV23EYSDJ6Y1MU7KYUN1&#x27;</span>, <span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;9IWM51WXRKD9BN21CJV SS9SXBAMV4F FEA&#x27;</span>, <span class="hljs-number">11</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;DDFF1SUW6HR MP231O TOYRWVAF940LCXEP&#x27;</span>, <span class="hljs-number">14</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;J9NOKX3AV2YRF 3TKFEOKL5I4XKHIP7GTO6&#x27;</span>, <span class="hljs-number">15</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">13</span>, <span class="hljs-string">&#x27;JYKIORMPQFH22 HXJU37MELWBVLF63NYG 1&#x27;</span>, <span class="hljs-number">8</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">14</span>, <span class="hljs-string">&#x27;T5QS25YFVGU4HV2B63JTUXLUCLLR34H69P9&#x27;</span>, <span class="hljs-number">4</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;T5QS25YFVGU4HV2B63JTUXLUCLLR34H69P9&#x27;</span>, <span class="hljs-number">16</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;T5QS25YFVGU4HV2B63JTUXLUCLLR34H69P9&#x27;</span>, <span class="hljs-number">12</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">18</span>, <span class="hljs-string">&#x27;9IWM51WXRKD9BN21CJV SS9SXBAMV4F FEA&#x27;</span>, <span class="hljs-number">5</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">10</span>, <span class="hljs-string">&#x27;XCU1TRKINDVK4B9VE0CDW57V68TK50V1NLJ&#x27;</span>, <span class="hljs-number">6</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">9</span>, <span class="hljs-string">&#x27;XCU1TRKINDVK4B9VE0CDW57V68TK50V1NLJ&#x27;</span>, <span class="hljs-number">9</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">16</span>, <span class="hljs-string">&#x27;7F3GGF36N22H3XUAV23EYSDJ6Y1MU7KYUN1&#x27;</span>, <span class="hljs-number">10</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">9</span>, <span class="hljs-string">&#x27;XCU1TRKINDVK4B9VE0CDW57V68TK50V1NLJ&#x27;</span>, <span class="hljs-number">7</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;7F3GGF36N22H3XUAV23EYSDJ6Y1MU7KYUN1&#x27;</span>, <span class="hljs-number">3</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;DDFF1SUW6HR MP231O TOYRWVAF940LCXEP&#x27;</span>, <span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">15</span>, <span class="hljs-string">&#x27;WV2N5Y4VAINKIYOGGSXUAHSU2BJ2 V3P0E2&#x27;</span>, <span class="hljs-number">17</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">19</span>, <span class="hljs-string">&#x27; WCMA43UXF3MW74PA8T8RB414SR5QHNHRW1&#x27;</span>, <span class="hljs-number">19</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">7</span>, <span class="hljs-string">&#x27;WV2N5Y4VAINKIYOGGSXUAHSU2BJ2 V3P0E2&#x27;</span>, <span class="hljs-number">13</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> upload_video (vid, openid, uv_id) <span class="hljs-keyword">values</span> (<span class="hljs-number">14</span>, <span class="hljs-string">&#x27;TIPF1J 5XM2 GYRBN2Q6FME2P7MOVT9PRD0&#x27;</span>, <span class="hljs-number">18</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">9</span>, <span class="hljs-number">17</span>, <span class="hljs-string">&#x27;JYKIORMPQFH22 HXJU37MELWBVLF63NYG 1&#x27;</span>, <span class="hljs-number">13</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-string">&#x27;WV2N5Y4VAINKIYOGGSXUAHSU2BJ2 V3P0E2&#x27;</span>, <span class="hljs-number">7</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-string">&#x27;G3F2PYXUUJPSC1HFKVDGK3J7CAR31A7BHP8&#x27;</span>, <span class="hljs-number">14</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">17</span>, <span class="hljs-number">13</span>, <span class="hljs-string">&#x27;4 JOITHJDIPDWANASPBR0U55TV0R4M82GHF&#x27;</span>, <span class="hljs-number">2</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">3</span>, <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;NU5YM T64H1ACW0X5C534PIOCKGSWADOWU8&#x27;</span>, <span class="hljs-number">5</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">18</span>, <span class="hljs-number">10</span>, <span class="hljs-string">&#x27; GOU3TKJSA0LUDR 1R966AC2J0Y7GFOR8P6&#x27;</span>, <span class="hljs-number">4</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">6</span>, <span class="hljs-number">14</span>, <span class="hljs-string">&#x27;WV2N5Y4VAINKIYOGGSXUAHSU2BJ2 V3P0E2&#x27;</span>, <span class="hljs-number">5</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-string">&#x27;WV2N5Y4VAINKIYOGGSXUAHSU2BJ2 V3P0E2&#x27;</span>, <span class="hljs-number">3</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">13</span>, <span class="hljs-number">16</span>, <span class="hljs-string">&#x27; WCMA43UXF3MW74PA8T8RB414SR5QHNHRW1&#x27;</span>, <span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-string">&#x27;5GAAN7XXPTM2PR3FWQN 505579NJN8FP DI&#x27;</span>, <span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">15</span>, <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;TIPF1J 5XM2 GYRBN2Q6FME2P7MOVT9PRD0&#x27;</span>, <span class="hljs-number">6</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">2</span>, <span class="hljs-number">11</span>, <span class="hljs-string">&#x27;J9NOKX3AV2YRF 3TKFEOKL5I4XKHIP7GTO6&#x27;</span>, <span class="hljs-number">5</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-string">&#x27;PYXQG I05VSV0END78CKB 6HA9TDWL7SKYQ&#x27;</span>, <span class="hljs-number">14</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">10</span>, <span class="hljs-number">6</span>, <span class="hljs-string">&#x27;J9NOKX3AV2YRF 3TKFEOKL5I4XKHIP7GTO6&#x27;</span>, <span class="hljs-number">9</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">19</span>, <span class="hljs-number">17</span>, <span class="hljs-string">&#x27;TIPF1J 5XM2 GYRBN2Q6FME2P7MOVT9PRD0&#x27;</span>, <span class="hljs-number">5</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">16</span>, <span class="hljs-number">8</span>, <span class="hljs-string">&#x27;4 JOITHJDIPDWANASPBR0U55TV0R4M82GHF&#x27;</span>, <span class="hljs-number">4</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">12</span>, <span class="hljs-number">14</span>, <span class="hljs-string">&#x27;WV2N5Y4VAINKIYOGGSXUAHSU2BJ2 V3P0E2&#x27;</span>, <span class="hljs-number">16</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;7F3GGF36N22H3XUAV23EYSDJ6Y1MU7KYUN1&#x27;</span>, <span class="hljs-number">1</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;WV2N5Y4VAINKIYOGGSXUAHSU2BJ2 V3P0E2&#x27;</span>, <span class="hljs-number">19</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> create_room (cr_id, vr_id, openid, vid) <span class="hljs-keyword">values</span> (<span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-string">&#x27;J9NOKX3AV2YRF 3TKFEOKL5I4XKHIP7GTO6&#x27;</span>, <span class="hljs-number">10</span>);<br></code></pre></td></tr></table></figure><blockquote><p>效果如下<br><img src="https://tanblog.cc/upload/2022/09/YB1%25%40Y3%29NO9%294Y7%24QM5WD%25J.png" alt="YB1%@Y3)NO9)4Y7$QM5WD%J"></p></blockquote>]]></content>
    
    
    <summary type="html">数据库的设计与表创建</summary>
    
    
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/tags/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="mysql" scheme="https://tanblog.cc/tags/mysql/"/>
    
    <category term="PowerDesigner" scheme="https://tanblog.cc/tags/PowerDesigner/"/>
    
  </entry>
  
  <entry>
    <title>一. 项目简介与技术栈分析</title>
    <link href="https://tanblog.cc/2022/09/29/project/online/online-1/"/>
    <id>https://tanblog.cc/2022/09/29/project/online/online-1/</id>
    <published>2022-09-29T13:31:48.213Z</published>
    <updated>2022-11-18T03:31:41.545Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>该项目属于个人毕设项目，目前还处于开发阶段。前期功能分析可能不完善后期会慢慢添加。项目灵感来源于某站一起观影功能！<br>若看官有好的建议欢迎留言补充！最后再立下一个flag，年底前对项目完工并成功部署服务器。最后再写一章说明文档！至于惩罚emmm，暂时还没想好🤪</p></blockquote><h1 id="前期使用技术栈分析"><a href="#前期使用技术栈分析" class="headerlink" title="前期使用技术栈分析"></a>前期使用技术栈分析</h1><blockquote><p>后端：<code>SpringBoot框架</code> <code>Mybatis框架</code><br>数据库：<code>mysql</code> <code>redis</code><br>前端：<code>微信小程序</code> <code>uniapp框架</code> <code>colorui组件库</code><br>多媒体视频处理工具：<code>Ffmpeg</code></p></blockquote><h1 id="开发使用工具"><a href="#开发使用工具" class="headerlink" title="开发使用工具"></a>开发使用工具</h1><blockquote><p><code>IDEA2020</code> <code>Postman</code> <code>PowerDesigner</code> <code>Sqlyog</code> <code>微信web开发者工具</code> <code>Hbuilder X</code></p></blockquote><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><blockquote><p>前端：<a href="https://gitee.com/hai-yang-tan/uniapp-online">https://gitee.com/hai-yang-tan/uniapp-online</a><br>后端：<a href="https://gitee.com/hai-yang-tan/online">https://gitee.com/hai-yang-tan/online</a><br>项目进度和博客进度不会相差太大，别问为什么，问就是边敲代码边写博客！</p></blockquote><h1 id="后端脑图"><a href="#后端脑图" class="headerlink" title="后端脑图"></a>后端脑图</h1><p><img src="https://tanblog.cc/upload/2022/11/online.png" alt="online"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;该项目属于个人毕设项目，目前还处于开发阶段。前期功能分析可能不完善后期会慢慢添加。项目灵感来源于某站一起观影功能！</summary>
      
    
    
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/categories/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="SpringBoot" scheme="https://tanblog.cc/tags/SpringBoot/"/>
    
    <category term="同步影院小程序" scheme="https://tanblog.cc/tags/%E5%90%8C%E6%AD%A5%E5%BD%B1%E9%99%A2%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>（优化版）工学云自动打卡签到脚本</title>
    <link href="https://tanblog.cc/2022/09/27/python/gxy2/"/>
    <id>https://tanblog.cc/2022/09/27/python/gxy2/</id>
    <published>2022-09-27T02:00:25.069Z</published>
    <updated>2022-09-29T15:59:20.375Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>基于<a href="/archives/gongxunyunsign">Python实现工学云自动签到打卡</a>文章做的脚本优化</p></blockquote><h1 id="业务逻辑代码"><a href="#业务逻辑代码" class="headerlink" title="业务逻辑代码"></a>业务逻辑代码</h1><p><code>创建文件名为sign.py并拷入以下代码保存</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> smtplib<br><span class="hljs-keyword">from</span> email.mime.text <span class="hljs-keyword">import</span> MIMEText<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">gxy_sign</span>:<br>    <span class="hljs-comment"># 初始化</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,user_account_info,sign_info,email_info</span>):<br>        self.user_account_info = user_account_info<br>        self.sign_info = sign_info<br>        self.url_all = &#123;<br>            <span class="hljs-string">&quot;login&quot;</span>: <span class="hljs-string">&quot;https://api.moguding.net:9000/session/user/v1/login&quot;</span>,<br>            <span class="hljs-string">&quot;planid&quot;</span>: <span class="hljs-string">&quot;https://api.moguding.net:9000/practice/plan/v3/getPlanByStu&quot;</span>,<br>            <span class="hljs-string">&quot;sign&quot;</span>: <span class="hljs-string">&quot;https://api.moguding.net:9000/attendence/clock/v2/save&quot;</span><br>        &#125;<br>        self.headers = &#123;<br>            <span class="hljs-string">&quot;Host&quot;</span>: <span class="hljs-string">&quot;api.moguding.net:9000&quot;</span>,<br>            <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8&quot;</span>,<br>            <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Linux; Android 7.0; HTC M9e Build/EZG0TF) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/55.0.1566.54 Mobile Safari/537.36&quot;</span>,<br>            <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;keep-alive&quot;</span>,<br>            <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/json; charset=UTF-8&quot;</span>,<br>            <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>        &#125;<br>        self.user_info = &#123;&#125;<br>        <span class="hljs-keyword">if</span> email_info:<br>            self.email_info = email_info<br>            self.send_email(self.Sign_in())<br>        <span class="hljs-keyword">else</span>:<br>            self.Sign_in()<br>        <br><br>    <span class="hljs-comment"># 根据现在时间判断上下班签到</span><br>    <span class="hljs-comment"># 上班  8-16</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_time</span>(<span class="hljs-params">self</span>):<br>        mytime = time.localtime()<br>        <span class="hljs-keyword">if</span> mytime.tm_hour &lt; <span class="hljs-number">8</span> <span class="hljs-keyword">or</span> mytime.tm_hour &gt; <span class="hljs-number">16</span>:<br>            self.sign_info[<span class="hljs-string">&#x27;type&#x27;</span>] = <span class="hljs-string">&#x27;END&#x27;</span>  <span class="hljs-comment"># 上班</span><br>            self.sign_info[<span class="hljs-string">&#x27;types&#x27;</span>] = <span class="hljs-string">&#x27;下班&#x27;</span>  <span class="hljs-comment"># 上班</span><br>        <span class="hljs-keyword">else</span>:<br>            self.sign_info[<span class="hljs-string">&#x27;type&#x27;</span>] = <span class="hljs-string">&#x27;START&#x27;</span>    <span class="hljs-comment"># 下班</span><br>            self.sign_info[<span class="hljs-string">&#x27;types&#x27;</span>] = <span class="hljs-string">&#x27;上班&#x27;</span>  <span class="hljs-comment"># 上班</span><br>        <span class="hljs-keyword">return</span> self.sign_info[<span class="hljs-string">&#x27;type&#x27;</span>]<br><br>    <span class="hljs-comment"># 发送请求</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">Post_data</span>(<span class="hljs-params">self,url,data</span>):<br>        <span class="hljs-keyword">return</span> requests.post(url=url,headers=self.headers,data=json.dumps(data)).json()<br><br>    <span class="hljs-comment"># 获取planid签名</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">PlanIdSign</span>(<span class="hljs-params">self</span>):<br>        byStr = <span class="hljs-built_in">str</span>(self.user_info[<span class="hljs-string">&quot;userId&quot;</span>]) + <span class="hljs-string">&quot;student&quot;</span> + <span class="hljs-string">&quot;3478cbbc33f84bd00d75d7dfa69e0daa&quot;</span><br>        <span class="hljs-keyword">return</span> self.getMd5(byStr)<br><br>    <span class="hljs-comment"># 获取签到签名</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">Sign_num</span>(<span class="hljs-params">self</span>):<br>        byStr = <span class="hljs-string">&quot;Android&quot;</span> + <span class="hljs-built_in">str</span>(self.get_time()) + <span class="hljs-built_in">str</span>(self.user_info[<span class="hljs-string">&quot;planId&quot;</span>]) + <span class="hljs-built_in">str</span>(self.user_info[<span class="hljs-string">&quot;userId&quot;</span>]) + <span class="hljs-built_in">str</span>(self.sign_info[<span class="hljs-string">&quot;address&quot;</span>]) + <span class="hljs-string">&quot;3478cbbc33f84bd00d75d7dfa69e0daa&quot;</span><br>        <span class="hljs-keyword">return</span> self.getMd5(byStr)<br><br>    <span class="hljs-comment"># md5加密</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">getMd5</span>(<span class="hljs-params">self,byStr</span>):<br>        encode = byStr.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        <span class="hljs-keyword">return</span> hashlib.md5(encode).hexdigest()<br><br>    <span class="hljs-comment"># 登录</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>(<span class="hljs-params">self</span>):<br>        res = self.Post_data(self.url_all[<span class="hljs-string">&quot;login&quot;</span>],self.user_account_info)<br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&quot;code&quot;</span>] != <span class="hljs-number">200</span> :<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;登录失败,错误信息为&quot;</span>+res[<span class="hljs-string">&quot;msg&quot;</span>]<br>        <span class="hljs-keyword">else</span>:<br>            self.headers[<span class="hljs-string">&quot;Authorization&quot;</span>] = res[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;token&quot;</span>]<br>            self.headers[<span class="hljs-string">&quot;roleKey&quot;</span>] = <span class="hljs-string">&quot;student&quot;</span><br>            self.user_info[<span class="hljs-string">&quot;userId&quot;</span>] = res[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;userId&quot;</span>]<br>            self.user_info[<span class="hljs-string">&quot;moguNo&quot;</span>] = res[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-string">&quot;moguNo&quot;</span>]<br>            self.user_info[<span class="hljs-string">&quot;planid_sign&quot;</span>] = self.PlanIdSign()<br><br>    <span class="hljs-comment"># 获取任务id</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">Get_PlanId</span>(<span class="hljs-params">self</span>):<br>        self.login()<br>        self.headers[<span class="hljs-string">&quot;sign&quot;</span>] = self.user_info[<span class="hljs-string">&quot;planid_sign&quot;</span>]<br>        data = &#123;<br>            <span class="hljs-string">&quot;state&quot;</span>: <span class="hljs-string">&quot;&quot;</span><br>        &#125;<br>        res = self.Post_data(self.url_all[<span class="hljs-string">&quot;planid&quot;</span>],data)<br>        self.user_info[<span class="hljs-string">&quot;planId&quot;</span>] = res[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;planId&quot;</span>]<br>        self.sign_info[<span class="hljs-string">&quot;planId&quot;</span>] = res[<span class="hljs-string">&quot;data&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;planId&quot;</span>]<br>        self.user_info[<span class="hljs-string">&quot;sign_num&quot;</span>] = self.Sign_num()<br>        <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">Sign_in</span>(<span class="hljs-params">self</span>):<br>        self.Get_PlanId()<br>        self.headers[<span class="hljs-string">&quot;sign&quot;</span>] = self.user_info[<span class="hljs-string">&quot;sign_num&quot;</span>]<br>        res = self.Post_data(self.url_all[<span class="hljs-string">&quot;sign&quot;</span>],self.sign_info)<br>        <span class="hljs-keyword">if</span> res[<span class="hljs-string">&quot;code&quot;</span>] == <span class="hljs-number">200</span>:<br>            <span class="hljs-keyword">return</span> self.sign_info[<span class="hljs-string">&#x27;types&#x27;</span>] + <span class="hljs-string">&quot;签到成功！\n系统返回结果&quot;</span> + <span class="hljs-built_in">str</span>(res)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> self.sign_info[<span class="hljs-string">&#x27;types&#x27;</span>] + <span class="hljs-string">&quot;签到失败！\n错误原因为&quot;</span> + <span class="hljs-built_in">str</span>(res)<br><br>    <span class="hljs-comment"># 发送邮件</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">send_email</span>(<span class="hljs-params">self,text</span>):<br>        mail_host = self.email_info[<span class="hljs-string">&quot;mail_host&quot;</span>]  <br>        mail_user = self.email_info[<span class="hljs-string">&quot;mail_user&quot;</span>] <br>        mail_pass = self.email_info[<span class="hljs-string">&quot;mail_pass&quot;</span>]<br>        sender = self.email_info[<span class="hljs-string">&quot;sender&quot;</span>]<br>        receivers = self.email_info[<span class="hljs-string">&quot;receivers&quot;</span>]<br>        title = <span class="hljs-string">&#x27;工学云每日签到信息&#x27;</span><br>        message = MIMEText(text, <span class="hljs-string">&#x27;plain&#x27;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        message[<span class="hljs-string">&#x27;From&#x27;</span>] = <span class="hljs-string">&quot;&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(sender)<br>        message[<span class="hljs-string">&#x27;To&#x27;</span>] = <span class="hljs-string">&quot;,&quot;</span>.join(receivers)<br>        message[<span class="hljs-string">&#x27;Subject&#x27;</span>] = title<br>        <span class="hljs-keyword">try</span>:<br>            smtpObj = smtplib.SMTP_SSL(mail_host, <span class="hljs-number">465</span>)<br>            smtpObj.login(mail_user, mail_pass)<br>            smtpObj.sendmail(sender, receivers, message.as_string())<br>        <span class="hljs-keyword">except</span> smtplib.SMTPException <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(e)<br><br></code></pre></td></tr></table></figure><h1 id="main启动调用方法"><a href="#main启动调用方法" class="headerlink" title="main启动调用方法"></a>main启动调用方法</h1><blockquote><p>在和sign.py文件同目录下创建自定义名文件并保存如下代码，最后根据自己的信息做修改即可正常运行<br><a href="https://www.qvdv.net/tools/qvdv-coordinate.html">点击跳转经纬度查询地址</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sign <span class="hljs-keyword">import</span> gxy_sign<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-comment"># 账号信息</span><br>    user_account_info = &#123;<br>        <span class="hljs-string">&quot;phone&quot;</span>: <span class="hljs-string">&quot;工学云账号&quot;</span>, <br>        <span class="hljs-string">&quot;password&quot;</span>: <span class="hljs-string">&quot;工学云密码&quot;</span>, <br>        <span class="hljs-string">&quot;loginType&quot;</span>: <span class="hljs-string">&quot;android&quot;</span><br>    &#125;<br>    <span class="hljs-comment"># 签到打卡信息</span><br>    sign_info = &#123;<br>        <span class="hljs-string">&quot;country&quot;</span>: <span class="hljs-string">&quot;中国&quot;</span>, <br>        <span class="hljs-string">&quot;address&quot;</span>: <span class="hljs-string">&quot;上海市·上海家里蹲大学&quot;</span>, <br>        <span class="hljs-string">&quot;province&quot;</span>: <span class="hljs-string">&quot;上海市&quot;</span>, <br>        <span class="hljs-string">&quot;city&quot;</span>: <span class="hljs-string">&quot;上海市&quot;</span>, <br>        <span class="hljs-string">&quot;latitude&quot;</span>: <span class="hljs-string">&quot;31.350884&quot;</span>, <span class="hljs-comment"># 纬度</span><br>        <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,  <br>        <span class="hljs-string">&quot;device&quot;</span>: <span class="hljs-string">&quot;Android&quot;</span>, <br>        <span class="hljs-string">&quot;longitude&quot;</span>: <span class="hljs-string">&quot;121.291435&quot;</span>  <span class="hljs-comment"># 经度</span><br>    &#125;<br>    <span class="hljs-comment"># 邮箱配置</span><br>    email_info = &#123;<br>        <span class="hljs-string">&quot;mail_host&quot;</span> : <span class="hljs-string">&quot;smtp.qq.com&quot;</span> , <br>        <span class="hljs-string">&quot;mail_user&quot;</span> : <span class="hljs-string">&quot;14312400@qq.com&quot;</span> ,<br>        <span class="hljs-string">&quot;mail_pass&quot;</span> : <span class="hljs-string">&quot;邮箱授权码&quot;</span>,<br>        <span class="hljs-string">&quot;sender&quot;</span> : <span class="hljs-string">&quot;14312400@qq.com&quot;</span>,<br>        <span class="hljs-string">&quot;receivers&quot;</span> : [<span class="hljs-string">&#x27;接收者邮箱1&#x27;</span>,<span class="hljs-string">&#x27;接收者邮箱2&#x27;</span>],<br>        <span class="hljs-string">&quot;title&quot;</span> : <span class="hljs-string">&#x27;工学云每日签到信息&#x27;</span><br>    &#125;<br><br>    gxy_sign(user_account_info,sign_info,email_info)<br>    <span class="hljs-comment"># 如果不需要发送邮箱服务输入False即可。</span><br>    <span class="hljs-comment"># gxy_sign(user_account_info,sign_info,False)</span><br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span> :<br>    main()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">自动签到脚本</summary>
    
    
    
    <category term="爬虫" scheme="https://tanblog.cc/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="python" scheme="https://tanblog.cc/tags/python/"/>
    
    <category term="爬虫" scheme="https://tanblog.cc/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
</feed>
